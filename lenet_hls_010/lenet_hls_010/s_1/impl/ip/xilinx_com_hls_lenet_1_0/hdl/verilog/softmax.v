// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_Addr_A,
        out_r_EN_A,
        out_r_WEN_A,
        out_r_Din_A,
        out_r_Dout_A,
        FC2_out_V_address0,
        FC2_out_V_ce0,
        FC2_out_V_q0
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_state9 = 35'd256;
parameter    ap_ST_fsm_state10 = 35'd512;
parameter    ap_ST_fsm_state11 = 35'd1024;
parameter    ap_ST_fsm_state12 = 35'd2048;
parameter    ap_ST_fsm_state13 = 35'd4096;
parameter    ap_ST_fsm_state14 = 35'd8192;
parameter    ap_ST_fsm_state15 = 35'd16384;
parameter    ap_ST_fsm_state16 = 35'd32768;
parameter    ap_ST_fsm_state17 = 35'd65536;
parameter    ap_ST_fsm_state18 = 35'd131072;
parameter    ap_ST_fsm_state19 = 35'd262144;
parameter    ap_ST_fsm_state20 = 35'd524288;
parameter    ap_ST_fsm_state21 = 35'd1048576;
parameter    ap_ST_fsm_state22 = 35'd2097152;
parameter    ap_ST_fsm_state23 = 35'd4194304;
parameter    ap_ST_fsm_state24 = 35'd8388608;
parameter    ap_ST_fsm_state25 = 35'd16777216;
parameter    ap_ST_fsm_state26 = 35'd33554432;
parameter    ap_ST_fsm_state27 = 35'd67108864;
parameter    ap_ST_fsm_state28 = 35'd134217728;
parameter    ap_ST_fsm_state29 = 35'd268435456;
parameter    ap_ST_fsm_state30 = 35'd536870912;
parameter    ap_ST_fsm_state31 = 35'd1073741824;
parameter    ap_ST_fsm_state32 = 35'd2147483648;
parameter    ap_ST_fsm_state33 = 35'd4294967296;
parameter    ap_ST_fsm_state34 = 35'd8589934592;
parameter    ap_ST_fsm_state35 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] out_r_Addr_A;
output   out_r_EN_A;
output  [3:0] out_r_WEN_A;
output  [31:0] out_r_Din_A;
input  [31:0] out_r_Dout_A;
output  [3:0] FC2_out_V_address0;
output   FC2_out_V_ce0;
input  [15:0] FC2_out_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_r_EN_A;
reg[3:0] out_r_WEN_A;
reg[31:0] out_r_Din_A;
reg[3:0] FC2_out_V_address0;
reg FC2_out_V_ce0;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln243_fu_197_p2;
wire   [3:0] i_fu_208_p2;
reg   [3:0] i_reg_575;
wire  signed [16:0] rhs_V_fu_214_p1;
reg  signed [16:0] rhs_V_reg_580;
wire   [15:0] select_ln245_fu_224_p3;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln251_fu_238_p1;
reg   [63:0] zext_ln251_reg_593;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln249_fu_232_p2;
wire   [3:0] i_1_fu_243_p2;
reg   [3:0] i_1_reg_603;
wire   [0:0] icmp_ln935_fu_258_p2;
reg   [0:0] icmp_ln935_reg_608;
wire    ap_CS_fsm_state6;
wire   [0:0] p_Result_6_fu_264_p3;
reg   [0:0] p_Result_6_reg_613;
wire   [16:0] tmp_V_4_fu_278_p3;
reg   [16:0] tmp_V_4_reg_618;
reg   [31:0] l_fu_304_p3;
reg   [31:0] l_reg_625;
wire   [7:0] trunc_ln943_fu_312_p1;
reg   [7:0] trunc_ln943_reg_630;
wire   [31:0] sub_ln944_fu_316_p2;
reg   [31:0] sub_ln944_reg_635;
wire    ap_CS_fsm_state7;
wire   [31:0] or_ln_fu_423_p3;
reg   [31:0] or_ln_reg_641;
wire   [0:0] icmp_ln958_fu_431_p2;
reg   [0:0] icmp_ln958_reg_646;
wire   [31:0] p_Result_8_fu_522_p5;
reg   [31:0] p_Result_8_reg_651;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [31:0] grp_fu_192_p2;
reg   [31:0] tmp_1_reg_661;
wire    ap_CS_fsm_state16;
wire   [31:0] grp_fu_182_p2;
wire    ap_CS_fsm_state20;
reg   [3:0] out_addr_reg_675;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln255_fu_545_p2;
wire   [3:0] i_2_fu_556_p2;
reg   [3:0] i_2_reg_680;
reg   [31:0] out_load_reg_685;
wire    ap_CS_fsm_state22;
wire   [31:0] grp_fu_187_p2;
reg   [31:0] tmp_reg_690;
wire    ap_CS_fsm_state34;
reg  signed [15:0] p_Val2_1_reg_127;
reg   [3:0] i_0_reg_137;
reg   [31:0] sum_0_reg_148;
reg   [3:0] i1_0_reg_160;
reg   [3:0] i2_0_reg_171;
wire    ap_CS_fsm_state35;
wire   [63:0] zext_ln245_fu_203_p1;
wire    ap_CS_fsm_state17;
wire   [63:0] zext_ln257_fu_551_p1;
reg   [31:0] out_r_Addr_A_orig;
wire    ap_CS_fsm_state23;
wire   [31:0] grp_fu_192_p1;
wire   [0:0] icmp_ln1494_fu_218_p2;
wire  signed [15:0] lhs_V_fu_249_p0;
wire  signed [16:0] lhs_V_fu_249_p1;
wire  signed [15:0] icmp_ln935_fu_258_p0;
wire   [16:0] tmp_V_3_fu_253_p2;
wire   [16:0] tmp_V_fu_272_p2;
reg   [16:0] p_Result_s_fu_286_p4;
wire   [31:0] p_Result_7_fu_296_p3;
wire   [31:0] lsb_index_fu_325_p2;
wire   [30:0] tmp_4_fu_331_p4;
wire   [4:0] trunc_ln947_fu_347_p1;
wire   [4:0] sub_ln947_fu_351_p2;
wire   [16:0] zext_ln947_fu_357_p1;
wire   [16:0] lshr_ln947_fu_361_p2;
wire   [16:0] p_Result_4_fu_367_p2;
wire   [0:0] icmp_ln947_fu_341_p2;
wire   [0:0] icmp_ln947_1_fu_372_p2;
wire   [0:0] tmp_5_fu_384_p3;
wire   [16:0] trunc_ln944_fu_321_p1;
wire   [16:0] add_ln949_fu_398_p2;
wire   [0:0] p_Result_3_fu_404_p3;
wire   [0:0] xor_ln949_fu_392_p2;
wire   [0:0] and_ln949_fu_411_p2;
wire   [0:0] a_fu_378_p2;
wire   [0:0] or_ln949_fu_417_p2;
wire   [31:0] m_fu_437_p1;
wire   [31:0] add_ln958_fu_440_p2;
wire   [31:0] sub_ln958_fu_451_p2;
wire   [31:0] lshr_ln958_fu_445_p2;
wire   [31:0] shl_ln958_fu_456_p2;
wire   [31:0] m_1_fu_462_p3;
wire   [31:0] m_2_fu_469_p2;
wire   [30:0] m_5_fu_474_p4;
wire   [0:0] tmp_6_fu_488_p3;
wire   [7:0] select_ln964_fu_496_p3;
wire   [7:0] sub_ln964_fu_504_p2;
wire   [7:0] add_ln964_fu_509_p2;
wire   [31:0] m_6_fu_484_p1;
wire   [8:0] tmp_3_fu_515_p3;
wire   [31:0] bitcast_ln739_fu_534_p1;
reg   [34:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
end

lenet_fadd_32ns_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_fadd_32ns_3hbi_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_0_reg_148),
    .din1(tmp_1_reg_661),
    .ce(1'b1),
    .dout(grp_fu_182_p2)
);

lenet_fdiv_32ns_3ibs #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_fdiv_32ns_3ibs_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(out_load_reg_685),
    .din1(sum_0_reg_148),
    .ce(1'b1),
    .dout(grp_fu_187_p2)
);

lenet_fexp_32ns_3jbC #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
lenet_fexp_32ns_3jbC_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(grp_fu_192_p1),
    .ce(1'b1),
    .dout(grp_fu_192_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i1_0_reg_160 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        i1_0_reg_160 <= i_1_reg_603;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln249_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i2_0_reg_171 <= 4'd1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i2_0_reg_171 <= i_2_reg_680;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_137 <= i_reg_575;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_reg_137 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_1_reg_127 <= select_ln245_fu_224_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Val2_1_reg_127 <= FC2_out_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        sum_0_reg_148 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sum_0_reg_148 <= grp_fu_182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln249_fu_232_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_1_reg_603 <= i_1_fu_243_p2;
        zext_ln251_reg_593[3 : 0] <= zext_ln251_fu_238_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln255_fu_545_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        i_2_reg_680 <= i_2_fu_556_p2;
        out_addr_reg_675 <= zext_ln257_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_197_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_reg_575 <= i_fu_208_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln935_reg_608 <= icmp_ln935_fu_258_p2;
        l_reg_625 <= l_fu_304_p3;
        p_Result_6_reg_613 <= tmp_V_3_fu_253_p2[32'd16];
        tmp_V_4_reg_618 <= tmp_V_4_fu_278_p3;
        trunc_ln943_reg_630 <= trunc_ln943_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_608 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        icmp_ln958_reg_646 <= icmp_ln958_fu_431_p2;
        or_ln_reg_641[0] <= or_ln_fu_423_p3[0];
        sub_ln944_reg_635 <= sub_ln944_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        out_load_reg_685 <= out_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_608 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        p_Result_8_reg_651 <= p_Result_8_fu_522_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        rhs_V_reg_580 <= rhs_V_fu_214_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_1_reg_661 <= grp_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_reg_690 <= grp_fu_187_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        FC2_out_V_address0 = zext_ln251_fu_238_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        FC2_out_V_address0 = zext_ln245_fu_203_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        FC2_out_V_address0 = 4'd0;
    end else begin
        FC2_out_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        FC2_out_V_ce0 = 1'b1;
    end else begin
        FC2_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln255_fu_545_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln255_fu_545_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_r_Addr_A_orig = out_addr_reg_675;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        out_r_Addr_A_orig = zext_ln257_fu_551_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_r_Addr_A_orig = zext_ln251_reg_593;
    end else begin
        out_r_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_r_Din_A = tmp_reg_690;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_r_Din_A = tmp_1_reg_661;
    end else begin
        out_r_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state21))) begin
        out_r_EN_A = 1'b1;
    end else begin
        out_r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state35))) begin
        out_r_WEN_A = 4'd15;
    end else begin
        out_r_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln243_fu_197_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln249_fu_232_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln255_fu_545_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_378_p2 = (icmp_ln947_fu_341_p2 & icmp_ln947_1_fu_372_p2);

assign add_ln949_fu_398_p2 = ($signed(17'd131048) + $signed(trunc_ln944_fu_321_p1));

assign add_ln958_fu_440_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_635));

assign add_ln964_fu_509_p2 = (select_ln964_fu_496_p3 + sub_ln964_fu_504_p2);

assign and_ln949_fu_411_p2 = (xor_ln949_fu_392_p2 & p_Result_3_fu_404_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln739_fu_534_p1 = p_Result_8_reg_651;

assign grp_fu_192_p1 = ((icmp_ln935_reg_608[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_534_p1);

assign i_1_fu_243_p2 = (4'd1 + i1_0_reg_160);

assign i_2_fu_556_p2 = (i2_0_reg_171 + 4'd1);

assign i_fu_208_p2 = (i_0_reg_137 + 4'd1);

assign icmp_ln1494_fu_218_p2 = (($signed(FC2_out_V_q0) > $signed(p_Val2_1_reg_127)) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_197_p2 = ((i_0_reg_137 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_232_p2 = ((i1_0_reg_160 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln255_fu_545_p2 = ((i2_0_reg_171 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_258_p0 = FC2_out_V_q0;

assign icmp_ln935_fu_258_p2 = ((icmp_ln935_fu_258_p0 == p_Val2_1_reg_127) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_372_p2 = ((p_Result_4_fu_367_p2 != 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_341_p2 = (($signed(tmp_4_fu_331_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_431_p2 = (($signed(lsb_index_fu_325_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_7_fu_296_p3) begin
    if (p_Result_7_fu_296_p3[0] == 1'b1) begin
        l_fu_304_p3 = 32'd0;
    end else if (p_Result_7_fu_296_p3[1] == 1'b1) begin
        l_fu_304_p3 = 32'd1;
    end else if (p_Result_7_fu_296_p3[2] == 1'b1) begin
        l_fu_304_p3 = 32'd2;
    end else if (p_Result_7_fu_296_p3[3] == 1'b1) begin
        l_fu_304_p3 = 32'd3;
    end else if (p_Result_7_fu_296_p3[4] == 1'b1) begin
        l_fu_304_p3 = 32'd4;
    end else if (p_Result_7_fu_296_p3[5] == 1'b1) begin
        l_fu_304_p3 = 32'd5;
    end else if (p_Result_7_fu_296_p3[6] == 1'b1) begin
        l_fu_304_p3 = 32'd6;
    end else if (p_Result_7_fu_296_p3[7] == 1'b1) begin
        l_fu_304_p3 = 32'd7;
    end else if (p_Result_7_fu_296_p3[8] == 1'b1) begin
        l_fu_304_p3 = 32'd8;
    end else if (p_Result_7_fu_296_p3[9] == 1'b1) begin
        l_fu_304_p3 = 32'd9;
    end else if (p_Result_7_fu_296_p3[10] == 1'b1) begin
        l_fu_304_p3 = 32'd10;
    end else if (p_Result_7_fu_296_p3[11] == 1'b1) begin
        l_fu_304_p3 = 32'd11;
    end else if (p_Result_7_fu_296_p3[12] == 1'b1) begin
        l_fu_304_p3 = 32'd12;
    end else if (p_Result_7_fu_296_p3[13] == 1'b1) begin
        l_fu_304_p3 = 32'd13;
    end else if (p_Result_7_fu_296_p3[14] == 1'b1) begin
        l_fu_304_p3 = 32'd14;
    end else if (p_Result_7_fu_296_p3[15] == 1'b1) begin
        l_fu_304_p3 = 32'd15;
    end else if (p_Result_7_fu_296_p3[16] == 1'b1) begin
        l_fu_304_p3 = 32'd16;
    end else if (p_Result_7_fu_296_p3[17] == 1'b1) begin
        l_fu_304_p3 = 32'd17;
    end else if (p_Result_7_fu_296_p3[18] == 1'b1) begin
        l_fu_304_p3 = 32'd18;
    end else if (p_Result_7_fu_296_p3[19] == 1'b1) begin
        l_fu_304_p3 = 32'd19;
    end else if (p_Result_7_fu_296_p3[20] == 1'b1) begin
        l_fu_304_p3 = 32'd20;
    end else if (p_Result_7_fu_296_p3[21] == 1'b1) begin
        l_fu_304_p3 = 32'd21;
    end else if (p_Result_7_fu_296_p3[22] == 1'b1) begin
        l_fu_304_p3 = 32'd22;
    end else if (p_Result_7_fu_296_p3[23] == 1'b1) begin
        l_fu_304_p3 = 32'd23;
    end else if (p_Result_7_fu_296_p3[24] == 1'b1) begin
        l_fu_304_p3 = 32'd24;
    end else if (p_Result_7_fu_296_p3[25] == 1'b1) begin
        l_fu_304_p3 = 32'd25;
    end else if (p_Result_7_fu_296_p3[26] == 1'b1) begin
        l_fu_304_p3 = 32'd26;
    end else if (p_Result_7_fu_296_p3[27] == 1'b1) begin
        l_fu_304_p3 = 32'd27;
    end else if (p_Result_7_fu_296_p3[28] == 1'b1) begin
        l_fu_304_p3 = 32'd28;
    end else if (p_Result_7_fu_296_p3[29] == 1'b1) begin
        l_fu_304_p3 = 32'd29;
    end else if (p_Result_7_fu_296_p3[30] == 1'b1) begin
        l_fu_304_p3 = 32'd30;
    end else if (p_Result_7_fu_296_p3[31] == 1'b1) begin
        l_fu_304_p3 = 32'd31;
    end else begin
        l_fu_304_p3 = 32'd32;
    end
end

assign lhs_V_fu_249_p0 = FC2_out_V_q0;

assign lhs_V_fu_249_p1 = lhs_V_fu_249_p0;

assign lsb_index_fu_325_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_316_p2));

assign lshr_ln947_fu_361_p2 = 17'd131071 >> zext_ln947_fu_357_p1;

assign lshr_ln958_fu_445_p2 = m_fu_437_p1 >> add_ln958_fu_440_p2;

assign m_1_fu_462_p3 = ((icmp_ln958_reg_646[0:0] === 1'b1) ? lshr_ln958_fu_445_p2 : shl_ln958_fu_456_p2);

assign m_2_fu_469_p2 = (m_1_fu_462_p3 + or_ln_reg_641);

assign m_5_fu_474_p4 = {{m_2_fu_469_p2[31:1]}};

assign m_6_fu_484_p1 = m_5_fu_474_p4;

assign m_fu_437_p1 = tmp_V_4_reg_618;

assign or_ln949_fu_417_p2 = (and_ln949_fu_411_p2 | a_fu_378_p2);

assign or_ln_fu_423_p3 = {{31'd0}, {or_ln949_fu_417_p2}};

assign out_r_Addr_A = out_r_Addr_A_orig << 32'd2;

assign p_Result_3_fu_404_p3 = tmp_V_4_reg_618[add_ln949_fu_398_p2];

assign p_Result_4_fu_367_p2 = (tmp_V_4_reg_618 & lshr_ln947_fu_361_p2);

assign p_Result_6_fu_264_p3 = tmp_V_3_fu_253_p2[32'd16];

assign p_Result_7_fu_296_p3 = {{15'd32767}, {p_Result_s_fu_286_p4}};

assign p_Result_8_fu_522_p5 = {{tmp_3_fu_515_p3}, {m_6_fu_484_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_278_p3) begin
    for (ap_tvar_int_0 = 17 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 16 - 0) begin
            p_Result_s_fu_286_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_286_p4[ap_tvar_int_0] = tmp_V_4_fu_278_p3[16 - ap_tvar_int_0];
        end
    end
end

assign rhs_V_fu_214_p1 = p_Val2_1_reg_127;

assign select_ln245_fu_224_p3 = ((icmp_ln1494_fu_218_p2[0:0] === 1'b1) ? FC2_out_V_q0 : p_Val2_1_reg_127);

assign select_ln964_fu_496_p3 = ((tmp_6_fu_488_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign shl_ln958_fu_456_p2 = m_fu_437_p1 << sub_ln958_fu_451_p2;

assign sub_ln944_fu_316_p2 = (32'd17 - l_reg_625);

assign sub_ln947_fu_351_p2 = (5'd10 - trunc_ln947_fu_347_p1);

assign sub_ln958_fu_451_p2 = (32'd25 - sub_ln944_reg_635);

assign sub_ln964_fu_504_p2 = (8'd7 - trunc_ln943_reg_630);

assign tmp_3_fu_515_p3 = {{p_Result_6_reg_613}, {add_ln964_fu_509_p2}};

assign tmp_4_fu_331_p4 = {{lsb_index_fu_325_p2[31:1]}};

assign tmp_5_fu_384_p3 = lsb_index_fu_325_p2[32'd31];

assign tmp_6_fu_488_p3 = m_2_fu_469_p2[32'd25];

assign tmp_V_3_fu_253_p2 = ($signed(lhs_V_fu_249_p1) - $signed(rhs_V_reg_580));

assign tmp_V_4_fu_278_p3 = ((p_Result_6_fu_264_p3[0:0] === 1'b1) ? tmp_V_fu_272_p2 : tmp_V_3_fu_253_p2);

assign tmp_V_fu_272_p2 = (17'd0 - tmp_V_3_fu_253_p2);

assign trunc_ln943_fu_312_p1 = l_fu_304_p3[7:0];

assign trunc_ln944_fu_321_p1 = sub_ln944_fu_316_p2[16:0];

assign trunc_ln947_fu_347_p1 = sub_ln944_fu_316_p2[4:0];

assign xor_ln949_fu_392_p2 = (tmp_5_fu_384_p3 ^ 1'd1);

assign zext_ln245_fu_203_p1 = i_0_reg_137;

assign zext_ln251_fu_238_p1 = i1_0_reg_160;

assign zext_ln257_fu_551_p1 = i2_0_reg_171;

assign zext_ln947_fu_357_p1 = sub_ln947_fu_351_p2;

always @ (posedge ap_clk) begin
    zext_ln251_reg_593[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    or_ln_reg_641[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //softmax
