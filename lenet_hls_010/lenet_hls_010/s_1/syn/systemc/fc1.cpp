// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> fc1::ap_ST_fsm_state1 = "1";
const sc_lv<6> fc1::ap_ST_fsm_state2 = "10";
const sc_lv<6> fc1::ap_ST_fsm_state3 = "100";
const sc_lv<6> fc1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> fc1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> fc1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> fc1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fc1::ap_const_lv32_1 = "1";
const sc_lv<1> fc1::ap_const_lv1_0 = "0";
const sc_lv<32> fc1::ap_const_lv32_2 = "10";
const sc_lv<32> fc1::ap_const_lv32_3 = "11";
const sc_lv<32> fc1::ap_const_lv32_4 = "100";
const sc_lv<7> fc1::ap_const_lv7_0 = "0000000";
const sc_lv<1> fc1::ap_const_lv1_1 = "1";
const sc_lv<16> fc1::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> fc1::ap_const_lv32_5 = "101";
const sc_lv<7> fc1::ap_const_lv7_54 = "1010100";
const sc_lv<7> fc1::ap_const_lv7_1 = "1";
const sc_lv<3> fc1::ap_const_lv3_0 = "000";
const sc_lv<7> fc1::ap_const_lv7_78 = "1111000";
const sc_lv<10> fc1::ap_const_lv10_0 = "0000000000";
const sc_lv<32> fc1::ap_const_lv32_A = "1010";
const sc_lv<32> fc1::ap_const_lv32_19 = "11001";
const sc_lv<32> fc1::ap_const_lv32_F = "1111";
const sc_lv<15> fc1::ap_const_lv15_0 = "000000000000000";
const bool fc1::ap_const_boolean_1 = true;

fc1::fc1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    FC1_W_V_U = new fc1_FC1_W_V("FC1_W_V_U");
    FC1_W_V_U->clk(ap_clk);
    FC1_W_V_U->reset(ap_rst);
    FC1_W_V_U->address0(FC1_W_V_address0);
    FC1_W_V_U->ce0(FC1_W_V_ce0);
    FC1_W_V_U->q0(FC1_W_V_q0);
    FC1_B_V_U = new fc1_FC1_B_V("FC1_B_V_U");
    FC1_B_V_U->clk(ap_clk);
    FC1_B_V_U->reset(ap_rst);
    FC1_B_V_U->address0(FC1_B_V_address0);
    FC1_B_V_U->ce0(FC1_B_V_ce0);
    FC1_B_V_U->q0(FC1_B_V_q0);
    lenet_mac_muladd_fYi_U25 = new lenet_mac_muladd_fYi<1,1,16,9,26,26>("lenet_mac_muladd_fYi_U25");
    lenet_mac_muladd_fYi_U25->din0(Re_out_V_q0);
    lenet_mac_muladd_fYi_U25->din1(FC1_W_V_q0);
    lenet_mac_muladd_fYi_U25->din2(grp_fu_319_p2);
    lenet_mac_muladd_fYi_U25->dout(grp_fu_319_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FC1_B_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln209_fu_268_p1 );

    SC_METHOD(thread_FC1_B_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FC1_W_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln1117_fu_226_p1 );

    SC_METHOD(thread_FC1_W_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_Re_out_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln203_fu_212_p1 );

    SC_METHOD(thread_Re_out_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln1117_fu_221_p2);
    sensitive << ( sub_ln1117_reg_336 );
    sensitive << ( zext_ln1117_3_fu_217_p1 );

    SC_METHOD(thread_add_ln1495_fu_292_p2);
    sensitive << ( trunc_ln703_fu_282_p1 );
    sensitive << ( sext_ln703_fu_278_p1 );

    SC_METHOD(thread_add_ln703_fu_286_p2);
    sensitive << ( out_V_q0 );
    sensitive << ( sext_ln1265_fu_274_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln207_fu_256_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln207_fu_256_p2 );

    SC_METHOD(thread_grp_fu_319_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_9_reg_118 );

    SC_METHOD(thread_i_4_fu_262_p2);
    sensitive << ( i1_0_reg_142 );

    SC_METHOD(thread_i_fu_159_p2);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_icmp_ln198_fu_153_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_icmp_ln201_fu_200_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_131 );

    SC_METHOD(thread_icmp_ln207_fu_256_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_142 );

    SC_METHOD(thread_j_fu_206_p2);
    sensitive << ( j_0_reg_131 );

    SC_METHOD(thread_out_V_address0);
    sensitive << ( out_V_addr_reg_341 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_V_addr_2_reg_377 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln209_fu_268_p1 );

    SC_METHOD(thread_out_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_out_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Val2_9_reg_118 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln210_fu_314_p1 );

    SC_METHOD(thread_out_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_select_ln210_fu_306_p3);
    sensitive << ( tmp_10_fu_298_p3 );
    sensitive << ( add_ln1495_fu_292_p2 );

    SC_METHOD(thread_sext_ln1117_fu_226_p1);
    sensitive << ( add_ln1117_fu_221_p2 );

    SC_METHOD(thread_sext_ln1265_fu_274_p0);
    sensitive << ( FC1_B_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sext_ln1265_fu_274_p1);
    sensitive << ( sext_ln1265_fu_274_p0 );

    SC_METHOD(thread_sext_ln703_fu_278_p0);
    sensitive << ( FC1_B_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sext_ln703_fu_278_p1);
    sensitive << ( sext_ln703_fu_278_p0 );

    SC_METHOD(thread_sub_ln1117_fu_194_p2);
    sensitive << ( zext_ln1117_fu_178_p1 );
    sensitive << ( zext_ln1117_2_fu_190_p1 );

    SC_METHOD(thread_tmp_10_fu_298_p3);
    sensitive << ( add_ln703_fu_286_p2 );

    SC_METHOD(thread_tmp_fu_170_p3);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_tmp_s_fu_182_p3);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_trunc_ln703_fu_282_p1);
    sensitive << ( out_V_q0 );

    SC_METHOD(thread_zext_ln1117_2_fu_190_p1);
    sensitive << ( tmp_s_fu_182_p3 );

    SC_METHOD(thread_zext_ln1117_3_fu_217_p1);
    sensitive << ( j_0_reg_131 );

    SC_METHOD(thread_zext_ln1117_fu_178_p1);
    sensitive << ( tmp_fu_170_p3 );

    SC_METHOD(thread_zext_ln200_fu_165_p1);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_zext_ln203_fu_212_p1);
    sensitive << ( j_0_reg_131 );

    SC_METHOD(thread_zext_ln209_fu_268_p1);
    sensitive << ( i1_0_reg_142 );

    SC_METHOD(thread_zext_ln210_fu_314_p1);
    sensitive << ( select_ln210_fu_306_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln198_fu_153_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln201_fu_200_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln207_fu_256_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_address0, "(port)out_V_address0");
    sc_trace(mVcdFile, out_V_ce0, "(port)out_V_ce0");
    sc_trace(mVcdFile, out_V_we0, "(port)out_V_we0");
    sc_trace(mVcdFile, out_V_d0, "(port)out_V_d0");
    sc_trace(mVcdFile, out_V_q0, "(port)out_V_q0");
    sc_trace(mVcdFile, Re_out_V_address0, "(port)Re_out_V_address0");
    sc_trace(mVcdFile, Re_out_V_ce0, "(port)Re_out_V_ce0");
    sc_trace(mVcdFile, Re_out_V_q0, "(port)Re_out_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, FC1_W_V_address0, "FC1_W_V_address0");
    sc_trace(mVcdFile, FC1_W_V_ce0, "FC1_W_V_ce0");
    sc_trace(mVcdFile, FC1_W_V_q0, "FC1_W_V_q0");
    sc_trace(mVcdFile, FC1_B_V_address0, "FC1_B_V_address0");
    sc_trace(mVcdFile, FC1_B_V_ce0, "FC1_B_V_ce0");
    sc_trace(mVcdFile, FC1_B_V_q0, "FC1_B_V_q0");
    sc_trace(mVcdFile, i_fu_159_p2, "i_fu_159_p2");
    sc_trace(mVcdFile, i_reg_331, "i_reg_331");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln1117_fu_194_p2, "sub_ln1117_fu_194_p2");
    sc_trace(mVcdFile, sub_ln1117_reg_336, "sub_ln1117_reg_336");
    sc_trace(mVcdFile, icmp_ln198_fu_153_p2, "icmp_ln198_fu_153_p2");
    sc_trace(mVcdFile, out_V_addr_reg_341, "out_V_addr_reg_341");
    sc_trace(mVcdFile, j_fu_206_p2, "j_fu_206_p2");
    sc_trace(mVcdFile, j_reg_349, "j_reg_349");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln201_fu_200_p2, "icmp_ln201_fu_200_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_4_fu_262_p2, "i_4_fu_262_p2");
    sc_trace(mVcdFile, i_4_reg_372, "i_4_reg_372");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, out_V_addr_2_reg_377, "out_V_addr_2_reg_377");
    sc_trace(mVcdFile, icmp_ln207_fu_256_p2, "icmp_ln207_fu_256_p2");
    sc_trace(mVcdFile, i_0_reg_107, "i_0_reg_107");
    sc_trace(mVcdFile, p_Val2_9_reg_118, "p_Val2_9_reg_118");
    sc_trace(mVcdFile, j_0_reg_131, "j_0_reg_131");
    sc_trace(mVcdFile, i1_0_reg_142, "i1_0_reg_142");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln200_fu_165_p1, "zext_ln200_fu_165_p1");
    sc_trace(mVcdFile, sext_ln1117_fu_226_p1, "sext_ln1117_fu_226_p1");
    sc_trace(mVcdFile, zext_ln203_fu_212_p1, "zext_ln203_fu_212_p1");
    sc_trace(mVcdFile, zext_ln209_fu_268_p1, "zext_ln209_fu_268_p1");
    sc_trace(mVcdFile, zext_ln210_fu_314_p1, "zext_ln210_fu_314_p1");
    sc_trace(mVcdFile, tmp_fu_170_p3, "tmp_fu_170_p3");
    sc_trace(mVcdFile, tmp_s_fu_182_p3, "tmp_s_fu_182_p3");
    sc_trace(mVcdFile, zext_ln1117_fu_178_p1, "zext_ln1117_fu_178_p1");
    sc_trace(mVcdFile, zext_ln1117_2_fu_190_p1, "zext_ln1117_2_fu_190_p1");
    sc_trace(mVcdFile, zext_ln1117_3_fu_217_p1, "zext_ln1117_3_fu_217_p1");
    sc_trace(mVcdFile, add_ln1117_fu_221_p2, "add_ln1117_fu_221_p2");
    sc_trace(mVcdFile, grp_fu_319_p3, "grp_fu_319_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_274_p0, "sext_ln1265_fu_274_p0");
    sc_trace(mVcdFile, sext_ln703_fu_278_p0, "sext_ln703_fu_278_p0");
    sc_trace(mVcdFile, sext_ln1265_fu_274_p1, "sext_ln1265_fu_274_p1");
    sc_trace(mVcdFile, trunc_ln703_fu_282_p1, "trunc_ln703_fu_282_p1");
    sc_trace(mVcdFile, sext_ln703_fu_278_p1, "sext_ln703_fu_278_p1");
    sc_trace(mVcdFile, add_ln703_fu_286_p2, "add_ln703_fu_286_p2");
    sc_trace(mVcdFile, tmp_10_fu_298_p3, "tmp_10_fu_298_p3");
    sc_trace(mVcdFile, add_ln1495_fu_292_p2, "add_ln1495_fu_292_p2");
    sc_trace(mVcdFile, select_ln210_fu_306_p3, "select_ln210_fu_306_p3");
    sc_trace(mVcdFile, grp_fu_319_p2, "grp_fu_319_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fc1::~fc1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete FC1_W_V_U;
    delete FC1_B_V_U;
    delete lenet_mac_muladd_fYi_U25;
}

void fc1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln198_fu_153_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_142 = ap_const_lv7_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i1_0_reg_142 = i_4_reg_372.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln201_fu_200_p2.read(), ap_const_lv1_1))) {
        i_0_reg_107 = i_reg_331.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_107 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_131 = j_reg_349.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln198_fu_153_p2.read(), ap_const_lv1_0))) {
        j_0_reg_131 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_9_reg_118 = grp_fu_319_p3.read().range(25, 10);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln198_fu_153_p2.read(), ap_const_lv1_0))) {
        p_Val2_9_reg_118 = ap_const_lv16_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_4_reg_372 = i_4_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_331 = i_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_349 = j_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln207_fu_256_p2.read()))) {
        out_V_addr_2_reg_377 =  (sc_lv<7>) (zext_ln209_fu_268_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln198_fu_153_p2.read(), ap_const_lv1_0))) {
        out_V_addr_reg_341 =  (sc_lv<7>) (zext_ln200_fu_165_p1.read());
        sub_ln1117_reg_336 = sub_ln1117_fu_194_p2.read();
    }
}

void fc1::thread_FC1_B_V_address0() {
    FC1_B_V_address0 =  (sc_lv<7>) (zext_ln209_fu_268_p1.read());
}

void fc1::thread_FC1_B_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FC1_B_V_ce0 = ap_const_logic_1;
    } else {
        FC1_B_V_ce0 = ap_const_logic_0;
    }
}

void fc1::thread_FC1_W_V_address0() {
    FC1_W_V_address0 =  (sc_lv<14>) (sext_ln1117_fu_226_p1.read());
}

void fc1::thread_FC1_W_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FC1_W_V_ce0 = ap_const_logic_1;
    } else {
        FC1_W_V_ce0 = ap_const_logic_0;
    }
}

void fc1::thread_Re_out_V_address0() {
    Re_out_V_address0 =  (sc_lv<7>) (zext_ln203_fu_212_p1.read());
}

void fc1::thread_Re_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Re_out_V_ce0 = ap_const_logic_1;
    } else {
        Re_out_V_ce0 = ap_const_logic_0;
    }
}

void fc1::thread_add_ln1117_fu_221_p2() {
    add_ln1117_fu_221_p2 = (!zext_ln1117_3_fu_217_p1.read().is_01() || !sub_ln1117_reg_336.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln1117_3_fu_217_p1.read()) + sc_biguint<15>(sub_ln1117_reg_336.read()));
}

void fc1::thread_add_ln1495_fu_292_p2() {
    add_ln1495_fu_292_p2 = (!trunc_ln703_fu_282_p1.read().is_01() || !sext_ln703_fu_278_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(trunc_ln703_fu_282_p1.read()) + sc_bigint<15>(sext_ln703_fu_278_p1.read()));
}

void fc1::thread_add_ln703_fu_286_p2() {
    add_ln703_fu_286_p2 = (!sext_ln1265_fu_274_p1.read().is_01() || !out_V_q0.read().is_01())? sc_lv<16>(): (sc_bigint<16>(sext_ln1265_fu_274_p1.read()) + sc_biguint<16>(out_V_q0.read()));
}

void fc1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fc1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fc1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fc1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fc1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln207_fu_256_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fc1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln207_fu_256_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc1::thread_grp_fu_319_p2() {
    grp_fu_319_p2 = esl_concat<16,10>(p_Val2_9_reg_118.read(), ap_const_lv10_0);
}

void fc1::thread_i_4_fu_262_p2() {
    i_4_fu_262_p2 = (!i1_0_reg_142.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i1_0_reg_142.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc1::thread_i_fu_159_p2() {
    i_fu_159_p2 = (!i_0_reg_107.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_107.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc1::thread_icmp_ln198_fu_153_p2() {
    icmp_ln198_fu_153_p2 = (!i_0_reg_107.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_107.read() == ap_const_lv7_54);
}

void fc1::thread_icmp_ln201_fu_200_p2() {
    icmp_ln201_fu_200_p2 = (!j_0_reg_131.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_131.read() == ap_const_lv7_78);
}

void fc1::thread_icmp_ln207_fu_256_p2() {
    icmp_ln207_fu_256_p2 = (!i1_0_reg_142.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_142.read() == ap_const_lv7_54);
}

void fc1::thread_j_fu_206_p2() {
    j_fu_206_p2 = (!j_0_reg_131.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_131.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc1::thread_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_V_address0 = out_V_addr_2_reg_377.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_V_address0 =  (sc_lv<7>) (zext_ln209_fu_268_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_V_address0 = out_V_addr_reg_341.read();
    } else {
        out_V_address0 = "XXXXXXX";
    }
}

void fc1::thread_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        out_V_ce0 = ap_const_logic_1;
    } else {
        out_V_ce0 = ap_const_logic_0;
    }
}

void fc1::thread_out_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_V_d0 = zext_ln210_fu_314_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_V_d0 = p_Val2_9_reg_118.read();
    } else {
        out_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc1::thread_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        out_V_we0 = ap_const_logic_1;
    } else {
        out_V_we0 = ap_const_logic_0;
    }
}

void fc1::thread_select_ln210_fu_306_p3() {
    select_ln210_fu_306_p3 = (!tmp_10_fu_298_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_10_fu_298_p3.read()[0].to_bool())? ap_const_lv15_0: add_ln1495_fu_292_p2.read());
}

void fc1::thread_sext_ln1117_fu_226_p1() {
    sext_ln1117_fu_226_p1 = esl_sext<64,15>(add_ln1117_fu_221_p2.read());
}

void fc1::thread_sext_ln1265_fu_274_p0() {
    sext_ln1265_fu_274_p0 = FC1_B_V_q0.read();
}

void fc1::thread_sext_ln1265_fu_274_p1() {
    sext_ln1265_fu_274_p1 = esl_sext<16,8>(sext_ln1265_fu_274_p0.read());
}

void fc1::thread_sext_ln703_fu_278_p0() {
    sext_ln703_fu_278_p0 = FC1_B_V_q0.read();
}

void fc1::thread_sext_ln703_fu_278_p1() {
    sext_ln703_fu_278_p1 = esl_sext<15,8>(sext_ln703_fu_278_p0.read());
}

void fc1::thread_sub_ln1117_fu_194_p2() {
    sub_ln1117_fu_194_p2 = (!zext_ln1117_fu_178_p1.read().is_01() || !zext_ln1117_2_fu_190_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(zext_ln1117_fu_178_p1.read()) - sc_biguint<15>(zext_ln1117_2_fu_190_p1.read()));
}

void fc1::thread_tmp_10_fu_298_p3() {
    tmp_10_fu_298_p3 = add_ln703_fu_286_p2.read().range(15, 15);
}

void fc1::thread_tmp_fu_170_p3() {
    tmp_fu_170_p3 = esl_concat<7,7>(i_0_reg_107.read(), ap_const_lv7_0);
}

void fc1::thread_tmp_s_fu_182_p3() {
    tmp_s_fu_182_p3 = esl_concat<7,3>(i_0_reg_107.read(), ap_const_lv3_0);
}

void fc1::thread_trunc_ln703_fu_282_p1() {
    trunc_ln703_fu_282_p1 = out_V_q0.read().range(15-1, 0);
}

void fc1::thread_zext_ln1117_2_fu_190_p1() {
    zext_ln1117_2_fu_190_p1 = esl_zext<15,10>(tmp_s_fu_182_p3.read());
}

void fc1::thread_zext_ln1117_3_fu_217_p1() {
    zext_ln1117_3_fu_217_p1 = esl_zext<15,7>(j_0_reg_131.read());
}

void fc1::thread_zext_ln1117_fu_178_p1() {
    zext_ln1117_fu_178_p1 = esl_zext<15,14>(tmp_fu_170_p3.read());
}

void fc1::thread_zext_ln200_fu_165_p1() {
    zext_ln200_fu_165_p1 = esl_zext<64,7>(i_0_reg_107.read());
}

void fc1::thread_zext_ln203_fu_212_p1() {
    zext_ln203_fu_212_p1 = esl_zext<64,7>(j_0_reg_131.read());
}

void fc1::thread_zext_ln209_fu_268_p1() {
    zext_ln209_fu_268_p1 = esl_zext<64,7>(i1_0_reg_142.read());
}

void fc1::thread_zext_ln210_fu_314_p1() {
    zext_ln210_fu_314_p1 = esl_zext<16,15>(select_ln210_fu_306_p3.read());
}

void fc1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln198_fu_153_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln201_fu_200_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln207_fu_256_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

