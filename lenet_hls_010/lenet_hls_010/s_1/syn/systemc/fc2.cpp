// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "fc2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic fc2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic fc2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> fc2::ap_ST_fsm_state1 = "1";
const sc_lv<6> fc2::ap_ST_fsm_state2 = "10";
const sc_lv<6> fc2::ap_ST_fsm_state3 = "100";
const sc_lv<6> fc2::ap_ST_fsm_state4 = "1000";
const sc_lv<6> fc2::ap_ST_fsm_state5 = "10000";
const sc_lv<6> fc2::ap_ST_fsm_state6 = "100000";
const sc_lv<32> fc2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> fc2::ap_const_lv32_1 = "1";
const sc_lv<1> fc2::ap_const_lv1_0 = "0";
const sc_lv<32> fc2::ap_const_lv32_2 = "10";
const sc_lv<32> fc2::ap_const_lv32_3 = "11";
const sc_lv<32> fc2::ap_const_lv32_4 = "100";
const sc_lv<4> fc2::ap_const_lv4_0 = "0000";
const sc_lv<1> fc2::ap_const_lv1_1 = "1";
const sc_lv<10> fc2::ap_const_lv10_0 = "0000000000";
const sc_lv<16> fc2::ap_const_lv16_0 = "0000000000000000";
const sc_lv<7> fc2::ap_const_lv7_0 = "0000000";
const sc_lv<32> fc2::ap_const_lv32_5 = "101";
const sc_lv<10> fc2::ap_const_lv10_54 = "1010100";
const sc_lv<4> fc2::ap_const_lv4_A = "1010";
const sc_lv<4> fc2::ap_const_lv4_1 = "1";
const sc_lv<7> fc2::ap_const_lv7_54 = "1010100";
const sc_lv<7> fc2::ap_const_lv7_1 = "1";
const sc_lv<32> fc2::ap_const_lv32_A = "1010";
const sc_lv<32> fc2::ap_const_lv32_19 = "11001";
const sc_lv<32> fc2::ap_const_lv32_F = "1111";
const sc_lv<15> fc2::ap_const_lv15_0 = "000000000000000";
const bool fc2::ap_const_boolean_1 = true;

fc2::fc2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    FC2_W_V_U = new fc2_FC2_W_V("FC2_W_V_U");
    FC2_W_V_U->clk(ap_clk);
    FC2_W_V_U->reset(ap_rst);
    FC2_W_V_U->address0(FC2_W_V_address0);
    FC2_W_V_U->ce0(FC2_W_V_ce0);
    FC2_W_V_U->q0(FC2_W_V_q0);
    FC2_B_V_U = new fc2_FC2_B_V("FC2_B_V_U");
    FC2_B_V_U->clk(ap_clk);
    FC2_B_V_U->reset(ap_rst);
    FC2_B_V_U->address0(FC2_B_V_address0);
    FC2_B_V_U->ce0(FC2_B_V_ce0);
    FC2_B_V_U->q0(FC2_B_V_q0);
    lenet_mac_muladd_g8j_U31 = new lenet_mac_muladd_g8j<1,1,16,10,26,26>("lenet_mac_muladd_g8j_U31");
    lenet_mac_muladd_g8j_U31->din0(FC1_out_V_q0);
    lenet_mac_muladd_g8j_U31->din1(FC2_W_V_q0);
    lenet_mac_muladd_g8j_U31->din2(grp_fu_308_p2);
    lenet_mac_muladd_g8j_U31->dout(grp_fu_308_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FC1_out_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln224_fu_200_p1 );

    SC_METHOD(thread_FC1_out_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_FC2_B_V_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln230_fu_257_p1 );

    SC_METHOD(thread_FC2_B_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_FC2_W_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln1117_1_fu_215_p1 );

    SC_METHOD(thread_FC2_W_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_add_ln1117_fu_209_p2);
    sensitive << ( phi_mul_reg_118 );
    sensitive << ( zext_ln1117_fu_205_p1 );

    SC_METHOD(thread_add_ln1495_fu_281_p2);
    sensitive << ( trunc_ln703_fu_271_p1 );
    sensitive << ( sext_ln703_fu_267_p1 );

    SC_METHOD(thread_add_ln219_fu_165_p2);
    sensitive << ( phi_mul_reg_118 );

    SC_METHOD(thread_add_ln703_fu_275_p2);
    sensitive << ( out_V_q0 );
    sensitive << ( sext_ln1265_fu_263_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln228_fu_245_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln228_fu_245_p2 );

    SC_METHOD(thread_grp_fu_308_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_6_reg_130 );

    SC_METHOD(thread_i_3_fu_251_p2);
    sensitive << ( i1_0_reg_154 );

    SC_METHOD(thread_i_fu_177_p2);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_icmp_ln219_fu_171_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_icmp_ln222_fu_188_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_icmp_ln228_fu_245_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_154 );

    SC_METHOD(thread_j_fu_194_p2);
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_out_V_address0);
    sensitive << ( out_V_addr_reg_330 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( out_V_addr_1_reg_366 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln230_fu_257_p1 );

    SC_METHOD(thread_out_V_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_out_V_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( p_Val2_6_reg_130 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln231_fu_303_p1 );

    SC_METHOD(thread_out_V_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_select_ln231_fu_295_p3);
    sensitive << ( tmp_fu_287_p3 );
    sensitive << ( add_ln1495_fu_281_p2 );

    SC_METHOD(thread_sext_ln1265_fu_263_p0);
    sensitive << ( FC2_B_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sext_ln1265_fu_263_p1);
    sensitive << ( sext_ln1265_fu_263_p0 );

    SC_METHOD(thread_sext_ln703_fu_267_p0);
    sensitive << ( FC2_B_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_sext_ln703_fu_267_p1);
    sensitive << ( sext_ln703_fu_267_p0 );

    SC_METHOD(thread_tmp_fu_287_p3);
    sensitive << ( add_ln703_fu_275_p2 );

    SC_METHOD(thread_trunc_ln703_fu_271_p1);
    sensitive << ( out_V_q0 );

    SC_METHOD(thread_zext_ln1117_1_fu_215_p1);
    sensitive << ( add_ln1117_fu_209_p2 );

    SC_METHOD(thread_zext_ln1117_fu_205_p1);
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_zext_ln221_fu_183_p1);
    sensitive << ( i_0_reg_107 );

    SC_METHOD(thread_zext_ln224_fu_200_p1);
    sensitive << ( j_0_reg_143 );

    SC_METHOD(thread_zext_ln230_fu_257_p1);
    sensitive << ( i1_0_reg_154 );

    SC_METHOD(thread_zext_ln231_fu_303_p1);
    sensitive << ( select_ln231_fu_295_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln219_fu_171_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln222_fu_188_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln228_fu_245_p2 );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "fc2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_address0, "(port)out_V_address0");
    sc_trace(mVcdFile, out_V_ce0, "(port)out_V_ce0");
    sc_trace(mVcdFile, out_V_we0, "(port)out_V_we0");
    sc_trace(mVcdFile, out_V_d0, "(port)out_V_d0");
    sc_trace(mVcdFile, out_V_q0, "(port)out_V_q0");
    sc_trace(mVcdFile, FC1_out_V_address0, "(port)FC1_out_V_address0");
    sc_trace(mVcdFile, FC1_out_V_ce0, "(port)FC1_out_V_ce0");
    sc_trace(mVcdFile, FC1_out_V_q0, "(port)FC1_out_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, FC2_W_V_address0, "FC2_W_V_address0");
    sc_trace(mVcdFile, FC2_W_V_ce0, "FC2_W_V_ce0");
    sc_trace(mVcdFile, FC2_W_V_q0, "FC2_W_V_q0");
    sc_trace(mVcdFile, FC2_B_V_address0, "FC2_B_V_address0");
    sc_trace(mVcdFile, FC2_B_V_ce0, "FC2_B_V_ce0");
    sc_trace(mVcdFile, FC2_B_V_q0, "FC2_B_V_q0");
    sc_trace(mVcdFile, add_ln219_fu_165_p2, "add_ln219_fu_165_p2");
    sc_trace(mVcdFile, add_ln219_reg_317, "add_ln219_reg_317");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_177_p2, "i_fu_177_p2");
    sc_trace(mVcdFile, i_reg_325, "i_reg_325");
    sc_trace(mVcdFile, out_V_addr_reg_330, "out_V_addr_reg_330");
    sc_trace(mVcdFile, icmp_ln219_fu_171_p2, "icmp_ln219_fu_171_p2");
    sc_trace(mVcdFile, j_fu_194_p2, "j_fu_194_p2");
    sc_trace(mVcdFile, j_reg_338, "j_reg_338");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln222_fu_188_p2, "icmp_ln222_fu_188_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_3_fu_251_p2, "i_3_fu_251_p2");
    sc_trace(mVcdFile, i_3_reg_361, "i_3_reg_361");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, out_V_addr_1_reg_366, "out_V_addr_1_reg_366");
    sc_trace(mVcdFile, icmp_ln228_fu_245_p2, "icmp_ln228_fu_245_p2");
    sc_trace(mVcdFile, i_0_reg_107, "i_0_reg_107");
    sc_trace(mVcdFile, phi_mul_reg_118, "phi_mul_reg_118");
    sc_trace(mVcdFile, p_Val2_6_reg_130, "p_Val2_6_reg_130");
    sc_trace(mVcdFile, j_0_reg_143, "j_0_reg_143");
    sc_trace(mVcdFile, i1_0_reg_154, "i1_0_reg_154");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln221_fu_183_p1, "zext_ln221_fu_183_p1");
    sc_trace(mVcdFile, zext_ln1117_1_fu_215_p1, "zext_ln1117_1_fu_215_p1");
    sc_trace(mVcdFile, zext_ln224_fu_200_p1, "zext_ln224_fu_200_p1");
    sc_trace(mVcdFile, zext_ln230_fu_257_p1, "zext_ln230_fu_257_p1");
    sc_trace(mVcdFile, zext_ln231_fu_303_p1, "zext_ln231_fu_303_p1");
    sc_trace(mVcdFile, zext_ln1117_fu_205_p1, "zext_ln1117_fu_205_p1");
    sc_trace(mVcdFile, add_ln1117_fu_209_p2, "add_ln1117_fu_209_p2");
    sc_trace(mVcdFile, grp_fu_308_p3, "grp_fu_308_p3");
    sc_trace(mVcdFile, sext_ln1265_fu_263_p0, "sext_ln1265_fu_263_p0");
    sc_trace(mVcdFile, sext_ln703_fu_267_p0, "sext_ln703_fu_267_p0");
    sc_trace(mVcdFile, sext_ln1265_fu_263_p1, "sext_ln1265_fu_263_p1");
    sc_trace(mVcdFile, trunc_ln703_fu_271_p1, "trunc_ln703_fu_271_p1");
    sc_trace(mVcdFile, sext_ln703_fu_267_p1, "sext_ln703_fu_267_p1");
    sc_trace(mVcdFile, add_ln703_fu_275_p2, "add_ln703_fu_275_p2");
    sc_trace(mVcdFile, tmp_fu_287_p3, "tmp_fu_287_p3");
    sc_trace(mVcdFile, add_ln1495_fu_281_p2, "add_ln1495_fu_281_p2");
    sc_trace(mVcdFile, select_ln231_fu_295_p3, "select_ln231_fu_295_p3");
    sc_trace(mVcdFile, grp_fu_308_p2, "grp_fu_308_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

fc2::~fc2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete FC2_W_V_U;
    delete FC2_B_V_U;
    delete lenet_mac_muladd_g8j_U31;
}

void fc2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln219_fu_171_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_154 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i1_0_reg_154 = i_3_reg_361.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln222_fu_188_p2.read(), ap_const_lv1_1))) {
        i_0_reg_107 = i_reg_325.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_107 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_143 = j_reg_338.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln219_fu_171_p2.read(), ap_const_lv1_0))) {
        j_0_reg_143 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_6_reg_130 = grp_fu_308_p3.read().range(25, 10);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln219_fu_171_p2.read(), ap_const_lv1_0))) {
        p_Val2_6_reg_130 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln222_fu_188_p2.read(), ap_const_lv1_1))) {
        phi_mul_reg_118 = add_ln219_reg_317.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_mul_reg_118 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln219_reg_317 = add_ln219_fu_165_p2.read();
        i_reg_325 = i_fu_177_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_3_reg_361 = i_3_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_338 = j_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln228_fu_245_p2.read()))) {
        out_V_addr_1_reg_366 =  (sc_lv<4>) (zext_ln230_fu_257_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln219_fu_171_p2.read(), ap_const_lv1_0))) {
        out_V_addr_reg_330 =  (sc_lv<4>) (zext_ln221_fu_183_p1.read());
    }
}

void fc2::thread_FC1_out_V_address0() {
    FC1_out_V_address0 =  (sc_lv<7>) (zext_ln224_fu_200_p1.read());
}

void fc2::thread_FC1_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FC1_out_V_ce0 = ap_const_logic_1;
    } else {
        FC1_out_V_ce0 = ap_const_logic_0;
    }
}

void fc2::thread_FC2_B_V_address0() {
    FC2_B_V_address0 =  (sc_lv<4>) (zext_ln230_fu_257_p1.read());
}

void fc2::thread_FC2_B_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FC2_B_V_ce0 = ap_const_logic_1;
    } else {
        FC2_B_V_ce0 = ap_const_logic_0;
    }
}

void fc2::thread_FC2_W_V_address0() {
    FC2_W_V_address0 =  (sc_lv<10>) (zext_ln1117_1_fu_215_p1.read());
}

void fc2::thread_FC2_W_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FC2_W_V_ce0 = ap_const_logic_1;
    } else {
        FC2_W_V_ce0 = ap_const_logic_0;
    }
}

void fc2::thread_add_ln1117_fu_209_p2() {
    add_ln1117_fu_209_p2 = (!zext_ln1117_fu_205_p1.read().is_01() || !phi_mul_reg_118.read().is_01())? sc_lv<10>(): (sc_biguint<10>(zext_ln1117_fu_205_p1.read()) + sc_biguint<10>(phi_mul_reg_118.read()));
}

void fc2::thread_add_ln1495_fu_281_p2() {
    add_ln1495_fu_281_p2 = (!trunc_ln703_fu_271_p1.read().is_01() || !sext_ln703_fu_267_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(trunc_ln703_fu_271_p1.read()) + sc_bigint<15>(sext_ln703_fu_267_p1.read()));
}

void fc2::thread_add_ln219_fu_165_p2() {
    add_ln219_fu_165_p2 = (!phi_mul_reg_118.read().is_01() || !ap_const_lv10_54.is_01())? sc_lv<10>(): (sc_biguint<10>(phi_mul_reg_118.read()) + sc_biguint<10>(ap_const_lv10_54));
}

void fc2::thread_add_ln703_fu_275_p2() {
    add_ln703_fu_275_p2 = (!sext_ln1265_fu_263_p1.read().is_01() || !out_V_q0.read().is_01())? sc_lv<16>(): (sc_bigint<16>(sext_ln1265_fu_263_p1.read()) + sc_biguint<16>(out_V_q0.read()));
}

void fc2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void fc2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void fc2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void fc2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void fc2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void fc2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void fc2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(icmp_ln228_fu_245_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void fc2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void fc2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln228_fu_245_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void fc2::thread_grp_fu_308_p2() {
    grp_fu_308_p2 = esl_concat<16,10>(p_Val2_6_reg_130.read(), ap_const_lv10_0);
}

void fc2::thread_i_3_fu_251_p2() {
    i_3_fu_251_p2 = (!i1_0_reg_154.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_154.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc2::thread_i_fu_177_p2() {
    i_fu_177_p2 = (!i_0_reg_107.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_107.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void fc2::thread_icmp_ln219_fu_171_p2() {
    icmp_ln219_fu_171_p2 = (!i_0_reg_107.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_107.read() == ap_const_lv4_A);
}

void fc2::thread_icmp_ln222_fu_188_p2() {
    icmp_ln222_fu_188_p2 = (!j_0_reg_143.read().is_01() || !ap_const_lv7_54.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_143.read() == ap_const_lv7_54);
}

void fc2::thread_icmp_ln228_fu_245_p2() {
    icmp_ln228_fu_245_p2 = (!i1_0_reg_154.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_154.read() == ap_const_lv4_A);
}

void fc2::thread_j_fu_194_p2() {
    j_fu_194_p2 = (!j_0_reg_143.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(j_0_reg_143.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void fc2::thread_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_V_address0 = out_V_addr_1_reg_366.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_V_address0 =  (sc_lv<4>) (zext_ln230_fu_257_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_V_address0 = out_V_addr_reg_330.read();
    } else {
        out_V_address0 = "XXXX";
    }
}

void fc2::thread_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        out_V_ce0 = ap_const_logic_1;
    } else {
        out_V_ce0 = ap_const_logic_0;
    }
}

void fc2::thread_out_V_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        out_V_d0 = zext_ln231_fu_303_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        out_V_d0 = p_Val2_6_reg_130.read();
    } else {
        out_V_d0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void fc2::thread_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        out_V_we0 = ap_const_logic_1;
    } else {
        out_V_we0 = ap_const_logic_0;
    }
}

void fc2::thread_select_ln231_fu_295_p3() {
    select_ln231_fu_295_p3 = (!tmp_fu_287_p3.read()[0].is_01())? sc_lv<15>(): ((tmp_fu_287_p3.read()[0].to_bool())? ap_const_lv15_0: add_ln1495_fu_281_p2.read());
}

void fc2::thread_sext_ln1265_fu_263_p0() {
    sext_ln1265_fu_263_p0 = FC2_B_V_q0.read();
}

void fc2::thread_sext_ln1265_fu_263_p1() {
    sext_ln1265_fu_263_p1 = esl_sext<16,8>(sext_ln1265_fu_263_p0.read());
}

void fc2::thread_sext_ln703_fu_267_p0() {
    sext_ln703_fu_267_p0 = FC2_B_V_q0.read();
}

void fc2::thread_sext_ln703_fu_267_p1() {
    sext_ln703_fu_267_p1 = esl_sext<15,8>(sext_ln703_fu_267_p0.read());
}

void fc2::thread_tmp_fu_287_p3() {
    tmp_fu_287_p3 = add_ln703_fu_275_p2.read().range(15, 15);
}

void fc2::thread_trunc_ln703_fu_271_p1() {
    trunc_ln703_fu_271_p1 = out_V_q0.read().range(15-1, 0);
}

void fc2::thread_zext_ln1117_1_fu_215_p1() {
    zext_ln1117_1_fu_215_p1 = esl_zext<64,10>(add_ln1117_fu_209_p2.read());
}

void fc2::thread_zext_ln1117_fu_205_p1() {
    zext_ln1117_fu_205_p1 = esl_zext<10,7>(j_0_reg_143.read());
}

void fc2::thread_zext_ln221_fu_183_p1() {
    zext_ln221_fu_183_p1 = esl_zext<64,4>(i_0_reg_107.read());
}

void fc2::thread_zext_ln224_fu_200_p1() {
    zext_ln224_fu_200_p1 = esl_zext<64,7>(j_0_reg_143.read());
}

void fc2::thread_zext_ln230_fu_257_p1() {
    zext_ln230_fu_257_p1 = esl_zext<64,4>(i1_0_reg_154.read());
}

void fc2::thread_zext_ln231_fu_303_p1() {
    zext_ln231_fu_303_p1 = esl_zext<16,15>(select_ln231_fu_295_p3.read());
}

void fc2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln219_fu_171_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln222_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln228_fu_245_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

