// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<35> softmax::ap_ST_fsm_state1 = "1";
const sc_lv<35> softmax::ap_ST_fsm_state2 = "10";
const sc_lv<35> softmax::ap_ST_fsm_state3 = "100";
const sc_lv<35> softmax::ap_ST_fsm_state4 = "1000";
const sc_lv<35> softmax::ap_ST_fsm_state5 = "10000";
const sc_lv<35> softmax::ap_ST_fsm_state6 = "100000";
const sc_lv<35> softmax::ap_ST_fsm_state7 = "1000000";
const sc_lv<35> softmax::ap_ST_fsm_state8 = "10000000";
const sc_lv<35> softmax::ap_ST_fsm_state9 = "100000000";
const sc_lv<35> softmax::ap_ST_fsm_state10 = "1000000000";
const sc_lv<35> softmax::ap_ST_fsm_state11 = "10000000000";
const sc_lv<35> softmax::ap_ST_fsm_state12 = "100000000000";
const sc_lv<35> softmax::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<35> softmax::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<32> softmax::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> softmax::ap_const_lv32_1 = "1";
const sc_lv<32> softmax::ap_const_lv32_2 = "10";
const sc_lv<1> softmax::ap_const_lv1_0 = "0";
const sc_lv<1> softmax::ap_const_lv1_1 = "1";
const sc_lv<32> softmax::ap_const_lv32_3 = "11";
const sc_lv<32> softmax::ap_const_lv32_4 = "100";
const sc_lv<32> softmax::ap_const_lv32_5 = "101";
const sc_lv<32> softmax::ap_const_lv32_6 = "110";
const sc_lv<32> softmax::ap_const_lv32_7 = "111";
const sc_lv<32> softmax::ap_const_lv32_8 = "1000";
const sc_lv<32> softmax::ap_const_lv32_F = "1111";
const sc_lv<32> softmax::ap_const_lv32_13 = "10011";
const sc_lv<32> softmax::ap_const_lv32_14 = "10100";
const sc_lv<32> softmax::ap_const_lv32_15 = "10101";
const sc_lv<32> softmax::ap_const_lv32_21 = "100001";
const sc_lv<4> softmax::ap_const_lv4_1 = "1";
const sc_lv<32> softmax::ap_const_lv32_22 = "100010";
const sc_lv<32> softmax::ap_const_lv32_10 = "10000";
const sc_lv<4> softmax::ap_const_lv4_0 = "0000";
const sc_lv<4> softmax::ap_const_lv4_F = "1111";
const sc_lv<32> softmax::ap_const_lv32_16 = "10110";
const sc_lv<4> softmax::ap_const_lv4_A = "1010";
const sc_lv<17> softmax::ap_const_lv17_0 = "00000000000000000";
const sc_lv<15> softmax::ap_const_lv15_7FFF = "111111111111111";
const sc_lv<32> softmax::ap_const_lv32_11 = "10001";
const sc_lv<32> softmax::ap_const_lv32_FFFFFFE8 = "11111111111111111111111111101000";
const sc_lv<32> softmax::ap_const_lv32_1F = "11111";
const sc_lv<31> softmax::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<5> softmax::ap_const_lv5_A = "1010";
const sc_lv<17> softmax::ap_const_lv17_1FFFF = "11111111111111111";
const sc_lv<17> softmax::ap_const_lv17_1FFE8 = "11111111111101000";
const sc_lv<32> softmax::ap_const_lv32_FFFFFFE7 = "11111111111111111111111111100111";
const sc_lv<32> softmax::ap_const_lv32_19 = "11001";
const sc_lv<8> softmax::ap_const_lv8_7F = "1111111";
const sc_lv<8> softmax::ap_const_lv8_7E = "1111110";
const sc_lv<8> softmax::ap_const_lv8_7 = "111";
const sc_lv<32> softmax::ap_const_lv32_17 = "10111";
const bool softmax::ap_const_boolean_1 = true;

softmax::softmax(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lenet_fadd_32ns_3hbi_U37 = new lenet_fadd_32ns_3hbi<1,4,32,32,32>("lenet_fadd_32ns_3hbi_U37");
    lenet_fadd_32ns_3hbi_U37->clk(ap_clk);
    lenet_fadd_32ns_3hbi_U37->reset(ap_rst);
    lenet_fadd_32ns_3hbi_U37->din0(sum_0_reg_148);
    lenet_fadd_32ns_3hbi_U37->din1(tmp_1_reg_661);
    lenet_fadd_32ns_3hbi_U37->ce(ap_var_for_const0);
    lenet_fadd_32ns_3hbi_U37->dout(grp_fu_182_p2);
    lenet_fdiv_32ns_3ibs_U38 = new lenet_fdiv_32ns_3ibs<1,12,32,32,32>("lenet_fdiv_32ns_3ibs_U38");
    lenet_fdiv_32ns_3ibs_U38->clk(ap_clk);
    lenet_fdiv_32ns_3ibs_U38->reset(ap_rst);
    lenet_fdiv_32ns_3ibs_U38->din0(out_load_reg_685);
    lenet_fdiv_32ns_3ibs_U38->din1(sum_0_reg_148);
    lenet_fdiv_32ns_3ibs_U38->ce(ap_var_for_const0);
    lenet_fdiv_32ns_3ibs_U38->dout(grp_fu_187_p2);
    lenet_fexp_32ns_3jbC_U39 = new lenet_fexp_32ns_3jbC<1,8,32,32,32>("lenet_fexp_32ns_3jbC_U39");
    lenet_fexp_32ns_3jbC_U39->clk(ap_clk);
    lenet_fexp_32ns_3jbC_U39->reset(ap_rst);
    lenet_fexp_32ns_3jbC_U39->din0(ap_var_for_const1);
    lenet_fexp_32ns_3jbC_U39->din1(grp_fu_192_p1);
    lenet_fexp_32ns_3jbC_U39->ce(ap_var_for_const0);
    lenet_fexp_32ns_3jbC_U39->dout(grp_fu_192_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_FC2_out_V_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln251_fu_238_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln245_fu_203_p1 );

    SC_METHOD(thread_FC2_out_V_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_fu_378_p2);
    sensitive << ( icmp_ln947_fu_341_p2 );
    sensitive << ( icmp_ln947_1_fu_372_p2 );

    SC_METHOD(thread_add_ln949_fu_398_p2);
    sensitive << ( trunc_ln944_fu_321_p1 );

    SC_METHOD(thread_add_ln958_fu_440_p2);
    sensitive << ( sub_ln944_reg_635 );

    SC_METHOD(thread_add_ln964_fu_509_p2);
    sensitive << ( select_ln964_fu_496_p3 );
    sensitive << ( sub_ln964_fu_504_p2 );

    SC_METHOD(thread_and_ln949_fu_411_p2);
    sensitive << ( p_Result_3_fu_404_p3 );
    sensitive << ( xor_ln949_fu_392_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln255_fu_545_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln255_fu_545_p2 );

    SC_METHOD(thread_bitcast_ln739_fu_534_p1);
    sensitive << ( p_Result_8_reg_651 );

    SC_METHOD(thread_grp_fu_192_p1);
    sensitive << ( icmp_ln935_reg_608 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( bitcast_ln739_fu_534_p1 );

    SC_METHOD(thread_i_1_fu_243_p2);
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_i_2_fu_556_p2);
    sensitive << ( i2_0_reg_171 );

    SC_METHOD(thread_i_fu_208_p2);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_icmp_ln1494_fu_218_p2);
    sensitive << ( FC2_out_V_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( p_Val2_1_reg_127 );

    SC_METHOD(thread_icmp_ln243_fu_197_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_icmp_ln249_fu_232_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_icmp_ln255_fu_545_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( i2_0_reg_171 );

    SC_METHOD(thread_icmp_ln935_fu_258_p0);
    sensitive << ( FC2_out_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln935_fu_258_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( p_Val2_1_reg_127 );
    sensitive << ( icmp_ln935_fu_258_p0 );

    SC_METHOD(thread_icmp_ln947_1_fu_372_p2);
    sensitive << ( icmp_ln935_reg_608 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( p_Result_4_fu_367_p2 );

    SC_METHOD(thread_icmp_ln947_fu_341_p2);
    sensitive << ( icmp_ln935_reg_608 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( tmp_4_fu_331_p4 );

    SC_METHOD(thread_icmp_ln958_fu_431_p2);
    sensitive << ( icmp_ln935_reg_608 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( lsb_index_fu_325_p2 );

    SC_METHOD(thread_l_fu_304_p3);
    sensitive << ( p_Result_7_fu_296_p3 );

    SC_METHOD(thread_lhs_V_fu_249_p0);
    sensitive << ( FC2_out_V_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_lhs_V_fu_249_p1);
    sensitive << ( lhs_V_fu_249_p0 );

    SC_METHOD(thread_lsb_index_fu_325_p2);
    sensitive << ( sub_ln944_fu_316_p2 );

    SC_METHOD(thread_lshr_ln947_fu_361_p2);
    sensitive << ( zext_ln947_fu_357_p1 );

    SC_METHOD(thread_lshr_ln958_fu_445_p2);
    sensitive << ( m_fu_437_p1 );
    sensitive << ( add_ln958_fu_440_p2 );

    SC_METHOD(thread_m_1_fu_462_p3);
    sensitive << ( icmp_ln958_reg_646 );
    sensitive << ( lshr_ln958_fu_445_p2 );
    sensitive << ( shl_ln958_fu_456_p2 );

    SC_METHOD(thread_m_2_fu_469_p2);
    sensitive << ( or_ln_reg_641 );
    sensitive << ( m_1_fu_462_p3 );

    SC_METHOD(thread_m_5_fu_474_p4);
    sensitive << ( m_2_fu_469_p2 );

    SC_METHOD(thread_m_6_fu_484_p1);
    sensitive << ( m_5_fu_474_p4 );

    SC_METHOD(thread_m_fu_437_p1);
    sensitive << ( tmp_V_4_reg_618 );

    SC_METHOD(thread_or_ln949_fu_417_p2);
    sensitive << ( and_ln949_fu_411_p2 );
    sensitive << ( a_fu_378_p2 );

    SC_METHOD(thread_or_ln_fu_423_p3);
    sensitive << ( or_ln949_fu_417_p2 );

    SC_METHOD(thread_out_r_Addr_A);
    sensitive << ( out_r_Addr_A_orig );

    SC_METHOD(thread_out_r_Addr_A_orig);
    sensitive << ( zext_ln251_reg_593 );
    sensitive << ( out_addr_reg_675 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( zext_ln257_fu_551_p1 );

    SC_METHOD(thread_out_r_Din_A);
    sensitive << ( tmp_1_reg_661 );
    sensitive << ( tmp_reg_690 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_out_r_EN_A);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_out_r_WEN_A);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_p_Result_3_fu_404_p3);
    sensitive << ( tmp_V_4_reg_618 );
    sensitive << ( add_ln949_fu_398_p2 );

    SC_METHOD(thread_p_Result_4_fu_367_p2);
    sensitive << ( tmp_V_4_reg_618 );
    sensitive << ( lshr_ln947_fu_361_p2 );

    SC_METHOD(thread_p_Result_6_fu_264_p3);
    sensitive << ( tmp_V_3_fu_253_p2 );

    SC_METHOD(thread_p_Result_7_fu_296_p3);
    sensitive << ( p_Result_s_fu_286_p4 );

    SC_METHOD(thread_p_Result_8_fu_522_p5);
    sensitive << ( m_6_fu_484_p1 );
    sensitive << ( tmp_3_fu_515_p3 );

    SC_METHOD(thread_p_Result_s_fu_286_p4);
    sensitive << ( tmp_V_4_fu_278_p3 );

    SC_METHOD(thread_rhs_V_fu_214_p1);
    sensitive << ( p_Val2_1_reg_127 );

    SC_METHOD(thread_select_ln245_fu_224_p3);
    sensitive << ( FC2_out_V_q0 );
    sensitive << ( p_Val2_1_reg_127 );
    sensitive << ( icmp_ln1494_fu_218_p2 );

    SC_METHOD(thread_select_ln964_fu_496_p3);
    sensitive << ( tmp_6_fu_488_p3 );

    SC_METHOD(thread_shl_ln958_fu_456_p2);
    sensitive << ( m_fu_437_p1 );
    sensitive << ( sub_ln958_fu_451_p2 );

    SC_METHOD(thread_sub_ln944_fu_316_p2);
    sensitive << ( l_reg_625 );

    SC_METHOD(thread_sub_ln947_fu_351_p2);
    sensitive << ( trunc_ln947_fu_347_p1 );

    SC_METHOD(thread_sub_ln958_fu_451_p2);
    sensitive << ( sub_ln944_reg_635 );

    SC_METHOD(thread_sub_ln964_fu_504_p2);
    sensitive << ( trunc_ln943_reg_630 );

    SC_METHOD(thread_tmp_3_fu_515_p3);
    sensitive << ( p_Result_6_reg_613 );
    sensitive << ( add_ln964_fu_509_p2 );

    SC_METHOD(thread_tmp_4_fu_331_p4);
    sensitive << ( lsb_index_fu_325_p2 );

    SC_METHOD(thread_tmp_5_fu_384_p3);
    sensitive << ( lsb_index_fu_325_p2 );

    SC_METHOD(thread_tmp_6_fu_488_p3);
    sensitive << ( m_2_fu_469_p2 );

    SC_METHOD(thread_tmp_V_3_fu_253_p2);
    sensitive << ( rhs_V_reg_580 );
    sensitive << ( lhs_V_fu_249_p1 );

    SC_METHOD(thread_tmp_V_4_fu_278_p3);
    sensitive << ( p_Result_6_fu_264_p3 );
    sensitive << ( tmp_V_3_fu_253_p2 );
    sensitive << ( tmp_V_fu_272_p2 );

    SC_METHOD(thread_tmp_V_fu_272_p2);
    sensitive << ( tmp_V_3_fu_253_p2 );

    SC_METHOD(thread_trunc_ln943_fu_312_p1);
    sensitive << ( l_fu_304_p3 );

    SC_METHOD(thread_trunc_ln944_fu_321_p1);
    sensitive << ( sub_ln944_fu_316_p2 );

    SC_METHOD(thread_trunc_ln947_fu_347_p1);
    sensitive << ( sub_ln944_fu_316_p2 );

    SC_METHOD(thread_xor_ln949_fu_392_p2);
    sensitive << ( tmp_5_fu_384_p3 );

    SC_METHOD(thread_zext_ln245_fu_203_p1);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_zext_ln251_fu_238_p1);
    sensitive << ( i1_0_reg_160 );

    SC_METHOD(thread_zext_ln257_fu_551_p1);
    sensitive << ( i2_0_reg_171 );

    SC_METHOD(thread_zext_ln947_fu_357_p1);
    sensitive << ( sub_ln947_fu_351_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln243_fu_197_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln249_fu_232_p2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( icmp_ln255_fu_545_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "00000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_r_Addr_A, "(port)out_r_Addr_A");
    sc_trace(mVcdFile, out_r_EN_A, "(port)out_r_EN_A");
    sc_trace(mVcdFile, out_r_WEN_A, "(port)out_r_WEN_A");
    sc_trace(mVcdFile, out_r_Din_A, "(port)out_r_Din_A");
    sc_trace(mVcdFile, out_r_Dout_A, "(port)out_r_Dout_A");
    sc_trace(mVcdFile, FC2_out_V_address0, "(port)FC2_out_V_address0");
    sc_trace(mVcdFile, FC2_out_V_ce0, "(port)FC2_out_V_ce0");
    sc_trace(mVcdFile, FC2_out_V_q0, "(port)FC2_out_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln243_fu_197_p2, "icmp_ln243_fu_197_p2");
    sc_trace(mVcdFile, i_fu_208_p2, "i_fu_208_p2");
    sc_trace(mVcdFile, i_reg_575, "i_reg_575");
    sc_trace(mVcdFile, rhs_V_fu_214_p1, "rhs_V_fu_214_p1");
    sc_trace(mVcdFile, rhs_V_reg_580, "rhs_V_reg_580");
    sc_trace(mVcdFile, select_ln245_fu_224_p3, "select_ln245_fu_224_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln251_fu_238_p1, "zext_ln251_fu_238_p1");
    sc_trace(mVcdFile, zext_ln251_reg_593, "zext_ln251_reg_593");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln249_fu_232_p2, "icmp_ln249_fu_232_p2");
    sc_trace(mVcdFile, i_1_fu_243_p2, "i_1_fu_243_p2");
    sc_trace(mVcdFile, i_1_reg_603, "i_1_reg_603");
    sc_trace(mVcdFile, icmp_ln935_fu_258_p2, "icmp_ln935_fu_258_p2");
    sc_trace(mVcdFile, icmp_ln935_reg_608, "icmp_ln935_reg_608");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, p_Result_6_fu_264_p3, "p_Result_6_fu_264_p3");
    sc_trace(mVcdFile, p_Result_6_reg_613, "p_Result_6_reg_613");
    sc_trace(mVcdFile, tmp_V_4_fu_278_p3, "tmp_V_4_fu_278_p3");
    sc_trace(mVcdFile, tmp_V_4_reg_618, "tmp_V_4_reg_618");
    sc_trace(mVcdFile, l_fu_304_p3, "l_fu_304_p3");
    sc_trace(mVcdFile, l_reg_625, "l_reg_625");
    sc_trace(mVcdFile, trunc_ln943_fu_312_p1, "trunc_ln943_fu_312_p1");
    sc_trace(mVcdFile, trunc_ln943_reg_630, "trunc_ln943_reg_630");
    sc_trace(mVcdFile, sub_ln944_fu_316_p2, "sub_ln944_fu_316_p2");
    sc_trace(mVcdFile, sub_ln944_reg_635, "sub_ln944_reg_635");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, or_ln_fu_423_p3, "or_ln_fu_423_p3");
    sc_trace(mVcdFile, or_ln_reg_641, "or_ln_reg_641");
    sc_trace(mVcdFile, icmp_ln958_fu_431_p2, "icmp_ln958_fu_431_p2");
    sc_trace(mVcdFile, icmp_ln958_reg_646, "icmp_ln958_reg_646");
    sc_trace(mVcdFile, p_Result_8_fu_522_p5, "p_Result_8_fu_522_p5");
    sc_trace(mVcdFile, p_Result_8_reg_651, "p_Result_8_reg_651");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_192_p2, "grp_fu_192_p2");
    sc_trace(mVcdFile, tmp_1_reg_661, "tmp_1_reg_661");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_182_p2, "grp_fu_182_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, out_addr_reg_675, "out_addr_reg_675");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, icmp_ln255_fu_545_p2, "icmp_ln255_fu_545_p2");
    sc_trace(mVcdFile, i_2_fu_556_p2, "i_2_fu_556_p2");
    sc_trace(mVcdFile, i_2_reg_680, "i_2_reg_680");
    sc_trace(mVcdFile, out_load_reg_685, "out_load_reg_685");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_187_p2, "grp_fu_187_p2");
    sc_trace(mVcdFile, tmp_reg_690, "tmp_reg_690");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, p_Val2_1_reg_127, "p_Val2_1_reg_127");
    sc_trace(mVcdFile, i_0_reg_137, "i_0_reg_137");
    sc_trace(mVcdFile, sum_0_reg_148, "sum_0_reg_148");
    sc_trace(mVcdFile, i1_0_reg_160, "i1_0_reg_160");
    sc_trace(mVcdFile, i2_0_reg_171, "i2_0_reg_171");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, zext_ln245_fu_203_p1, "zext_ln245_fu_203_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, zext_ln257_fu_551_p1, "zext_ln257_fu_551_p1");
    sc_trace(mVcdFile, out_r_Addr_A_orig, "out_r_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_fu_192_p1, "grp_fu_192_p1");
    sc_trace(mVcdFile, icmp_ln1494_fu_218_p2, "icmp_ln1494_fu_218_p2");
    sc_trace(mVcdFile, lhs_V_fu_249_p0, "lhs_V_fu_249_p0");
    sc_trace(mVcdFile, lhs_V_fu_249_p1, "lhs_V_fu_249_p1");
    sc_trace(mVcdFile, icmp_ln935_fu_258_p0, "icmp_ln935_fu_258_p0");
    sc_trace(mVcdFile, tmp_V_3_fu_253_p2, "tmp_V_3_fu_253_p2");
    sc_trace(mVcdFile, tmp_V_fu_272_p2, "tmp_V_fu_272_p2");
    sc_trace(mVcdFile, p_Result_s_fu_286_p4, "p_Result_s_fu_286_p4");
    sc_trace(mVcdFile, p_Result_7_fu_296_p3, "p_Result_7_fu_296_p3");
    sc_trace(mVcdFile, lsb_index_fu_325_p2, "lsb_index_fu_325_p2");
    sc_trace(mVcdFile, tmp_4_fu_331_p4, "tmp_4_fu_331_p4");
    sc_trace(mVcdFile, trunc_ln947_fu_347_p1, "trunc_ln947_fu_347_p1");
    sc_trace(mVcdFile, sub_ln947_fu_351_p2, "sub_ln947_fu_351_p2");
    sc_trace(mVcdFile, zext_ln947_fu_357_p1, "zext_ln947_fu_357_p1");
    sc_trace(mVcdFile, lshr_ln947_fu_361_p2, "lshr_ln947_fu_361_p2");
    sc_trace(mVcdFile, p_Result_4_fu_367_p2, "p_Result_4_fu_367_p2");
    sc_trace(mVcdFile, icmp_ln947_fu_341_p2, "icmp_ln947_fu_341_p2");
    sc_trace(mVcdFile, icmp_ln947_1_fu_372_p2, "icmp_ln947_1_fu_372_p2");
    sc_trace(mVcdFile, tmp_5_fu_384_p3, "tmp_5_fu_384_p3");
    sc_trace(mVcdFile, trunc_ln944_fu_321_p1, "trunc_ln944_fu_321_p1");
    sc_trace(mVcdFile, add_ln949_fu_398_p2, "add_ln949_fu_398_p2");
    sc_trace(mVcdFile, p_Result_3_fu_404_p3, "p_Result_3_fu_404_p3");
    sc_trace(mVcdFile, xor_ln949_fu_392_p2, "xor_ln949_fu_392_p2");
    sc_trace(mVcdFile, and_ln949_fu_411_p2, "and_ln949_fu_411_p2");
    sc_trace(mVcdFile, a_fu_378_p2, "a_fu_378_p2");
    sc_trace(mVcdFile, or_ln949_fu_417_p2, "or_ln949_fu_417_p2");
    sc_trace(mVcdFile, m_fu_437_p1, "m_fu_437_p1");
    sc_trace(mVcdFile, add_ln958_fu_440_p2, "add_ln958_fu_440_p2");
    sc_trace(mVcdFile, sub_ln958_fu_451_p2, "sub_ln958_fu_451_p2");
    sc_trace(mVcdFile, lshr_ln958_fu_445_p2, "lshr_ln958_fu_445_p2");
    sc_trace(mVcdFile, shl_ln958_fu_456_p2, "shl_ln958_fu_456_p2");
    sc_trace(mVcdFile, m_1_fu_462_p3, "m_1_fu_462_p3");
    sc_trace(mVcdFile, m_2_fu_469_p2, "m_2_fu_469_p2");
    sc_trace(mVcdFile, m_5_fu_474_p4, "m_5_fu_474_p4");
    sc_trace(mVcdFile, tmp_6_fu_488_p3, "tmp_6_fu_488_p3");
    sc_trace(mVcdFile, select_ln964_fu_496_p3, "select_ln964_fu_496_p3");
    sc_trace(mVcdFile, sub_ln964_fu_504_p2, "sub_ln964_fu_504_p2");
    sc_trace(mVcdFile, add_ln964_fu_509_p2, "add_ln964_fu_509_p2");
    sc_trace(mVcdFile, m_6_fu_484_p1, "m_6_fu_484_p1");
    sc_trace(mVcdFile, tmp_3_fu_515_p3, "tmp_3_fu_515_p3");
    sc_trace(mVcdFile, bitcast_ln739_fu_534_p1, "bitcast_ln739_fu_534_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

softmax::~softmax() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete lenet_fadd_32ns_3hbi_U37;
    delete lenet_fdiv_32ns_3ibs_U38;
    delete lenet_fexp_32ns_3jbC_U39;
}

void softmax::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void softmax::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void softmax::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln243_fu_197_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_160 = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        i1_0_reg_160 = i_1_reg_603.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln249_fu_232_p2.read()))) {
        i2_0_reg_171 = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        i2_0_reg_171 = i_2_reg_680.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_reg_137 = i_reg_575.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_0_reg_137 = ap_const_lv4_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        p_Val2_1_reg_127 = select_ln245_fu_224_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        p_Val2_1_reg_127 = FC2_out_V_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln243_fu_197_p2.read(), ap_const_lv1_1))) {
        sum_0_reg_148 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        sum_0_reg_148 = grp_fu_182_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln249_fu_232_p2.read()))) {
        i_1_reg_603 = i_1_fu_243_p2.read();
        zext_ln251_reg_593 = zext_ln251_fu_238_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln255_fu_545_p2.read()))) {
        i_2_reg_680 = i_2_fu_556_p2.read();
        out_addr_reg_675 =  (sc_lv<4>) (zext_ln257_fu_551_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln243_fu_197_p2.read(), ap_const_lv1_0))) {
        i_reg_575 = i_fu_208_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        icmp_ln935_reg_608 = icmp_ln935_fu_258_p2.read();
        l_reg_625 = l_fu_304_p3.read();
        p_Result_6_reg_613 = tmp_V_3_fu_253_p2.read().range(16, 16);
        tmp_V_4_reg_618 = tmp_V_4_fu_278_p3.read();
        trunc_ln943_reg_630 = trunc_ln943_fu_312_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_608.read()))) {
        icmp_ln958_reg_646 = icmp_ln958_fu_431_p2.read();
        or_ln_reg_641 = or_ln_fu_423_p3.read();
        sub_ln944_reg_635 = sub_ln944_fu_316_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        out_load_reg_685 = out_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln935_reg_608.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        p_Result_8_reg_651 = p_Result_8_fu_522_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln243_fu_197_p2.read(), ap_const_lv1_1))) {
        rhs_V_reg_580 = rhs_V_fu_214_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_1_reg_661 = grp_fu_192_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read())) {
        tmp_reg_690 = grp_fu_187_p2.read();
    }
}

void softmax::thread_FC2_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        FC2_out_V_address0 =  (sc_lv<4>) (zext_ln251_fu_238_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        FC2_out_V_address0 =  (sc_lv<4>) (zext_ln245_fu_203_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        FC2_out_V_address0 = ap_const_lv4_0;
    } else {
        FC2_out_V_address0 = "XXXX";
    }
}

void softmax::thread_FC2_out_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        FC2_out_V_ce0 = ap_const_logic_1;
    } else {
        FC2_out_V_ce0 = ap_const_logic_0;
    }
}

void softmax::thread_a_fu_378_p2() {
    a_fu_378_p2 = (icmp_ln947_fu_341_p2.read() & icmp_ln947_1_fu_372_p2.read());
}

void softmax::thread_add_ln949_fu_398_p2() {
    add_ln949_fu_398_p2 = (!ap_const_lv17_1FFE8.is_01() || !trunc_ln944_fu_321_p1.read().is_01())? sc_lv<17>(): (sc_bigint<17>(ap_const_lv17_1FFE8) + sc_biguint<17>(trunc_ln944_fu_321_p1.read()));
}

void softmax::thread_add_ln958_fu_440_p2() {
    add_ln958_fu_440_p2 = (!ap_const_lv32_FFFFFFE7.is_01() || !sub_ln944_reg_635.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE7) + sc_biguint<32>(sub_ln944_reg_635.read()));
}

void softmax::thread_add_ln964_fu_509_p2() {
    add_ln964_fu_509_p2 = (!select_ln964_fu_496_p3.read().is_01() || !sub_ln964_fu_504_p2.read().is_01())? sc_lv<8>(): (sc_biguint<8>(select_ln964_fu_496_p3.read()) + sc_biguint<8>(sub_ln964_fu_504_p2.read()));
}

void softmax::thread_and_ln949_fu_411_p2() {
    and_ln949_fu_411_p2 = (p_Result_3_fu_404_p3.read() & xor_ln949_fu_392_p2.read());
}

void softmax::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void softmax::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void softmax::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void softmax::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void softmax::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void softmax::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void softmax::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void softmax::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void softmax::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void softmax::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void softmax::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void softmax::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void softmax::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void softmax::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void softmax::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void softmax::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void softmax::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void softmax::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln255_fu_545_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void softmax::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln255_fu_545_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax::thread_bitcast_ln739_fu_534_p1() {
    bitcast_ln739_fu_534_p1 = p_Result_8_reg_651.read();
}

void softmax::thread_grp_fu_192_p1() {
    grp_fu_192_p1 = (!icmp_ln935_reg_608.read()[0].is_01())? sc_lv<32>(): ((icmp_ln935_reg_608.read()[0].to_bool())? ap_const_lv32_0: bitcast_ln739_fu_534_p1.read());
}

void softmax::thread_i_1_fu_243_p2() {
    i_1_fu_243_p2 = (!ap_const_lv4_1.is_01() || !i1_0_reg_160.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_1) + sc_biguint<4>(i1_0_reg_160.read()));
}

void softmax::thread_i_2_fu_556_p2() {
    i_2_fu_556_p2 = (!i2_0_reg_171.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_0_reg_171.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void softmax::thread_i_fu_208_p2() {
    i_fu_208_p2 = (!i_0_reg_137.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_137.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void softmax::thread_icmp_ln1494_fu_218_p2() {
    icmp_ln1494_fu_218_p2 = (!FC2_out_V_q0.read().is_01() || !p_Val2_1_reg_127.read().is_01())? sc_lv<1>(): (sc_bigint<16>(FC2_out_V_q0.read()) > sc_bigint<16>(p_Val2_1_reg_127.read()));
}

void softmax::thread_icmp_ln243_fu_197_p2() {
    icmp_ln243_fu_197_p2 = (!i_0_reg_137.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_137.read() == ap_const_lv4_A);
}

void softmax::thread_icmp_ln249_fu_232_p2() {
    icmp_ln249_fu_232_p2 = (!i1_0_reg_160.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_160.read() == ap_const_lv4_A);
}

void softmax::thread_icmp_ln255_fu_545_p2() {
    icmp_ln255_fu_545_p2 = (!i2_0_reg_171.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_171.read() == ap_const_lv4_A);
}

void softmax::thread_icmp_ln935_fu_258_p0() {
    icmp_ln935_fu_258_p0 = FC2_out_V_q0.read();
}

void softmax::thread_icmp_ln935_fu_258_p2() {
    icmp_ln935_fu_258_p2 = (!icmp_ln935_fu_258_p0.read().is_01() || !p_Val2_1_reg_127.read().is_01())? sc_lv<1>(): sc_lv<1>(icmp_ln935_fu_258_p0.read() == p_Val2_1_reg_127.read());
}

void softmax::thread_icmp_ln947_1_fu_372_p2() {
    icmp_ln947_1_fu_372_p2 = (!p_Result_4_fu_367_p2.read().is_01() || !ap_const_lv17_0.is_01())? sc_lv<1>(): sc_lv<1>(p_Result_4_fu_367_p2.read() != ap_const_lv17_0);
}

void softmax::thread_icmp_ln947_fu_341_p2() {
    icmp_ln947_fu_341_p2 = (!tmp_4_fu_331_p4.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_4_fu_331_p4.read()) > sc_bigint<31>(ap_const_lv31_0));
}

void softmax::thread_icmp_ln958_fu_431_p2() {
    icmp_ln958_fu_431_p2 = (!lsb_index_fu_325_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(lsb_index_fu_325_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void softmax::thread_l_fu_304_p3() {
    l_fu_304_p3 = esl_cttz<32,32>(p_Result_7_fu_296_p3.read());
}

void softmax::thread_lhs_V_fu_249_p0() {
    lhs_V_fu_249_p0 = FC2_out_V_q0.read();
}

void softmax::thread_lhs_V_fu_249_p1() {
    lhs_V_fu_249_p1 = esl_sext<17,16>(lhs_V_fu_249_p0.read());
}

void softmax::thread_lsb_index_fu_325_p2() {
    lsb_index_fu_325_p2 = (!ap_const_lv32_FFFFFFE8.is_01() || !sub_ln944_fu_316_p2.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFE8) + sc_biguint<32>(sub_ln944_fu_316_p2.read()));
}

void softmax::thread_lshr_ln947_fu_361_p2() {
    lshr_ln947_fu_361_p2 = (!zext_ln947_fu_357_p1.read().is_01())? sc_lv<17>(): ap_const_lv17_1FFFF >> (unsigned short)zext_ln947_fu_357_p1.read().to_uint();
}

void softmax::thread_lshr_ln958_fu_445_p2() {
    lshr_ln958_fu_445_p2 = (!add_ln958_fu_440_p2.read().is_01())? sc_lv<32>(): m_fu_437_p1.read() >> (unsigned short)add_ln958_fu_440_p2.read().to_uint();
}

void softmax::thread_m_1_fu_462_p3() {
    m_1_fu_462_p3 = (!icmp_ln958_reg_646.read()[0].is_01())? sc_lv<32>(): ((icmp_ln958_reg_646.read()[0].to_bool())? lshr_ln958_fu_445_p2.read(): shl_ln958_fu_456_p2.read());
}

void softmax::thread_m_2_fu_469_p2() {
    m_2_fu_469_p2 = (!m_1_fu_462_p3.read().is_01() || !or_ln_reg_641.read().is_01())? sc_lv<32>(): (sc_biguint<32>(m_1_fu_462_p3.read()) + sc_biguint<32>(or_ln_reg_641.read()));
}

void softmax::thread_m_5_fu_474_p4() {
    m_5_fu_474_p4 = m_2_fu_469_p2.read().range(31, 1);
}

void softmax::thread_m_6_fu_484_p1() {
    m_6_fu_484_p1 = esl_zext<32,31>(m_5_fu_474_p4.read());
}

void softmax::thread_m_fu_437_p1() {
    m_fu_437_p1 = esl_zext<32,17>(tmp_V_4_reg_618.read());
}

void softmax::thread_or_ln949_fu_417_p2() {
    or_ln949_fu_417_p2 = (and_ln949_fu_411_p2.read() | a_fu_378_p2.read());
}

void softmax::thread_or_ln_fu_423_p3() {
    or_ln_fu_423_p3 = esl_concat<31,1>(ap_const_lv31_0, or_ln949_fu_417_p2.read());
}

void softmax::thread_out_r_Addr_A() {
    out_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): out_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void softmax::thread_out_r_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        out_r_Addr_A_orig =  (sc_lv<32>) (out_addr_reg_675.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        out_r_Addr_A_orig =  (sc_lv<32>) (zext_ln257_fu_551_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        out_r_Addr_A_orig =  (sc_lv<32>) (zext_ln251_reg_593.read());
    } else {
        out_r_Addr_A_orig =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void softmax::thread_out_r_Din_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        out_r_Din_A = tmp_reg_690.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        out_r_Din_A = tmp_1_reg_661.read();
    } else {
        out_r_Din_A =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void softmax::thread_out_r_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        out_r_EN_A = ap_const_logic_1;
    } else {
        out_r_EN_A = ap_const_logic_0;
    }
}

void softmax::thread_out_r_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        out_r_WEN_A = ap_const_lv4_F;
    } else {
        out_r_WEN_A = ap_const_lv4_0;
    }
}

void softmax::thread_p_Result_3_fu_404_p3() {
    p_Result_3_fu_404_p3 = (!add_ln949_fu_398_p2.read().is_01() || sc_biguint<17>(add_ln949_fu_398_p2.read()).to_uint() >= 17)? sc_lv<1>(): tmp_V_4_reg_618.read().range(sc_biguint<17>(add_ln949_fu_398_p2.read()).to_uint(), sc_biguint<17>(add_ln949_fu_398_p2.read()).to_uint());
}

void softmax::thread_p_Result_4_fu_367_p2() {
    p_Result_4_fu_367_p2 = (tmp_V_4_reg_618.read() & lshr_ln947_fu_361_p2.read());
}

void softmax::thread_p_Result_6_fu_264_p3() {
    p_Result_6_fu_264_p3 = tmp_V_3_fu_253_p2.read().range(16, 16);
}

void softmax::thread_p_Result_7_fu_296_p3() {
    p_Result_7_fu_296_p3 = esl_concat<15,17>(ap_const_lv15_7FFF, p_Result_s_fu_286_p4.read());
}

void softmax::thread_p_Result_8_fu_522_p5() {
    p_Result_8_fu_522_p5 = esl_partset<32,32,9,32,32>(m_6_fu_484_p1.read(), tmp_3_fu_515_p3.read(), ap_const_lv32_17, ap_const_lv32_1F);
}

void softmax::thread_p_Result_s_fu_286_p4() {
    p_Result_s_fu_286_p4 = tmp_V_4_fu_278_p3.read().range(0, 16);
}

void softmax::thread_rhs_V_fu_214_p1() {
    rhs_V_fu_214_p1 = esl_sext<17,16>(p_Val2_1_reg_127.read());
}

void softmax::thread_select_ln245_fu_224_p3() {
    select_ln245_fu_224_p3 = (!icmp_ln1494_fu_218_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1494_fu_218_p2.read()[0].to_bool())? FC2_out_V_q0.read(): p_Val2_1_reg_127.read());
}

void softmax::thread_select_ln964_fu_496_p3() {
    select_ln964_fu_496_p3 = (!tmp_6_fu_488_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_6_fu_488_p3.read()[0].to_bool())? ap_const_lv8_7F: ap_const_lv8_7E);
}

void softmax::thread_shl_ln958_fu_456_p2() {
    shl_ln958_fu_456_p2 = (!sub_ln958_fu_451_p2.read().is_01())? sc_lv<32>(): m_fu_437_p1.read() << (unsigned short)sub_ln958_fu_451_p2.read().to_uint();
}

void softmax::thread_sub_ln944_fu_316_p2() {
    sub_ln944_fu_316_p2 = (!ap_const_lv32_11.is_01() || !l_reg_625.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_11) - sc_biguint<32>(l_reg_625.read()));
}

void softmax::thread_sub_ln947_fu_351_p2() {
    sub_ln947_fu_351_p2 = (!ap_const_lv5_A.is_01() || !trunc_ln947_fu_347_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_A) - sc_biguint<5>(trunc_ln947_fu_347_p1.read()));
}

void softmax::thread_sub_ln958_fu_451_p2() {
    sub_ln958_fu_451_p2 = (!ap_const_lv32_19.is_01() || !sub_ln944_reg_635.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_19) - sc_biguint<32>(sub_ln944_reg_635.read()));
}

void softmax::thread_sub_ln964_fu_504_p2() {
    sub_ln964_fu_504_p2 = (!ap_const_lv8_7.is_01() || !trunc_ln943_reg_630.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7) - sc_biguint<8>(trunc_ln943_reg_630.read()));
}

void softmax::thread_tmp_3_fu_515_p3() {
    tmp_3_fu_515_p3 = esl_concat<1,8>(p_Result_6_reg_613.read(), add_ln964_fu_509_p2.read());
}

void softmax::thread_tmp_4_fu_331_p4() {
    tmp_4_fu_331_p4 = lsb_index_fu_325_p2.read().range(31, 1);
}

void softmax::thread_tmp_5_fu_384_p3() {
    tmp_5_fu_384_p3 = lsb_index_fu_325_p2.read().range(31, 31);
}

void softmax::thread_tmp_6_fu_488_p3() {
    tmp_6_fu_488_p3 = m_2_fu_469_p2.read().range(25, 25);
}

void softmax::thread_tmp_V_3_fu_253_p2() {
    tmp_V_3_fu_253_p2 = (!lhs_V_fu_249_p1.read().is_01() || !rhs_V_reg_580.read().is_01())? sc_lv<17>(): (sc_bigint<17>(lhs_V_fu_249_p1.read()) - sc_bigint<17>(rhs_V_reg_580.read()));
}

void softmax::thread_tmp_V_4_fu_278_p3() {
    tmp_V_4_fu_278_p3 = (!p_Result_6_fu_264_p3.read()[0].is_01())? sc_lv<17>(): ((p_Result_6_fu_264_p3.read()[0].to_bool())? tmp_V_fu_272_p2.read(): tmp_V_3_fu_253_p2.read());
}

void softmax::thread_tmp_V_fu_272_p2() {
    tmp_V_fu_272_p2 = (!ap_const_lv17_0.is_01() || !tmp_V_3_fu_253_p2.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_biguint<17>(tmp_V_3_fu_253_p2.read()));
}

void softmax::thread_trunc_ln943_fu_312_p1() {
    trunc_ln943_fu_312_p1 = l_fu_304_p3.read().range(8-1, 0);
}

void softmax::thread_trunc_ln944_fu_321_p1() {
    trunc_ln944_fu_321_p1 = sub_ln944_fu_316_p2.read().range(17-1, 0);
}

void softmax::thread_trunc_ln947_fu_347_p1() {
    trunc_ln947_fu_347_p1 = sub_ln944_fu_316_p2.read().range(5-1, 0);
}

void softmax::thread_xor_ln949_fu_392_p2() {
    xor_ln949_fu_392_p2 = (tmp_5_fu_384_p3.read() ^ ap_const_lv1_1);
}

void softmax::thread_zext_ln245_fu_203_p1() {
    zext_ln245_fu_203_p1 = esl_zext<64,4>(i_0_reg_137.read());
}

void softmax::thread_zext_ln251_fu_238_p1() {
    zext_ln251_fu_238_p1 = esl_zext<64,4>(i1_0_reg_160.read());
}

void softmax::thread_zext_ln257_fu_551_p1() {
    zext_ln257_fu_551_p1 = esl_zext<64,4>(i2_0_reg_171.read());
}

void softmax::thread_zext_ln947_fu_357_p1() {
    zext_ln947_fu_357_p1 = esl_zext<17,5>(sub_ln947_fu_351_p2.read());
}

void softmax::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln243_fu_197_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln249_fu_232_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 1048576 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln255_fu_545_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<35>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

