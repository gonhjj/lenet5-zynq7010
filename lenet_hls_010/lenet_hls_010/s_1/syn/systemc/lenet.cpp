// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "lenet.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic lenet::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic lenet::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> lenet::ap_ST_fsm_state1 = "1";
const sc_lv<17> lenet::ap_ST_fsm_state2 = "10";
const sc_lv<17> lenet::ap_ST_fsm_state3 = "100";
const sc_lv<17> lenet::ap_ST_fsm_state4 = "1000";
const sc_lv<17> lenet::ap_ST_fsm_state5 = "10000";
const sc_lv<17> lenet::ap_ST_fsm_state6 = "100000";
const sc_lv<17> lenet::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> lenet::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> lenet::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> lenet::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> lenet::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> lenet::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> lenet::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> lenet::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> lenet::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> lenet::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> lenet::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> lenet::ap_const_lv32_0 = "00000000000000000000000000000000";
const int lenet::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> lenet::ap_const_lv32_A = "1010";
const sc_lv<1> lenet::ap_const_lv1_0 = "0";
const sc_lv<7> lenet::ap_const_lv7_0 = "0000000";
const sc_lv<32> lenet::ap_const_lv32_9 = "1001";
const sc_lv<32> lenet::ap_const_lv32_B = "1011";
const sc_lv<32> lenet::ap_const_lv32_F = "1111";
const sc_lv<32> lenet::ap_const_lv32_10 = "10000";
const sc_lv<32> lenet::ap_const_lv32_1 = "1";
const sc_lv<32> lenet::ap_const_lv32_4 = "100";
const sc_lv<32> lenet::ap_const_lv32_5 = "101";
const sc_lv<32> lenet::ap_const_lv32_8 = "1000";
const sc_lv<32> lenet::ap_const_lv32_2 = "10";
const sc_lv<32> lenet::ap_const_lv32_3 = "11";
const sc_lv<32> lenet::ap_const_lv32_6 = "110";
const sc_lv<32> lenet::ap_const_lv32_7 = "111";
const sc_lv<1> lenet::ap_const_lv1_1 = "1";
const sc_lv<32> lenet::ap_const_lv32_C = "1100";
const sc_lv<32> lenet::ap_const_lv32_D = "1101";
const sc_lv<32> lenet::ap_const_lv32_E = "1110";
const sc_lv<7> lenet::ap_const_lv7_78 = "1111000";
const sc_lv<7> lenet::ap_const_lv7_1 = "1";
const sc_lv<4> lenet::ap_const_lv4_0 = "0000";
const bool lenet::ap_const_boolean_1 = true;

lenet::lenet(sc_module_name name) : sc_module(name), mVcdFile(0) {
    C1_out_V_U = new lenet_C1_out_V("C1_out_V_U");
    C1_out_V_U->clk(ap_clk);
    C1_out_V_U->reset(ap_rst_n_inv);
    C1_out_V_U->address0(C1_out_V_address0);
    C1_out_V_U->ce0(C1_out_V_ce0);
    C1_out_V_U->we0(C1_out_V_we0);
    C1_out_V_U->d0(grp_conv1_fu_132_out_V_d0);
    C1_out_V_U->q0(C1_out_V_q0);
    P1_out_V_U = new lenet_P1_out_V("P1_out_V_U");
    P1_out_V_U->clk(ap_clk);
    P1_out_V_U->reset(ap_rst_n_inv);
    P1_out_V_U->address0(P1_out_V_address0);
    P1_out_V_U->ce0(P1_out_V_ce0);
    P1_out_V_U->we0(P1_out_V_we0);
    P1_out_V_U->d0(grp_pool1_fu_168_out_V_d0);
    P1_out_V_U->q0(P1_out_V_q0);
    C2_out_V_U = new lenet_C2_out_V("C2_out_V_U");
    C2_out_V_U->clk(ap_clk);
    C2_out_V_U->reset(ap_rst_n_inv);
    C2_out_V_U->address0(C2_out_V_address0);
    C2_out_V_U->ce0(C2_out_V_ce0);
    C2_out_V_U->we0(C2_out_V_we0);
    C2_out_V_U->d0(grp_conv2_fu_144_out_V_d0);
    C2_out_V_U->q0(C2_out_V_q0);
    P2_out_V_U = new lenet_P2_out_V("P2_out_V_U");
    P2_out_V_U->clk(ap_clk);
    P2_out_V_U->reset(ap_rst_n_inv);
    P2_out_V_U->address0(P2_out_V_address0);
    P2_out_V_U->ce0(P2_out_V_ce0);
    P2_out_V_U->we0(P2_out_V_we0);
    P2_out_V_U->d0(grp_pool2_fu_176_out_V_d0);
    P2_out_V_U->q0(P2_out_V_q0);
    C3_out_V_0_0_U = new lenet_C3_out_V_0_0("C3_out_V_0_0_U");
    C3_out_V_0_0_U->clk(ap_clk);
    C3_out_V_0_0_U->reset(ap_rst_n_inv);
    C3_out_V_0_0_U->address0(C3_out_V_0_0_address0);
    C3_out_V_0_0_U->ce0(C3_out_V_0_0_ce0);
    C3_out_V_0_0_U->we0(C3_out_V_0_0_we0);
    C3_out_V_0_0_U->d0(grp_conv3_fu_156_out_0_0_V_d0);
    C3_out_V_0_0_U->q0(C3_out_V_0_0_q0);
    Re_out_V_U = new lenet_C3_out_V_0_0("Re_out_V_U");
    Re_out_V_U->clk(ap_clk);
    Re_out_V_U->reset(ap_rst_n_inv);
    Re_out_V_U->address0(Re_out_V_address0);
    Re_out_V_U->ce0(Re_out_V_ce0);
    Re_out_V_U->we0(Re_out_V_we0);
    Re_out_V_U->d0(C3_out_V_0_0_q0);
    Re_out_V_U->q0(Re_out_V_q0);
    FC1_out_V_U = new lenet_FC1_out_V("FC1_out_V_U");
    FC1_out_V_U->clk(ap_clk);
    FC1_out_V_U->reset(ap_rst_n_inv);
    FC1_out_V_U->address0(FC1_out_V_address0);
    FC1_out_V_U->ce0(FC1_out_V_ce0);
    FC1_out_V_U->we0(FC1_out_V_we0);
    FC1_out_V_U->d0(grp_fc1_fu_184_out_V_d0);
    FC1_out_V_U->q0(FC1_out_V_q0);
    FC2_out_V_U = new lenet_FC2_out_V("FC2_out_V_U");
    FC2_out_V_U->clk(ap_clk);
    FC2_out_V_U->reset(ap_rst_n_inv);
    FC2_out_V_U->address0(FC2_out_V_address0);
    FC2_out_V_U->ce0(FC2_out_V_ce0);
    FC2_out_V_U->we0(FC2_out_V_we0);
    FC2_out_V_U->d0(grp_fc2_fu_196_out_V_d0);
    FC2_out_V_U->q0(FC2_out_V_q0);
    lenet_Crtl_s_axi_U = new lenet_Crtl_s_axi<C_S_AXI_CRTL_ADDR_WIDTH,C_S_AXI_CRTL_DATA_WIDTH>("lenet_Crtl_s_axi_U");
    lenet_Crtl_s_axi_U->AWVALID(s_axi_Crtl_AWVALID);
    lenet_Crtl_s_axi_U->AWREADY(s_axi_Crtl_AWREADY);
    lenet_Crtl_s_axi_U->AWADDR(s_axi_Crtl_AWADDR);
    lenet_Crtl_s_axi_U->WVALID(s_axi_Crtl_WVALID);
    lenet_Crtl_s_axi_U->WREADY(s_axi_Crtl_WREADY);
    lenet_Crtl_s_axi_U->WDATA(s_axi_Crtl_WDATA);
    lenet_Crtl_s_axi_U->WSTRB(s_axi_Crtl_WSTRB);
    lenet_Crtl_s_axi_U->ARVALID(s_axi_Crtl_ARVALID);
    lenet_Crtl_s_axi_U->ARREADY(s_axi_Crtl_ARREADY);
    lenet_Crtl_s_axi_U->ARADDR(s_axi_Crtl_ARADDR);
    lenet_Crtl_s_axi_U->RVALID(s_axi_Crtl_RVALID);
    lenet_Crtl_s_axi_U->RREADY(s_axi_Crtl_RREADY);
    lenet_Crtl_s_axi_U->RDATA(s_axi_Crtl_RDATA);
    lenet_Crtl_s_axi_U->RRESP(s_axi_Crtl_RRESP);
    lenet_Crtl_s_axi_U->BVALID(s_axi_Crtl_BVALID);
    lenet_Crtl_s_axi_U->BREADY(s_axi_Crtl_BREADY);
    lenet_Crtl_s_axi_U->BRESP(s_axi_Crtl_BRESP);
    lenet_Crtl_s_axi_U->ACLK(ap_clk);
    lenet_Crtl_s_axi_U->ARESET(ap_rst_n_inv);
    lenet_Crtl_s_axi_U->ACLK_EN(ap_var_for_const0);
    lenet_Crtl_s_axi_U->ap_start(ap_start);
    lenet_Crtl_s_axi_U->interrupt(interrupt);
    lenet_Crtl_s_axi_U->ap_ready(ap_ready);
    lenet_Crtl_s_axi_U->ap_done(ap_done);
    lenet_Crtl_s_axi_U->ap_idle(ap_idle);
    grp_softmax_fu_124 = new softmax("grp_softmax_fu_124");
    grp_softmax_fu_124->ap_clk(ap_clk);
    grp_softmax_fu_124->ap_rst(ap_rst_n_inv);
    grp_softmax_fu_124->ap_start(grp_softmax_fu_124_ap_start);
    grp_softmax_fu_124->ap_done(grp_softmax_fu_124_ap_done);
    grp_softmax_fu_124->ap_idle(grp_softmax_fu_124_ap_idle);
    grp_softmax_fu_124->ap_ready(grp_softmax_fu_124_ap_ready);
    grp_softmax_fu_124->out_r_Addr_A(grp_softmax_fu_124_out_r_Addr_A);
    grp_softmax_fu_124->out_r_EN_A(grp_softmax_fu_124_out_r_EN_A);
    grp_softmax_fu_124->out_r_WEN_A(grp_softmax_fu_124_out_r_WEN_A);
    grp_softmax_fu_124->out_r_Din_A(grp_softmax_fu_124_out_r_Din_A);
    grp_softmax_fu_124->out_r_Dout_A(Cout_Dout_A);
    grp_softmax_fu_124->FC2_out_V_address0(grp_softmax_fu_124_FC2_out_V_address0);
    grp_softmax_fu_124->FC2_out_V_ce0(grp_softmax_fu_124_FC2_out_V_ce0);
    grp_softmax_fu_124->FC2_out_V_q0(FC2_out_V_q0);
    grp_conv1_fu_132 = new conv1("grp_conv1_fu_132");
    grp_conv1_fu_132->ap_clk(ap_clk);
    grp_conv1_fu_132->ap_rst(ap_rst_n_inv);
    grp_conv1_fu_132->ap_start(grp_conv1_fu_132_ap_start);
    grp_conv1_fu_132->ap_done(grp_conv1_fu_132_ap_done);
    grp_conv1_fu_132->ap_idle(grp_conv1_fu_132_ap_idle);
    grp_conv1_fu_132->ap_ready(grp_conv1_fu_132_ap_ready);
    grp_conv1_fu_132->input_r_Addr_A(grp_conv1_fu_132_input_r_Addr_A);
    grp_conv1_fu_132->input_r_EN_A(grp_conv1_fu_132_input_r_EN_A);
    grp_conv1_fu_132->input_r_WEN_A(grp_conv1_fu_132_input_r_WEN_A);
    grp_conv1_fu_132->input_r_Din_A(grp_conv1_fu_132_input_r_Din_A);
    grp_conv1_fu_132->input_r_Dout_A(input_r_Dout_A);
    grp_conv1_fu_132->out_V_address0(grp_conv1_fu_132_out_V_address0);
    grp_conv1_fu_132->out_V_ce0(grp_conv1_fu_132_out_V_ce0);
    grp_conv1_fu_132->out_V_we0(grp_conv1_fu_132_out_V_we0);
    grp_conv1_fu_132->out_V_d0(grp_conv1_fu_132_out_V_d0);
    grp_conv1_fu_132->out_V_q0(C1_out_V_q0);
    grp_conv2_fu_144 = new conv2("grp_conv2_fu_144");
    grp_conv2_fu_144->ap_clk(ap_clk);
    grp_conv2_fu_144->ap_rst(ap_rst_n_inv);
    grp_conv2_fu_144->ap_start(grp_conv2_fu_144_ap_start);
    grp_conv2_fu_144->ap_done(grp_conv2_fu_144_ap_done);
    grp_conv2_fu_144->ap_idle(grp_conv2_fu_144_ap_idle);
    grp_conv2_fu_144->ap_ready(grp_conv2_fu_144_ap_ready);
    grp_conv2_fu_144->out_V_address0(grp_conv2_fu_144_out_V_address0);
    grp_conv2_fu_144->out_V_ce0(grp_conv2_fu_144_out_V_ce0);
    grp_conv2_fu_144->out_V_we0(grp_conv2_fu_144_out_V_we0);
    grp_conv2_fu_144->out_V_d0(grp_conv2_fu_144_out_V_d0);
    grp_conv2_fu_144->out_V_q0(C2_out_V_q0);
    grp_conv2_fu_144->P1_out_V_address0(grp_conv2_fu_144_P1_out_V_address0);
    grp_conv2_fu_144->P1_out_V_ce0(grp_conv2_fu_144_P1_out_V_ce0);
    grp_conv2_fu_144->P1_out_V_q0(P1_out_V_q0);
    grp_conv3_fu_156 = new conv3("grp_conv3_fu_156");
    grp_conv3_fu_156->ap_clk(ap_clk);
    grp_conv3_fu_156->ap_rst(ap_rst_n_inv);
    grp_conv3_fu_156->ap_start(grp_conv3_fu_156_ap_start);
    grp_conv3_fu_156->ap_done(grp_conv3_fu_156_ap_done);
    grp_conv3_fu_156->ap_idle(grp_conv3_fu_156_ap_idle);
    grp_conv3_fu_156->ap_ready(grp_conv3_fu_156_ap_ready);
    grp_conv3_fu_156->out_0_0_V_address0(grp_conv3_fu_156_out_0_0_V_address0);
    grp_conv3_fu_156->out_0_0_V_ce0(grp_conv3_fu_156_out_0_0_V_ce0);
    grp_conv3_fu_156->out_0_0_V_we0(grp_conv3_fu_156_out_0_0_V_we0);
    grp_conv3_fu_156->out_0_0_V_d0(grp_conv3_fu_156_out_0_0_V_d0);
    grp_conv3_fu_156->out_0_0_V_q0(C3_out_V_0_0_q0);
    grp_conv3_fu_156->P2_out_V_address0(grp_conv3_fu_156_P2_out_V_address0);
    grp_conv3_fu_156->P2_out_V_ce0(grp_conv3_fu_156_P2_out_V_ce0);
    grp_conv3_fu_156->P2_out_V_q0(P2_out_V_q0);
    grp_pool1_fu_168 = new pool1("grp_pool1_fu_168");
    grp_pool1_fu_168->ap_clk(ap_clk);
    grp_pool1_fu_168->ap_rst(ap_rst_n_inv);
    grp_pool1_fu_168->ap_start(grp_pool1_fu_168_ap_start);
    grp_pool1_fu_168->ap_done(grp_pool1_fu_168_ap_done);
    grp_pool1_fu_168->ap_idle(grp_pool1_fu_168_ap_idle);
    grp_pool1_fu_168->ap_ready(grp_pool1_fu_168_ap_ready);
    grp_pool1_fu_168->out_V_address0(grp_pool1_fu_168_out_V_address0);
    grp_pool1_fu_168->out_V_ce0(grp_pool1_fu_168_out_V_ce0);
    grp_pool1_fu_168->out_V_we0(grp_pool1_fu_168_out_V_we0);
    grp_pool1_fu_168->out_V_d0(grp_pool1_fu_168_out_V_d0);
    grp_pool1_fu_168->C1_out_V_address0(grp_pool1_fu_168_C1_out_V_address0);
    grp_pool1_fu_168->C1_out_V_ce0(grp_pool1_fu_168_C1_out_V_ce0);
    grp_pool1_fu_168->C1_out_V_q0(C1_out_V_q0);
    grp_pool2_fu_176 = new pool2("grp_pool2_fu_176");
    grp_pool2_fu_176->ap_clk(ap_clk);
    grp_pool2_fu_176->ap_rst(ap_rst_n_inv);
    grp_pool2_fu_176->ap_start(grp_pool2_fu_176_ap_start);
    grp_pool2_fu_176->ap_done(grp_pool2_fu_176_ap_done);
    grp_pool2_fu_176->ap_idle(grp_pool2_fu_176_ap_idle);
    grp_pool2_fu_176->ap_ready(grp_pool2_fu_176_ap_ready);
    grp_pool2_fu_176->out_V_address0(grp_pool2_fu_176_out_V_address0);
    grp_pool2_fu_176->out_V_ce0(grp_pool2_fu_176_out_V_ce0);
    grp_pool2_fu_176->out_V_we0(grp_pool2_fu_176_out_V_we0);
    grp_pool2_fu_176->out_V_d0(grp_pool2_fu_176_out_V_d0);
    grp_pool2_fu_176->C2_out_V_address0(grp_pool2_fu_176_C2_out_V_address0);
    grp_pool2_fu_176->C2_out_V_ce0(grp_pool2_fu_176_C2_out_V_ce0);
    grp_pool2_fu_176->C2_out_V_q0(C2_out_V_q0);
    grp_fc1_fu_184 = new fc1("grp_fc1_fu_184");
    grp_fc1_fu_184->ap_clk(ap_clk);
    grp_fc1_fu_184->ap_rst(ap_rst_n_inv);
    grp_fc1_fu_184->ap_start(grp_fc1_fu_184_ap_start);
    grp_fc1_fu_184->ap_done(grp_fc1_fu_184_ap_done);
    grp_fc1_fu_184->ap_idle(grp_fc1_fu_184_ap_idle);
    grp_fc1_fu_184->ap_ready(grp_fc1_fu_184_ap_ready);
    grp_fc1_fu_184->out_V_address0(grp_fc1_fu_184_out_V_address0);
    grp_fc1_fu_184->out_V_ce0(grp_fc1_fu_184_out_V_ce0);
    grp_fc1_fu_184->out_V_we0(grp_fc1_fu_184_out_V_we0);
    grp_fc1_fu_184->out_V_d0(grp_fc1_fu_184_out_V_d0);
    grp_fc1_fu_184->out_V_q0(FC1_out_V_q0);
    grp_fc1_fu_184->Re_out_V_address0(grp_fc1_fu_184_Re_out_V_address0);
    grp_fc1_fu_184->Re_out_V_ce0(grp_fc1_fu_184_Re_out_V_ce0);
    grp_fc1_fu_184->Re_out_V_q0(Re_out_V_q0);
    grp_fc2_fu_196 = new fc2("grp_fc2_fu_196");
    grp_fc2_fu_196->ap_clk(ap_clk);
    grp_fc2_fu_196->ap_rst(ap_rst_n_inv);
    grp_fc2_fu_196->ap_start(grp_fc2_fu_196_ap_start);
    grp_fc2_fu_196->ap_done(grp_fc2_fu_196_ap_done);
    grp_fc2_fu_196->ap_idle(grp_fc2_fu_196_ap_idle);
    grp_fc2_fu_196->ap_ready(grp_fc2_fu_196_ap_ready);
    grp_fc2_fu_196->out_V_address0(grp_fc2_fu_196_out_V_address0);
    grp_fc2_fu_196->out_V_ce0(grp_fc2_fu_196_out_V_ce0);
    grp_fc2_fu_196->out_V_we0(grp_fc2_fu_196_out_V_we0);
    grp_fc2_fu_196->out_V_d0(grp_fc2_fu_196_out_V_d0);
    grp_fc2_fu_196->out_V_q0(FC2_out_V_q0);
    grp_fc2_fu_196->FC1_out_V_address0(grp_fc2_fu_196_FC1_out_V_address0);
    grp_fc2_fu_196->FC1_out_V_ce0(grp_fc2_fu_196_FC1_out_V_ce0);
    grp_fc2_fu_196->FC1_out_V_q0(FC1_out_V_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C1_out_V_address0);
    sensitive << ( grp_conv1_fu_132_out_V_address0 );
    sensitive << ( grp_pool1_fu_168_C1_out_V_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C1_out_V_ce0);
    sensitive << ( grp_conv1_fu_132_out_V_ce0 );
    sensitive << ( grp_pool1_fu_168_C1_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_C1_out_V_we0);
    sensitive << ( grp_conv1_fu_132_out_V_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_C2_out_V_address0);
    sensitive << ( grp_conv2_fu_144_out_V_address0 );
    sensitive << ( grp_pool2_fu_176_C2_out_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_C2_out_V_ce0);
    sensitive << ( grp_conv2_fu_144_out_V_ce0 );
    sensitive << ( grp_pool2_fu_176_C2_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_C2_out_V_we0);
    sensitive << ( grp_conv2_fu_144_out_V_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C3_out_V_0_0_address0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln191_fu_220_p1 );
    sensitive << ( grp_conv3_fu_156_out_0_0_V_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_C3_out_V_0_0_ce0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_conv3_fu_156_out_0_0_V_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_C3_out_V_0_0_we0);
    sensitive << ( grp_conv3_fu_156_out_0_0_V_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_Cout_Addr_A);
    sensitive << ( grp_softmax_fu_124_out_r_Addr_A );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_Cout_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_Cout_Din_A);
    sensitive << ( grp_softmax_fu_124_out_r_Din_A );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_Cout_EN_A);
    sensitive << ( grp_softmax_fu_124_out_r_EN_A );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_Cout_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_Cout_WEN_A);
    sensitive << ( grp_softmax_fu_124_out_r_WEN_A );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_FC1_out_V_address0);
    sensitive << ( grp_fc1_fu_184_out_V_address0 );
    sensitive << ( grp_fc2_fu_196_FC1_out_V_address0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_FC1_out_V_ce0);
    sensitive << ( grp_fc1_fu_184_out_V_ce0 );
    sensitive << ( grp_fc2_fu_196_FC1_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_FC1_out_V_we0);
    sensitive << ( grp_fc1_fu_184_out_V_we0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_FC2_out_V_address0);
    sensitive << ( grp_softmax_fu_124_FC2_out_V_address0 );
    sensitive << ( grp_fc2_fu_196_out_V_address0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_FC2_out_V_ce0);
    sensitive << ( grp_softmax_fu_124_FC2_out_V_ce0 );
    sensitive << ( grp_fc2_fu_196_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_FC2_out_V_we0);
    sensitive << ( grp_fc2_fu_196_out_V_we0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_P1_out_V_address0);
    sensitive << ( grp_conv2_fu_144_P1_out_V_address0 );
    sensitive << ( grp_pool1_fu_168_out_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_P1_out_V_ce0);
    sensitive << ( grp_conv2_fu_144_P1_out_V_ce0 );
    sensitive << ( grp_pool1_fu_168_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_P1_out_V_we0);
    sensitive << ( grp_pool1_fu_168_out_V_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_P2_out_V_address0);
    sensitive << ( grp_conv3_fu_156_P2_out_V_address0 );
    sensitive << ( grp_pool2_fu_176_out_V_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_P2_out_V_ce0);
    sensitive << ( grp_conv3_fu_156_P2_out_V_ce0 );
    sensitive << ( grp_pool2_fu_176_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_P2_out_V_we0);
    sensitive << ( grp_pool2_fu_176_out_V_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_Re_out_V_address0);
    sensitive << ( zext_ln191_reg_233 );
    sensitive << ( grp_fc1_fu_184_Re_out_V_address0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_Re_out_V_ce0);
    sensitive << ( grp_fc1_fu_184_Re_out_V_ce0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_Re_out_V_we0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_softmax_fu_124_ap_done );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_softmax_fu_124_ap_done );
    sensitive << ( ap_CS_fsm_state17 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_grp_conv1_fu_132_ap_start);
    sensitive << ( grp_conv1_fu_132_ap_start_reg );

    SC_METHOD(thread_grp_conv2_fu_144_ap_start);
    sensitive << ( grp_conv2_fu_144_ap_start_reg );

    SC_METHOD(thread_grp_conv3_fu_156_ap_start);
    sensitive << ( grp_conv3_fu_156_ap_start_reg );

    SC_METHOD(thread_grp_fc1_fu_184_ap_start);
    sensitive << ( grp_fc1_fu_184_ap_start_reg );

    SC_METHOD(thread_grp_fc2_fu_196_ap_start);
    sensitive << ( grp_fc2_fu_196_ap_start_reg );

    SC_METHOD(thread_grp_pool1_fu_168_ap_start);
    sensitive << ( grp_pool1_fu_168_ap_start_reg );

    SC_METHOD(thread_grp_pool2_fu_176_ap_start);
    sensitive << ( grp_pool2_fu_176_ap_start_reg );

    SC_METHOD(thread_grp_softmax_fu_124_ap_start);
    sensitive << ( grp_softmax_fu_124_ap_start_reg );

    SC_METHOD(thread_icmp_ln189_fu_208_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( m_0_i_reg_113 );

    SC_METHOD(thread_input_r_Addr_A);
    sensitive << ( grp_conv1_fu_132_input_r_Addr_A );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_r_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_input_r_Din_A);

    SC_METHOD(thread_input_r_EN_A);
    sensitive << ( grp_conv1_fu_132_input_r_EN_A );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_r_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_input_r_WEN_A);

    SC_METHOD(thread_m_fu_214_p2);
    sensitive << ( m_0_i_reg_113 );

    SC_METHOD(thread_zext_ln191_fu_220_p1);
    sensitive << ( m_0_i_reg_113 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln189_fu_208_p2 );
    sensitive << ( grp_softmax_fu_124_ap_done );
    sensitive << ( grp_conv1_fu_132_ap_done );
    sensitive << ( grp_conv2_fu_144_ap_done );
    sensitive << ( grp_conv3_fu_156_ap_done );
    sensitive << ( grp_pool1_fu_168_ap_done );
    sensitive << ( grp_pool2_fu_176_ap_done );
    sensitive << ( grp_fc1_fu_184_ap_done );
    sensitive << ( grp_fc2_fu_196_ap_done );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    grp_softmax_fu_124_ap_start_reg = SC_LOGIC_0;
    grp_conv1_fu_132_ap_start_reg = SC_LOGIC_0;
    grp_conv2_fu_144_ap_start_reg = SC_LOGIC_0;
    grp_conv3_fu_156_ap_start_reg = SC_LOGIC_0;
    grp_pool1_fu_168_ap_start_reg = SC_LOGIC_0;
    grp_pool2_fu_176_ap_start_reg = SC_LOGIC_0;
    grp_fc1_fu_184_ap_start_reg = SC_LOGIC_0;
    grp_fc2_fu_196_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "lenet_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_r_Addr_A, "(port)input_r_Addr_A");
    sc_trace(mVcdFile, input_r_EN_A, "(port)input_r_EN_A");
    sc_trace(mVcdFile, input_r_WEN_A, "(port)input_r_WEN_A");
    sc_trace(mVcdFile, input_r_Din_A, "(port)input_r_Din_A");
    sc_trace(mVcdFile, input_r_Dout_A, "(port)input_r_Dout_A");
    sc_trace(mVcdFile, input_r_Clk_A, "(port)input_r_Clk_A");
    sc_trace(mVcdFile, input_r_Rst_A, "(port)input_r_Rst_A");
    sc_trace(mVcdFile, Cout_Addr_A, "(port)Cout_Addr_A");
    sc_trace(mVcdFile, Cout_EN_A, "(port)Cout_EN_A");
    sc_trace(mVcdFile, Cout_WEN_A, "(port)Cout_WEN_A");
    sc_trace(mVcdFile, Cout_Din_A, "(port)Cout_Din_A");
    sc_trace(mVcdFile, Cout_Dout_A, "(port)Cout_Dout_A");
    sc_trace(mVcdFile, Cout_Clk_A, "(port)Cout_Clk_A");
    sc_trace(mVcdFile, Cout_Rst_A, "(port)Cout_Rst_A");
    sc_trace(mVcdFile, s_axi_Crtl_AWVALID, "(port)s_axi_Crtl_AWVALID");
    sc_trace(mVcdFile, s_axi_Crtl_AWREADY, "(port)s_axi_Crtl_AWREADY");
    sc_trace(mVcdFile, s_axi_Crtl_AWADDR, "(port)s_axi_Crtl_AWADDR");
    sc_trace(mVcdFile, s_axi_Crtl_WVALID, "(port)s_axi_Crtl_WVALID");
    sc_trace(mVcdFile, s_axi_Crtl_WREADY, "(port)s_axi_Crtl_WREADY");
    sc_trace(mVcdFile, s_axi_Crtl_WDATA, "(port)s_axi_Crtl_WDATA");
    sc_trace(mVcdFile, s_axi_Crtl_WSTRB, "(port)s_axi_Crtl_WSTRB");
    sc_trace(mVcdFile, s_axi_Crtl_ARVALID, "(port)s_axi_Crtl_ARVALID");
    sc_trace(mVcdFile, s_axi_Crtl_ARREADY, "(port)s_axi_Crtl_ARREADY");
    sc_trace(mVcdFile, s_axi_Crtl_ARADDR, "(port)s_axi_Crtl_ARADDR");
    sc_trace(mVcdFile, s_axi_Crtl_RVALID, "(port)s_axi_Crtl_RVALID");
    sc_trace(mVcdFile, s_axi_Crtl_RREADY, "(port)s_axi_Crtl_RREADY");
    sc_trace(mVcdFile, s_axi_Crtl_RDATA, "(port)s_axi_Crtl_RDATA");
    sc_trace(mVcdFile, s_axi_Crtl_RRESP, "(port)s_axi_Crtl_RRESP");
    sc_trace(mVcdFile, s_axi_Crtl_BVALID, "(port)s_axi_Crtl_BVALID");
    sc_trace(mVcdFile, s_axi_Crtl_BREADY, "(port)s_axi_Crtl_BREADY");
    sc_trace(mVcdFile, s_axi_Crtl_BRESP, "(port)s_axi_Crtl_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, C1_out_V_address0, "C1_out_V_address0");
    sc_trace(mVcdFile, C1_out_V_ce0, "C1_out_V_ce0");
    sc_trace(mVcdFile, C1_out_V_we0, "C1_out_V_we0");
    sc_trace(mVcdFile, C1_out_V_q0, "C1_out_V_q0");
    sc_trace(mVcdFile, P1_out_V_address0, "P1_out_V_address0");
    sc_trace(mVcdFile, P1_out_V_ce0, "P1_out_V_ce0");
    sc_trace(mVcdFile, P1_out_V_we0, "P1_out_V_we0");
    sc_trace(mVcdFile, P1_out_V_q0, "P1_out_V_q0");
    sc_trace(mVcdFile, C2_out_V_address0, "C2_out_V_address0");
    sc_trace(mVcdFile, C2_out_V_ce0, "C2_out_V_ce0");
    sc_trace(mVcdFile, C2_out_V_we0, "C2_out_V_we0");
    sc_trace(mVcdFile, C2_out_V_q0, "C2_out_V_q0");
    sc_trace(mVcdFile, P2_out_V_address0, "P2_out_V_address0");
    sc_trace(mVcdFile, P2_out_V_ce0, "P2_out_V_ce0");
    sc_trace(mVcdFile, P2_out_V_we0, "P2_out_V_we0");
    sc_trace(mVcdFile, P2_out_V_q0, "P2_out_V_q0");
    sc_trace(mVcdFile, C3_out_V_0_0_address0, "C3_out_V_0_0_address0");
    sc_trace(mVcdFile, C3_out_V_0_0_ce0, "C3_out_V_0_0_ce0");
    sc_trace(mVcdFile, C3_out_V_0_0_we0, "C3_out_V_0_0_we0");
    sc_trace(mVcdFile, C3_out_V_0_0_q0, "C3_out_V_0_0_q0");
    sc_trace(mVcdFile, Re_out_V_address0, "Re_out_V_address0");
    sc_trace(mVcdFile, Re_out_V_ce0, "Re_out_V_ce0");
    sc_trace(mVcdFile, Re_out_V_we0, "Re_out_V_we0");
    sc_trace(mVcdFile, Re_out_V_q0, "Re_out_V_q0");
    sc_trace(mVcdFile, FC1_out_V_address0, "FC1_out_V_address0");
    sc_trace(mVcdFile, FC1_out_V_ce0, "FC1_out_V_ce0");
    sc_trace(mVcdFile, FC1_out_V_we0, "FC1_out_V_we0");
    sc_trace(mVcdFile, FC1_out_V_q0, "FC1_out_V_q0");
    sc_trace(mVcdFile, FC2_out_V_address0, "FC2_out_V_address0");
    sc_trace(mVcdFile, FC2_out_V_ce0, "FC2_out_V_ce0");
    sc_trace(mVcdFile, FC2_out_V_we0, "FC2_out_V_we0");
    sc_trace(mVcdFile, FC2_out_V_q0, "FC2_out_V_q0");
    sc_trace(mVcdFile, m_fu_214_p2, "m_fu_214_p2");
    sc_trace(mVcdFile, m_reg_228, "m_reg_228");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln191_fu_220_p1, "zext_ln191_fu_220_p1");
    sc_trace(mVcdFile, zext_ln191_reg_233, "zext_ln191_reg_233");
    sc_trace(mVcdFile, icmp_ln189_fu_208_p2, "icmp_ln189_fu_208_p2");
    sc_trace(mVcdFile, grp_softmax_fu_124_ap_start, "grp_softmax_fu_124_ap_start");
    sc_trace(mVcdFile, grp_softmax_fu_124_ap_done, "grp_softmax_fu_124_ap_done");
    sc_trace(mVcdFile, grp_softmax_fu_124_ap_idle, "grp_softmax_fu_124_ap_idle");
    sc_trace(mVcdFile, grp_softmax_fu_124_ap_ready, "grp_softmax_fu_124_ap_ready");
    sc_trace(mVcdFile, grp_softmax_fu_124_out_r_Addr_A, "grp_softmax_fu_124_out_r_Addr_A");
    sc_trace(mVcdFile, grp_softmax_fu_124_out_r_EN_A, "grp_softmax_fu_124_out_r_EN_A");
    sc_trace(mVcdFile, grp_softmax_fu_124_out_r_WEN_A, "grp_softmax_fu_124_out_r_WEN_A");
    sc_trace(mVcdFile, grp_softmax_fu_124_out_r_Din_A, "grp_softmax_fu_124_out_r_Din_A");
    sc_trace(mVcdFile, grp_softmax_fu_124_FC2_out_V_address0, "grp_softmax_fu_124_FC2_out_V_address0");
    sc_trace(mVcdFile, grp_softmax_fu_124_FC2_out_V_ce0, "grp_softmax_fu_124_FC2_out_V_ce0");
    sc_trace(mVcdFile, grp_conv1_fu_132_ap_start, "grp_conv1_fu_132_ap_start");
    sc_trace(mVcdFile, grp_conv1_fu_132_ap_done, "grp_conv1_fu_132_ap_done");
    sc_trace(mVcdFile, grp_conv1_fu_132_ap_idle, "grp_conv1_fu_132_ap_idle");
    sc_trace(mVcdFile, grp_conv1_fu_132_ap_ready, "grp_conv1_fu_132_ap_ready");
    sc_trace(mVcdFile, grp_conv1_fu_132_input_r_Addr_A, "grp_conv1_fu_132_input_r_Addr_A");
    sc_trace(mVcdFile, grp_conv1_fu_132_input_r_EN_A, "grp_conv1_fu_132_input_r_EN_A");
    sc_trace(mVcdFile, grp_conv1_fu_132_input_r_WEN_A, "grp_conv1_fu_132_input_r_WEN_A");
    sc_trace(mVcdFile, grp_conv1_fu_132_input_r_Din_A, "grp_conv1_fu_132_input_r_Din_A");
    sc_trace(mVcdFile, grp_conv1_fu_132_out_V_address0, "grp_conv1_fu_132_out_V_address0");
    sc_trace(mVcdFile, grp_conv1_fu_132_out_V_ce0, "grp_conv1_fu_132_out_V_ce0");
    sc_trace(mVcdFile, grp_conv1_fu_132_out_V_we0, "grp_conv1_fu_132_out_V_we0");
    sc_trace(mVcdFile, grp_conv1_fu_132_out_V_d0, "grp_conv1_fu_132_out_V_d0");
    sc_trace(mVcdFile, grp_conv2_fu_144_ap_start, "grp_conv2_fu_144_ap_start");
    sc_trace(mVcdFile, grp_conv2_fu_144_ap_done, "grp_conv2_fu_144_ap_done");
    sc_trace(mVcdFile, grp_conv2_fu_144_ap_idle, "grp_conv2_fu_144_ap_idle");
    sc_trace(mVcdFile, grp_conv2_fu_144_ap_ready, "grp_conv2_fu_144_ap_ready");
    sc_trace(mVcdFile, grp_conv2_fu_144_out_V_address0, "grp_conv2_fu_144_out_V_address0");
    sc_trace(mVcdFile, grp_conv2_fu_144_out_V_ce0, "grp_conv2_fu_144_out_V_ce0");
    sc_trace(mVcdFile, grp_conv2_fu_144_out_V_we0, "grp_conv2_fu_144_out_V_we0");
    sc_trace(mVcdFile, grp_conv2_fu_144_out_V_d0, "grp_conv2_fu_144_out_V_d0");
    sc_trace(mVcdFile, grp_conv2_fu_144_P1_out_V_address0, "grp_conv2_fu_144_P1_out_V_address0");
    sc_trace(mVcdFile, grp_conv2_fu_144_P1_out_V_ce0, "grp_conv2_fu_144_P1_out_V_ce0");
    sc_trace(mVcdFile, grp_conv3_fu_156_ap_start, "grp_conv3_fu_156_ap_start");
    sc_trace(mVcdFile, grp_conv3_fu_156_ap_done, "grp_conv3_fu_156_ap_done");
    sc_trace(mVcdFile, grp_conv3_fu_156_ap_idle, "grp_conv3_fu_156_ap_idle");
    sc_trace(mVcdFile, grp_conv3_fu_156_ap_ready, "grp_conv3_fu_156_ap_ready");
    sc_trace(mVcdFile, grp_conv3_fu_156_out_0_0_V_address0, "grp_conv3_fu_156_out_0_0_V_address0");
    sc_trace(mVcdFile, grp_conv3_fu_156_out_0_0_V_ce0, "grp_conv3_fu_156_out_0_0_V_ce0");
    sc_trace(mVcdFile, grp_conv3_fu_156_out_0_0_V_we0, "grp_conv3_fu_156_out_0_0_V_we0");
    sc_trace(mVcdFile, grp_conv3_fu_156_out_0_0_V_d0, "grp_conv3_fu_156_out_0_0_V_d0");
    sc_trace(mVcdFile, grp_conv3_fu_156_P2_out_V_address0, "grp_conv3_fu_156_P2_out_V_address0");
    sc_trace(mVcdFile, grp_conv3_fu_156_P2_out_V_ce0, "grp_conv3_fu_156_P2_out_V_ce0");
    sc_trace(mVcdFile, grp_pool1_fu_168_ap_start, "grp_pool1_fu_168_ap_start");
    sc_trace(mVcdFile, grp_pool1_fu_168_ap_done, "grp_pool1_fu_168_ap_done");
    sc_trace(mVcdFile, grp_pool1_fu_168_ap_idle, "grp_pool1_fu_168_ap_idle");
    sc_trace(mVcdFile, grp_pool1_fu_168_ap_ready, "grp_pool1_fu_168_ap_ready");
    sc_trace(mVcdFile, grp_pool1_fu_168_out_V_address0, "grp_pool1_fu_168_out_V_address0");
    sc_trace(mVcdFile, grp_pool1_fu_168_out_V_ce0, "grp_pool1_fu_168_out_V_ce0");
    sc_trace(mVcdFile, grp_pool1_fu_168_out_V_we0, "grp_pool1_fu_168_out_V_we0");
    sc_trace(mVcdFile, grp_pool1_fu_168_out_V_d0, "grp_pool1_fu_168_out_V_d0");
    sc_trace(mVcdFile, grp_pool1_fu_168_C1_out_V_address0, "grp_pool1_fu_168_C1_out_V_address0");
    sc_trace(mVcdFile, grp_pool1_fu_168_C1_out_V_ce0, "grp_pool1_fu_168_C1_out_V_ce0");
    sc_trace(mVcdFile, grp_pool2_fu_176_ap_start, "grp_pool2_fu_176_ap_start");
    sc_trace(mVcdFile, grp_pool2_fu_176_ap_done, "grp_pool2_fu_176_ap_done");
    sc_trace(mVcdFile, grp_pool2_fu_176_ap_idle, "grp_pool2_fu_176_ap_idle");
    sc_trace(mVcdFile, grp_pool2_fu_176_ap_ready, "grp_pool2_fu_176_ap_ready");
    sc_trace(mVcdFile, grp_pool2_fu_176_out_V_address0, "grp_pool2_fu_176_out_V_address0");
    sc_trace(mVcdFile, grp_pool2_fu_176_out_V_ce0, "grp_pool2_fu_176_out_V_ce0");
    sc_trace(mVcdFile, grp_pool2_fu_176_out_V_we0, "grp_pool2_fu_176_out_V_we0");
    sc_trace(mVcdFile, grp_pool2_fu_176_out_V_d0, "grp_pool2_fu_176_out_V_d0");
    sc_trace(mVcdFile, grp_pool2_fu_176_C2_out_V_address0, "grp_pool2_fu_176_C2_out_V_address0");
    sc_trace(mVcdFile, grp_pool2_fu_176_C2_out_V_ce0, "grp_pool2_fu_176_C2_out_V_ce0");
    sc_trace(mVcdFile, grp_fc1_fu_184_ap_start, "grp_fc1_fu_184_ap_start");
    sc_trace(mVcdFile, grp_fc1_fu_184_ap_done, "grp_fc1_fu_184_ap_done");
    sc_trace(mVcdFile, grp_fc1_fu_184_ap_idle, "grp_fc1_fu_184_ap_idle");
    sc_trace(mVcdFile, grp_fc1_fu_184_ap_ready, "grp_fc1_fu_184_ap_ready");
    sc_trace(mVcdFile, grp_fc1_fu_184_out_V_address0, "grp_fc1_fu_184_out_V_address0");
    sc_trace(mVcdFile, grp_fc1_fu_184_out_V_ce0, "grp_fc1_fu_184_out_V_ce0");
    sc_trace(mVcdFile, grp_fc1_fu_184_out_V_we0, "grp_fc1_fu_184_out_V_we0");
    sc_trace(mVcdFile, grp_fc1_fu_184_out_V_d0, "grp_fc1_fu_184_out_V_d0");
    sc_trace(mVcdFile, grp_fc1_fu_184_Re_out_V_address0, "grp_fc1_fu_184_Re_out_V_address0");
    sc_trace(mVcdFile, grp_fc1_fu_184_Re_out_V_ce0, "grp_fc1_fu_184_Re_out_V_ce0");
    sc_trace(mVcdFile, grp_fc2_fu_196_ap_start, "grp_fc2_fu_196_ap_start");
    sc_trace(mVcdFile, grp_fc2_fu_196_ap_done, "grp_fc2_fu_196_ap_done");
    sc_trace(mVcdFile, grp_fc2_fu_196_ap_idle, "grp_fc2_fu_196_ap_idle");
    sc_trace(mVcdFile, grp_fc2_fu_196_ap_ready, "grp_fc2_fu_196_ap_ready");
    sc_trace(mVcdFile, grp_fc2_fu_196_out_V_address0, "grp_fc2_fu_196_out_V_address0");
    sc_trace(mVcdFile, grp_fc2_fu_196_out_V_ce0, "grp_fc2_fu_196_out_V_ce0");
    sc_trace(mVcdFile, grp_fc2_fu_196_out_V_we0, "grp_fc2_fu_196_out_V_we0");
    sc_trace(mVcdFile, grp_fc2_fu_196_out_V_d0, "grp_fc2_fu_196_out_V_d0");
    sc_trace(mVcdFile, grp_fc2_fu_196_FC1_out_V_address0, "grp_fc2_fu_196_FC1_out_V_address0");
    sc_trace(mVcdFile, grp_fc2_fu_196_FC1_out_V_ce0, "grp_fc2_fu_196_FC1_out_V_ce0");
    sc_trace(mVcdFile, m_0_i_reg_113, "m_0_i_reg_113");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_softmax_fu_124_ap_start_reg, "grp_softmax_fu_124_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_conv1_fu_132_ap_start_reg, "grp_conv1_fu_132_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_conv2_fu_144_ap_start_reg, "grp_conv2_fu_144_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_conv3_fu_156_ap_start_reg, "grp_conv3_fu_156_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_pool1_fu_168_ap_start_reg, "grp_pool1_fu_168_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_pool2_fu_176_ap_start_reg, "grp_pool2_fu_176_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_fc1_fu_184_ap_start_reg, "grp_fc1_fu_184_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fc2_fu_196_ap_start_reg, "grp_fc2_fu_196_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("lenet.hdltvin.dat");
    mHdltvoutHandle.open("lenet.hdltvout.dat");
}

lenet::~lenet() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete C1_out_V_U;
    delete P1_out_V_U;
    delete C2_out_V_U;
    delete P2_out_V_U;
    delete C3_out_V_0_0_U;
    delete Re_out_V_U;
    delete FC1_out_V_U;
    delete FC2_out_V_U;
    delete lenet_Crtl_s_axi_U;
    delete grp_softmax_fu_124;
    delete grp_conv1_fu_132;
    delete grp_conv2_fu_144;
    delete grp_conv3_fu_156;
    delete grp_pool1_fu_168;
    delete grp_pool2_fu_176;
    delete grp_fc1_fu_184;
    delete grp_fc2_fu_196;
}

void lenet::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void lenet::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_conv1_fu_132_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_conv1_fu_132_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv1_fu_132_ap_ready.read())) {
            grp_conv1_fu_132_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_conv2_fu_144_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_conv2_fu_144_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv2_fu_144_ap_ready.read())) {
            grp_conv2_fu_144_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_conv3_fu_156_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_conv3_fu_156_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_conv3_fu_156_ap_ready.read())) {
            grp_conv3_fu_156_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_fc1_fu_184_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
             esl_seteq<1,1,1>(icmp_ln189_fu_208_p2.read(), ap_const_lv1_1))) {
            grp_fc1_fu_184_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_fc1_fu_184_ap_ready.read())) {
            grp_fc1_fu_184_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_fc2_fu_196_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
            grp_fc2_fu_196_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_fc2_fu_196_ap_ready.read())) {
            grp_fc2_fu_196_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pool1_fu_168_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_pool1_fu_168_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pool1_fu_168_ap_ready.read())) {
            grp_pool1_fu_168_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_pool2_fu_176_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_pool2_fu_176_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_pool2_fu_176_ap_ready.read())) {
            grp_pool2_fu_176_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_softmax_fu_124_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            grp_softmax_fu_124_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_softmax_fu_124_ap_ready.read())) {
            grp_softmax_fu_124_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        m_0_i_reg_113 = m_reg_228.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(grp_conv3_fu_156_ap_done.read(), ap_const_logic_1))) {
        m_0_i_reg_113 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        m_reg_228 = m_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(icmp_ln189_fu_208_p2.read(), ap_const_lv1_0))) {
        zext_ln191_reg_233 = zext_ln191_fu_220_p1.read();
    }
}

void lenet::thread_C1_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C1_out_V_address0 = grp_pool1_fu_168_C1_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        C1_out_V_address0 = grp_conv1_fu_132_out_V_address0.read();
    } else {
        C1_out_V_address0 = "XXXXXXXXXXXXX";
    }
}

void lenet::thread_C1_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        C1_out_V_ce0 = grp_pool1_fu_168_C1_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        C1_out_V_ce0 = grp_conv1_fu_132_out_V_ce0.read();
    } else {
        C1_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_C1_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        C1_out_V_we0 = grp_conv1_fu_132_out_V_we0.read();
    } else {
        C1_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_C2_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        C2_out_V_address0 = grp_pool2_fu_176_C2_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C2_out_V_address0 = grp_conv2_fu_144_out_V_address0.read();
    } else {
        C2_out_V_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void lenet::thread_C2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        C2_out_V_ce0 = grp_pool2_fu_176_C2_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C2_out_V_ce0 = grp_conv2_fu_144_out_V_ce0.read();
    } else {
        C2_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_C2_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C2_out_V_we0 = grp_conv2_fu_144_out_V_we0.read();
    } else {
        C2_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_C3_out_V_0_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        C3_out_V_0_0_address0 =  (sc_lv<7>) (zext_ln191_fu_220_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C3_out_V_0_0_address0 = grp_conv3_fu_156_out_0_0_V_address0.read();
    } else {
        C3_out_V_0_0_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void lenet::thread_C3_out_V_0_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        C3_out_V_0_0_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C3_out_V_0_0_ce0 = grp_conv3_fu_156_out_0_0_V_ce0.read();
    } else {
        C3_out_V_0_0_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_C3_out_V_0_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        C3_out_V_0_0_we0 = grp_conv3_fu_156_out_0_0_V_we0.read();
    } else {
        C3_out_V_0_0_we0 = ap_const_logic_0;
    }
}

void lenet::thread_Cout_Addr_A() {
    Cout_Addr_A = grp_softmax_fu_124_out_r_Addr_A.read();
}

void lenet::thread_Cout_Clk_A() {
    Cout_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void lenet::thread_Cout_Din_A() {
    Cout_Din_A = grp_softmax_fu_124_out_r_Din_A.read();
}

void lenet::thread_Cout_EN_A() {
    Cout_EN_A = grp_softmax_fu_124_out_r_EN_A.read();
}

void lenet::thread_Cout_Rst_A() {
    Cout_Rst_A = ap_rst_n_inv.read();
}

void lenet::thread_Cout_WEN_A() {
    Cout_WEN_A = grp_softmax_fu_124_out_r_WEN_A.read();
}

void lenet::thread_FC1_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        FC1_out_V_address0 = grp_fc2_fu_196_FC1_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FC1_out_V_address0 = grp_fc1_fu_184_out_V_address0.read();
    } else {
        FC1_out_V_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void lenet::thread_FC1_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        FC1_out_V_ce0 = grp_fc2_fu_196_FC1_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FC1_out_V_ce0 = grp_fc1_fu_184_out_V_ce0.read();
    } else {
        FC1_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_FC1_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        FC1_out_V_we0 = grp_fc1_fu_184_out_V_we0.read();
    } else {
        FC1_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_FC2_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        FC2_out_V_address0 = grp_fc2_fu_196_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        FC2_out_V_address0 = grp_softmax_fu_124_FC2_out_V_address0.read();
    } else {
        FC2_out_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void lenet::thread_FC2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        FC2_out_V_ce0 = grp_fc2_fu_196_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        FC2_out_V_ce0 = grp_softmax_fu_124_FC2_out_V_ce0.read();
    } else {
        FC2_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_FC2_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        FC2_out_V_we0 = grp_fc2_fu_196_out_V_we0.read();
    } else {
        FC2_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_P1_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P1_out_V_address0 = grp_pool1_fu_168_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P1_out_V_address0 = grp_conv2_fu_144_P1_out_V_address0.read();
    } else {
        P1_out_V_address0 =  (sc_lv<11>) ("XXXXXXXXXXX");
    }
}

void lenet::thread_P1_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P1_out_V_ce0 = grp_pool1_fu_168_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        P1_out_V_ce0 = grp_conv2_fu_144_P1_out_V_ce0.read();
    } else {
        P1_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_P1_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        P1_out_V_we0 = grp_pool1_fu_168_out_V_we0.read();
    } else {
        P1_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_P2_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P2_out_V_address0 = grp_pool2_fu_176_out_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        P2_out_V_address0 = grp_conv3_fu_156_P2_out_V_address0.read();
    } else {
        P2_out_V_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void lenet::thread_P2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P2_out_V_ce0 = grp_pool2_fu_176_out_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        P2_out_V_ce0 = grp_conv3_fu_156_P2_out_V_ce0.read();
    } else {
        P2_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_P2_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        P2_out_V_we0 = grp_pool2_fu_176_out_V_we0.read();
    } else {
        P2_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_Re_out_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        Re_out_V_address0 =  (sc_lv<7>) (zext_ln191_reg_233.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        Re_out_V_address0 = grp_fc1_fu_184_Re_out_V_address0.read();
    } else {
        Re_out_V_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void lenet::thread_Re_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        Re_out_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        Re_out_V_ce0 = grp_fc1_fu_184_Re_out_V_ce0.read();
    } else {
        Re_out_V_ce0 = ap_const_logic_0;
    }
}

void lenet::thread_Re_out_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        Re_out_V_we0 = ap_const_logic_1;
    } else {
        Re_out_V_we0 = ap_const_logic_0;
    }
}

void lenet::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void lenet::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void lenet::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void lenet::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void lenet::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void lenet::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void lenet::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void lenet::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void lenet::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void lenet::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void lenet::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void lenet::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void lenet::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void lenet::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void lenet::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void lenet::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void lenet::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void lenet::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(grp_softmax_fu_124_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void lenet::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void lenet::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(grp_softmax_fu_124_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void lenet::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void lenet::thread_grp_conv1_fu_132_ap_start() {
    grp_conv1_fu_132_ap_start = grp_conv1_fu_132_ap_start_reg.read();
}

void lenet::thread_grp_conv2_fu_144_ap_start() {
    grp_conv2_fu_144_ap_start = grp_conv2_fu_144_ap_start_reg.read();
}

void lenet::thread_grp_conv3_fu_156_ap_start() {
    grp_conv3_fu_156_ap_start = grp_conv3_fu_156_ap_start_reg.read();
}

void lenet::thread_grp_fc1_fu_184_ap_start() {
    grp_fc1_fu_184_ap_start = grp_fc1_fu_184_ap_start_reg.read();
}

void lenet::thread_grp_fc2_fu_196_ap_start() {
    grp_fc2_fu_196_ap_start = grp_fc2_fu_196_ap_start_reg.read();
}

void lenet::thread_grp_pool1_fu_168_ap_start() {
    grp_pool1_fu_168_ap_start = grp_pool1_fu_168_ap_start_reg.read();
}

void lenet::thread_grp_pool2_fu_176_ap_start() {
    grp_pool2_fu_176_ap_start = grp_pool2_fu_176_ap_start_reg.read();
}

void lenet::thread_grp_softmax_fu_124_ap_start() {
    grp_softmax_fu_124_ap_start = grp_softmax_fu_124_ap_start_reg.read();
}

void lenet::thread_icmp_ln189_fu_208_p2() {
    icmp_ln189_fu_208_p2 = (!m_0_i_reg_113.read().is_01() || !ap_const_lv7_78.is_01())? sc_lv<1>(): sc_lv<1>(m_0_i_reg_113.read() == ap_const_lv7_78);
}

void lenet::thread_input_r_Addr_A() {
    input_r_Addr_A = grp_conv1_fu_132_input_r_Addr_A.read();
}

void lenet::thread_input_r_Clk_A() {
    input_r_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void lenet::thread_input_r_Din_A() {
    input_r_Din_A = ap_const_lv32_0;
}

void lenet::thread_input_r_EN_A() {
    input_r_EN_A = grp_conv1_fu_132_input_r_EN_A.read();
}

void lenet::thread_input_r_Rst_A() {
    input_r_Rst_A = ap_rst_n_inv.read();
}

void lenet::thread_input_r_WEN_A() {
    input_r_WEN_A = ap_const_lv4_0;
}

void lenet::thread_m_fu_214_p2() {
    m_fu_214_p2 = (!m_0_i_reg_113.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(m_0_i_reg_113.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void lenet::thread_zext_ln191_fu_220_p1() {
    zext_ln191_fu_220_p1 = esl_zext<64,7>(m_0_i_reg_113.read());
}

void lenet::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_conv1_fu_132_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_pool1_fu_168_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_conv2_fu_144_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_pool2_fu_176_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_conv3_fu_156_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(icmp_ln189_fu_208_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(grp_fc1_fu_184_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(grp_fc2_fu_196_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(grp_softmax_fu_124_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void lenet::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_r_Addr_A\" :  \"" << input_r_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_EN_A\" :  \"" << input_r_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_WEN_A\" :  \"" << input_r_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Din_A\" :  \"" << input_r_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_Dout_A\" :  \"" << input_r_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Clk_A\" :  \"" << input_r_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_Rst_A\" :  \"" << input_r_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_Addr_A\" :  \"" << Cout_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_EN_A\" :  \"" << Cout_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_WEN_A\" :  \"" << Cout_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_Din_A\" :  \"" << Cout_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Cout_Dout_A\" :  \"" << Cout_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_Clk_A\" :  \"" << Cout_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Cout_Rst_A\" :  \"" << Cout_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_AWVALID\" :  \"" << s_axi_Crtl_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_AWREADY\" :  \"" << s_axi_Crtl_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_AWADDR\" :  \"" << s_axi_Crtl_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_WVALID\" :  \"" << s_axi_Crtl_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_WREADY\" :  \"" << s_axi_Crtl_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_WDATA\" :  \"" << s_axi_Crtl_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_WSTRB\" :  \"" << s_axi_Crtl_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_ARVALID\" :  \"" << s_axi_Crtl_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_ARREADY\" :  \"" << s_axi_Crtl_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_ARADDR\" :  \"" << s_axi_Crtl_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_RVALID\" :  \"" << s_axi_Crtl_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_RREADY\" :  \"" << s_axi_Crtl_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_RDATA\" :  \"" << s_axi_Crtl_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_RRESP\" :  \"" << s_axi_Crtl_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_BVALID\" :  \"" << s_axi_Crtl_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_Crtl_BREADY\" :  \"" << s_axi_Crtl_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_Crtl_BRESP\" :  \"" << s_axi_Crtl_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

