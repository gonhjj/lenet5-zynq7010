// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "pool2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic pool2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic pool2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> pool2::ap_ST_fsm_state1 = "1";
const sc_lv<7> pool2::ap_ST_fsm_state2 = "10";
const sc_lv<7> pool2::ap_ST_fsm_state3 = "100";
const sc_lv<7> pool2::ap_ST_fsm_state4 = "1000";
const sc_lv<7> pool2::ap_ST_fsm_state5 = "10000";
const sc_lv<7> pool2::ap_ST_fsm_state6 = "100000";
const sc_lv<7> pool2::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> pool2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> pool2::ap_const_lv32_1 = "1";
const sc_lv<1> pool2::ap_const_lv1_0 = "0";
const sc_lv<32> pool2::ap_const_lv32_2 = "10";
const sc_lv<32> pool2::ap_const_lv32_3 = "11";
const sc_lv<32> pool2::ap_const_lv32_4 = "100";
const sc_lv<32> pool2::ap_const_lv32_5 = "101";
const sc_lv<32> pool2::ap_const_lv32_6 = "110";
const sc_lv<3> pool2::ap_const_lv3_0 = "000";
const sc_lv<1> pool2::ap_const_lv1_1 = "1";
const sc_lv<5> pool2::ap_const_lv5_0 = "00000";
const sc_lv<16> pool2::ap_const_lv16_0 = "0000000000000000";
const sc_lv<2> pool2::ap_const_lv2_0 = "00";
const sc_lv<3> pool2::ap_const_lv3_5 = "101";
const sc_lv<3> pool2::ap_const_lv3_1 = "1";
const sc_lv<4> pool2::ap_const_lv4_0 = "0000";
const sc_lv<5> pool2::ap_const_lv5_10 = "10000";
const sc_lv<5> pool2::ap_const_lv5_1 = "1";
const sc_lv<2> pool2::ap_const_lv2_2 = "10";
const sc_lv<2> pool2::ap_const_lv2_1 = "1";
const bool pool2::ap_const_boolean_1 = true;

pool2::pool2(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C2_out_V_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( zext_ln1494_3_fu_366_p1 );

    SC_METHOD(thread_C2_out_V_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_add_ln130_1_fu_339_p2);
    sensitive << ( shl_ln130_1_reg_411 );
    sensitive << ( zext_ln128_fu_323_p1 );

    SC_METHOD(thread_add_ln130_fu_288_p2);
    sensitive << ( shl_ln_reg_393 );
    sensitive << ( zext_ln126_fu_272_p1 );

    SC_METHOD(thread_add_ln1494_1_fu_348_p2);
    sensitive << ( add_ln1494_reg_447 );
    sensitive << ( zext_ln1494_2_fu_344_p1 );

    SC_METHOD(thread_add_ln1494_2_fu_361_p2);
    sensitive << ( zext_ln203_3_reg_429 );
    sensitive << ( tmp_7_cast_fu_353_p3 );

    SC_METHOD(thread_add_ln1494_fu_317_p2);
    sensitive << ( zext_ln1494_1_fu_313_p1 );
    sensitive << ( zext_ln1494_fu_301_p1 );

    SC_METHOD(thread_add_ln203_1_fu_229_p2);
    sensitive << ( add_ln203_reg_398 );
    sensitive << ( zext_ln203_2_fu_225_p1 );

    SC_METHOD(thread_add_ln203_2_fu_262_p2);
    sensitive << ( tmp_3_cast_reg_416 );
    sensitive << ( zext_ln203_4_fu_258_p1 );

    SC_METHOD(thread_add_ln203_fu_199_p2);
    sensitive << ( zext_ln203_fu_183_p1 );
    sensitive << ( zext_ln203_1_fu_195_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln119_fu_163_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln119_fu_163_p2 );

    SC_METHOD(thread_i_fu_169_p2);
    sensitive << ( i_0_reg_83 );

    SC_METHOD(thread_icmp_ln119_fu_163_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_83 );

    SC_METHOD(thread_icmp_ln121_fu_205_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_94 );

    SC_METHOD(thread_icmp_ln123_fu_242_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_0_reg_105 );

    SC_METHOD(thread_icmp_ln126_fu_276_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_0_reg_129 );

    SC_METHOD(thread_icmp_ln128_fu_327_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( y_0_reg_152 );

    SC_METHOD(thread_icmp_ln1494_fu_371_p2);
    sensitive << ( C2_out_V_q0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( p_07_2_reg_140 );

    SC_METHOD(thread_j_fu_211_p2);
    sensitive << ( j_0_reg_94 );

    SC_METHOD(thread_k_fu_248_p2);
    sensitive << ( k_0_reg_105 );

    SC_METHOD(thread_out_V_address0);
    sensitive << ( out_V_addr_reg_434 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_V_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_out_V_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( p_07_1_reg_116 );

    SC_METHOD(thread_out_V_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_276_p2 );

    SC_METHOD(thread_select_ln130_fu_377_p3);
    sensitive << ( C2_out_V_q0 );
    sensitive << ( p_07_2_reg_140 );
    sensitive << ( icmp_ln1494_fu_371_p2 );

    SC_METHOD(thread_shl_ln130_1_fu_217_p3);
    sensitive << ( j_0_reg_94 );

    SC_METHOD(thread_shl_ln_fu_175_p3);
    sensitive << ( i_0_reg_83 );

    SC_METHOD(thread_tmp_1_fu_187_p3);
    sensitive << ( i_0_reg_83 );

    SC_METHOD(thread_tmp_3_cast_fu_234_p3);
    sensitive << ( add_ln203_1_fu_229_p2 );

    SC_METHOD(thread_tmp_4_fu_293_p3);
    sensitive << ( add_ln130_fu_288_p2 );

    SC_METHOD(thread_tmp_5_fu_305_p3);
    sensitive << ( add_ln130_fu_288_p2 );

    SC_METHOD(thread_tmp_7_cast_fu_353_p3);
    sensitive << ( add_ln1494_1_fu_348_p2 );

    SC_METHOD(thread_x_fu_282_p2);
    sensitive << ( x_0_reg_129 );

    SC_METHOD(thread_y_fu_333_p2);
    sensitive << ( y_0_reg_152 );

    SC_METHOD(thread_zext_ln126_fu_272_p1);
    sensitive << ( x_0_reg_129 );

    SC_METHOD(thread_zext_ln128_fu_323_p1);
    sensitive << ( y_0_reg_152 );

    SC_METHOD(thread_zext_ln1494_1_fu_313_p1);
    sensitive << ( tmp_5_fu_305_p3 );

    SC_METHOD(thread_zext_ln1494_2_fu_344_p1);
    sensitive << ( add_ln130_1_fu_339_p2 );

    SC_METHOD(thread_zext_ln1494_3_fu_366_p1);
    sensitive << ( add_ln1494_2_fu_361_p2 );

    SC_METHOD(thread_zext_ln1494_fu_301_p1);
    sensitive << ( tmp_4_fu_293_p3 );

    SC_METHOD(thread_zext_ln203_1_fu_195_p1);
    sensitive << ( tmp_1_fu_187_p3 );

    SC_METHOD(thread_zext_ln203_2_fu_225_p1);
    sensitive << ( j_0_reg_94 );

    SC_METHOD(thread_zext_ln203_3_fu_254_p1);
    sensitive << ( k_0_reg_105 );

    SC_METHOD(thread_zext_ln203_4_fu_258_p1);
    sensitive << ( k_0_reg_105 );

    SC_METHOD(thread_zext_ln203_5_fu_267_p1);
    sensitive << ( add_ln203_2_fu_262_p2 );

    SC_METHOD(thread_zext_ln203_fu_183_p1);
    sensitive << ( i_0_reg_83 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln119_fu_163_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln121_fu_205_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln123_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln126_fu_276_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln128_fu_327_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "pool2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_V_address0, "(port)out_V_address0");
    sc_trace(mVcdFile, out_V_ce0, "(port)out_V_ce0");
    sc_trace(mVcdFile, out_V_we0, "(port)out_V_we0");
    sc_trace(mVcdFile, out_V_d0, "(port)out_V_d0");
    sc_trace(mVcdFile, C2_out_V_address0, "(port)C2_out_V_address0");
    sc_trace(mVcdFile, C2_out_V_ce0, "(port)C2_out_V_ce0");
    sc_trace(mVcdFile, C2_out_V_q0, "(port)C2_out_V_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_169_p2, "i_fu_169_p2");
    sc_trace(mVcdFile, i_reg_388, "i_reg_388");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, shl_ln_fu_175_p3, "shl_ln_fu_175_p3");
    sc_trace(mVcdFile, shl_ln_reg_393, "shl_ln_reg_393");
    sc_trace(mVcdFile, icmp_ln119_fu_163_p2, "icmp_ln119_fu_163_p2");
    sc_trace(mVcdFile, add_ln203_fu_199_p2, "add_ln203_fu_199_p2");
    sc_trace(mVcdFile, add_ln203_reg_398, "add_ln203_reg_398");
    sc_trace(mVcdFile, j_fu_211_p2, "j_fu_211_p2");
    sc_trace(mVcdFile, j_reg_406, "j_reg_406");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, shl_ln130_1_fu_217_p3, "shl_ln130_1_fu_217_p3");
    sc_trace(mVcdFile, shl_ln130_1_reg_411, "shl_ln130_1_reg_411");
    sc_trace(mVcdFile, icmp_ln121_fu_205_p2, "icmp_ln121_fu_205_p2");
    sc_trace(mVcdFile, tmp_3_cast_fu_234_p3, "tmp_3_cast_fu_234_p3");
    sc_trace(mVcdFile, tmp_3_cast_reg_416, "tmp_3_cast_reg_416");
    sc_trace(mVcdFile, k_fu_248_p2, "k_fu_248_p2");
    sc_trace(mVcdFile, k_reg_424, "k_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln203_3_fu_254_p1, "zext_ln203_3_fu_254_p1");
    sc_trace(mVcdFile, zext_ln203_3_reg_429, "zext_ln203_3_reg_429");
    sc_trace(mVcdFile, icmp_ln123_fu_242_p2, "icmp_ln123_fu_242_p2");
    sc_trace(mVcdFile, out_V_addr_reg_434, "out_V_addr_reg_434");
    sc_trace(mVcdFile, x_fu_282_p2, "x_fu_282_p2");
    sc_trace(mVcdFile, x_reg_442, "x_reg_442");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln1494_fu_317_p2, "add_ln1494_fu_317_p2");
    sc_trace(mVcdFile, add_ln1494_reg_447, "add_ln1494_reg_447");
    sc_trace(mVcdFile, icmp_ln126_fu_276_p2, "icmp_ln126_fu_276_p2");
    sc_trace(mVcdFile, y_fu_333_p2, "y_fu_333_p2");
    sc_trace(mVcdFile, y_reg_455, "y_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln128_fu_327_p2, "icmp_ln128_fu_327_p2");
    sc_trace(mVcdFile, select_ln130_fu_377_p3, "select_ln130_fu_377_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_0_reg_83, "i_0_reg_83");
    sc_trace(mVcdFile, j_0_reg_94, "j_0_reg_94");
    sc_trace(mVcdFile, k_0_reg_105, "k_0_reg_105");
    sc_trace(mVcdFile, p_07_1_reg_116, "p_07_1_reg_116");
    sc_trace(mVcdFile, x_0_reg_129, "x_0_reg_129");
    sc_trace(mVcdFile, p_07_2_reg_140, "p_07_2_reg_140");
    sc_trace(mVcdFile, y_0_reg_152, "y_0_reg_152");
    sc_trace(mVcdFile, zext_ln203_5_fu_267_p1, "zext_ln203_5_fu_267_p1");
    sc_trace(mVcdFile, zext_ln1494_3_fu_366_p1, "zext_ln1494_3_fu_366_p1");
    sc_trace(mVcdFile, tmp_1_fu_187_p3, "tmp_1_fu_187_p3");
    sc_trace(mVcdFile, zext_ln203_fu_183_p1, "zext_ln203_fu_183_p1");
    sc_trace(mVcdFile, zext_ln203_1_fu_195_p1, "zext_ln203_1_fu_195_p1");
    sc_trace(mVcdFile, zext_ln203_2_fu_225_p1, "zext_ln203_2_fu_225_p1");
    sc_trace(mVcdFile, add_ln203_1_fu_229_p2, "add_ln203_1_fu_229_p2");
    sc_trace(mVcdFile, zext_ln203_4_fu_258_p1, "zext_ln203_4_fu_258_p1");
    sc_trace(mVcdFile, add_ln203_2_fu_262_p2, "add_ln203_2_fu_262_p2");
    sc_trace(mVcdFile, zext_ln126_fu_272_p1, "zext_ln126_fu_272_p1");
    sc_trace(mVcdFile, add_ln130_fu_288_p2, "add_ln130_fu_288_p2");
    sc_trace(mVcdFile, tmp_4_fu_293_p3, "tmp_4_fu_293_p3");
    sc_trace(mVcdFile, tmp_5_fu_305_p3, "tmp_5_fu_305_p3");
    sc_trace(mVcdFile, zext_ln1494_1_fu_313_p1, "zext_ln1494_1_fu_313_p1");
    sc_trace(mVcdFile, zext_ln1494_fu_301_p1, "zext_ln1494_fu_301_p1");
    sc_trace(mVcdFile, zext_ln128_fu_323_p1, "zext_ln128_fu_323_p1");
    sc_trace(mVcdFile, add_ln130_1_fu_339_p2, "add_ln130_1_fu_339_p2");
    sc_trace(mVcdFile, zext_ln1494_2_fu_344_p1, "zext_ln1494_2_fu_344_p1");
    sc_trace(mVcdFile, add_ln1494_1_fu_348_p2, "add_ln1494_1_fu_348_p2");
    sc_trace(mVcdFile, tmp_7_cast_fu_353_p3, "tmp_7_cast_fu_353_p3");
    sc_trace(mVcdFile, add_ln1494_2_fu_361_p2, "add_ln1494_2_fu_361_p2");
    sc_trace(mVcdFile, icmp_ln1494_fu_371_p2, "icmp_ln1494_fu_371_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

pool2::~pool2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void pool2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln121_fu_205_p2.read(), ap_const_lv1_1))) {
        i_0_reg_83 = i_reg_388.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_83 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln123_fu_242_p2.read(), ap_const_lv1_1))) {
        j_0_reg_94 = j_reg_406.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln119_fu_163_p2.read(), ap_const_lv1_0))) {
        j_0_reg_94 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln121_fu_205_p2.read()))) {
        k_0_reg_105 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(icmp_ln126_fu_276_p2.read(), ap_const_lv1_1))) {
        k_0_reg_105 = k_reg_424.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln128_fu_327_p2.read(), ap_const_lv1_1))) {
        p_07_1_reg_116 = p_07_2_reg_140.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_242_p2.read()))) {
        p_07_1_reg_116 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_276_p2.read()))) {
        p_07_2_reg_140 = p_07_1_reg_116.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        p_07_2_reg_140 = select_ln130_fu_377_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln128_fu_327_p2.read(), ap_const_lv1_1))) {
        x_0_reg_129 = x_reg_442.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_242_p2.read()))) {
        x_0_reg_129 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_276_p2.read()))) {
        y_0_reg_152 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_0_reg_152 = y_reg_455.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln126_fu_276_p2.read()))) {
        add_ln1494_reg_447 = add_ln1494_fu_317_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln119_fu_163_p2.read(), ap_const_lv1_0))) {
        add_ln203_reg_398 = add_ln203_fu_199_p2.read();
        shl_ln_reg_393 = shl_ln_fu_175_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_388 = i_fu_169_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_406 = j_fu_211_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        k_reg_424 = k_fu_248_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_242_p2.read()))) {
        out_V_addr_reg_434 =  (sc_lv<9>) (zext_ln203_5_fu_267_p1.read());
        zext_ln203_3_reg_429 = zext_ln203_3_fu_254_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln121_fu_205_p2.read()))) {
        shl_ln130_1_reg_411 = shl_ln130_1_fu_217_p3.read();
        tmp_3_cast_reg_416 = tmp_3_cast_fu_234_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_reg_442 = x_fu_282_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        y_reg_455 = y_fu_333_p2.read();
    }
}

void pool2::thread_C2_out_V_address0() {
    C2_out_V_address0 =  (sc_lv<11>) (zext_ln1494_3_fu_366_p1.read());
}

void pool2::thread_C2_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C2_out_V_ce0 = ap_const_logic_1;
    } else {
        C2_out_V_ce0 = ap_const_logic_0;
    }
}

void pool2::thread_add_ln130_1_fu_339_p2() {
    add_ln130_1_fu_339_p2 = (!shl_ln130_1_reg_411.read().is_01() || !zext_ln128_fu_323_p1.read().is_01())? sc_lv<4>(): (sc_biguint<4>(shl_ln130_1_reg_411.read()) + sc_biguint<4>(zext_ln128_fu_323_p1.read()));
}

void pool2::thread_add_ln130_fu_288_p2() {
    add_ln130_fu_288_p2 = (!zext_ln126_fu_272_p1.read().is_01() || !shl_ln_reg_393.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln126_fu_272_p1.read()) + sc_biguint<4>(shl_ln_reg_393.read()));
}

void pool2::thread_add_ln1494_1_fu_348_p2() {
    add_ln1494_1_fu_348_p2 = (!zext_ln1494_2_fu_344_p1.read().is_01() || !add_ln1494_reg_447.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln1494_2_fu_344_p1.read()) + sc_biguint<8>(add_ln1494_reg_447.read()));
}

void pool2::thread_add_ln1494_2_fu_361_p2() {
    add_ln1494_2_fu_361_p2 = (!zext_ln203_3_reg_429.read().is_01() || !tmp_7_cast_fu_353_p3.read().is_01())? sc_lv<12>(): (sc_biguint<12>(zext_ln203_3_reg_429.read()) + sc_biguint<12>(tmp_7_cast_fu_353_p3.read()));
}

void pool2::thread_add_ln1494_fu_317_p2() {
    add_ln1494_fu_317_p2 = (!zext_ln1494_1_fu_313_p1.read().is_01() || !zext_ln1494_fu_301_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln1494_1_fu_313_p1.read()) + sc_biguint<8>(zext_ln1494_fu_301_p1.read()));
}

void pool2::thread_add_ln203_1_fu_229_p2() {
    add_ln203_1_fu_229_p2 = (!zext_ln203_2_fu_225_p1.read().is_01() || !add_ln203_reg_398.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln203_2_fu_225_p1.read()) + sc_biguint<6>(add_ln203_reg_398.read()));
}

void pool2::thread_add_ln203_2_fu_262_p2() {
    add_ln203_2_fu_262_p2 = (!tmp_3_cast_reg_416.read().is_01() || !zext_ln203_4_fu_258_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_3_cast_reg_416.read()) + sc_biguint<10>(zext_ln203_4_fu_258_p1.read()));
}

void pool2::thread_add_ln203_fu_199_p2() {
    add_ln203_fu_199_p2 = (!zext_ln203_fu_183_p1.read().is_01() || !zext_ln203_1_fu_195_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln203_fu_183_p1.read()) + sc_biguint<6>(zext_ln203_1_fu_195_p1.read()));
}

void pool2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void pool2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void pool2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void pool2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void pool2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void pool2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void pool2::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void pool2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln119_fu_163_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void pool2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void pool2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln119_fu_163_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void pool2::thread_i_fu_169_p2() {
    i_fu_169_p2 = (!i_0_reg_83.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_83.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pool2::thread_icmp_ln119_fu_163_p2() {
    icmp_ln119_fu_163_p2 = (!i_0_reg_83.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_83.read() == ap_const_lv3_5);
}

void pool2::thread_icmp_ln121_fu_205_p2() {
    icmp_ln121_fu_205_p2 = (!j_0_reg_94.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_94.read() == ap_const_lv3_5);
}

void pool2::thread_icmp_ln123_fu_242_p2() {
    icmp_ln123_fu_242_p2 = (!k_0_reg_105.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_105.read() == ap_const_lv5_10);
}

void pool2::thread_icmp_ln126_fu_276_p2() {
    icmp_ln126_fu_276_p2 = (!x_0_reg_129.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(x_0_reg_129.read() == ap_const_lv2_2);
}

void pool2::thread_icmp_ln128_fu_327_p2() {
    icmp_ln128_fu_327_p2 = (!y_0_reg_152.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(y_0_reg_152.read() == ap_const_lv2_2);
}

void pool2::thread_icmp_ln1494_fu_371_p2() {
    icmp_ln1494_fu_371_p2 = (!C2_out_V_q0.read().is_01() || !p_07_2_reg_140.read().is_01())? sc_lv<1>(): (sc_bigint<16>(C2_out_V_q0.read()) > sc_bigint<16>(p_07_2_reg_140.read()));
}

void pool2::thread_j_fu_211_p2() {
    j_fu_211_p2 = (!j_0_reg_94.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_94.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void pool2::thread_k_fu_248_p2() {
    k_fu_248_p2 = (!k_0_reg_105.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_0_reg_105.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void pool2::thread_out_V_address0() {
    out_V_address0 = out_V_addr_reg_434.read();
}

void pool2::thread_out_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        out_V_ce0 = ap_const_logic_1;
    } else {
        out_V_ce0 = ap_const_logic_0;
    }
}

void pool2::thread_out_V_d0() {
    out_V_d0 = p_07_1_reg_116.read();
}

void pool2::thread_out_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln126_fu_276_p2.read(), ap_const_lv1_1))) {
        out_V_we0 = ap_const_logic_1;
    } else {
        out_V_we0 = ap_const_logic_0;
    }
}

void pool2::thread_select_ln130_fu_377_p3() {
    select_ln130_fu_377_p3 = (!icmp_ln1494_fu_371_p2.read()[0].is_01())? sc_lv<16>(): ((icmp_ln1494_fu_371_p2.read()[0].to_bool())? C2_out_V_q0.read(): p_07_2_reg_140.read());
}

void pool2::thread_shl_ln130_1_fu_217_p3() {
    shl_ln130_1_fu_217_p3 = esl_concat<3,1>(j_0_reg_94.read(), ap_const_lv1_0);
}

void pool2::thread_shl_ln_fu_175_p3() {
    shl_ln_fu_175_p3 = esl_concat<3,1>(i_0_reg_83.read(), ap_const_lv1_0);
}

void pool2::thread_tmp_1_fu_187_p3() {
    tmp_1_fu_187_p3 = esl_concat<3,2>(i_0_reg_83.read(), ap_const_lv2_0);
}

void pool2::thread_tmp_3_cast_fu_234_p3() {
    tmp_3_cast_fu_234_p3 = esl_concat<6,4>(add_ln203_1_fu_229_p2.read(), ap_const_lv4_0);
}

void pool2::thread_tmp_4_fu_293_p3() {
    tmp_4_fu_293_p3 = esl_concat<4,3>(add_ln130_fu_288_p2.read(), ap_const_lv3_0);
}

void pool2::thread_tmp_5_fu_305_p3() {
    tmp_5_fu_305_p3 = esl_concat<4,1>(add_ln130_fu_288_p2.read(), ap_const_lv1_0);
}

void pool2::thread_tmp_7_cast_fu_353_p3() {
    tmp_7_cast_fu_353_p3 = esl_concat<8,4>(add_ln1494_1_fu_348_p2.read(), ap_const_lv4_0);
}

void pool2::thread_x_fu_282_p2() {
    x_fu_282_p2 = (!x_0_reg_129.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(x_0_reg_129.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool2::thread_y_fu_333_p2() {
    y_fu_333_p2 = (!y_0_reg_152.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(y_0_reg_152.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void pool2::thread_zext_ln126_fu_272_p1() {
    zext_ln126_fu_272_p1 = esl_zext<4,2>(x_0_reg_129.read());
}

void pool2::thread_zext_ln128_fu_323_p1() {
    zext_ln128_fu_323_p1 = esl_zext<4,2>(y_0_reg_152.read());
}

void pool2::thread_zext_ln1494_1_fu_313_p1() {
    zext_ln1494_1_fu_313_p1 = esl_zext<8,5>(tmp_5_fu_305_p3.read());
}

void pool2::thread_zext_ln1494_2_fu_344_p1() {
    zext_ln1494_2_fu_344_p1 = esl_zext<8,4>(add_ln130_1_fu_339_p2.read());
}

void pool2::thread_zext_ln1494_3_fu_366_p1() {
    zext_ln1494_3_fu_366_p1 = esl_zext<64,12>(add_ln1494_2_fu_361_p2.read());
}

void pool2::thread_zext_ln1494_fu_301_p1() {
    zext_ln1494_fu_301_p1 = esl_zext<8,7>(tmp_4_fu_293_p3.read());
}

void pool2::thread_zext_ln203_1_fu_195_p1() {
    zext_ln203_1_fu_195_p1 = esl_zext<6,5>(tmp_1_fu_187_p3.read());
}

void pool2::thread_zext_ln203_2_fu_225_p1() {
    zext_ln203_2_fu_225_p1 = esl_zext<6,3>(j_0_reg_94.read());
}

void pool2::thread_zext_ln203_3_fu_254_p1() {
    zext_ln203_3_fu_254_p1 = esl_zext<12,5>(k_0_reg_105.read());
}

void pool2::thread_zext_ln203_4_fu_258_p1() {
    zext_ln203_4_fu_258_p1 = esl_zext<10,5>(k_0_reg_105.read());
}

void pool2::thread_zext_ln203_5_fu_267_p1() {
    zext_ln203_5_fu_267_p1 = esl_zext<64,10>(add_ln203_2_fu_262_p2.read());
}

void pool2::thread_zext_ln203_fu_183_p1() {
    zext_ln203_fu_183_p1 = esl_zext<6,3>(i_0_reg_83.read());
}

void pool2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln119_fu_163_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln121_fu_205_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln123_fu_242_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln126_fu_276_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln128_fu_327_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

