// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fc2_HH_
#define _fc2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lenet_mac_muladd_g8j.h"
#include "fc2_FC2_W_V.h"
#include "fc2_FC2_B_V.h"

namespace ap_rtl {

struct fc2 : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<16> > out_V_d0;
    sc_in< sc_lv<16> > out_V_q0;
    sc_out< sc_lv<7> > FC1_out_V_address0;
    sc_out< sc_logic > FC1_out_V_ce0;
    sc_in< sc_lv<16> > FC1_out_V_q0;


    // Module declarations
    fc2(sc_module_name name);
    SC_HAS_PROCESS(fc2);

    ~fc2();

    sc_trace_file* mVcdFile;

    fc2_FC2_W_V* FC2_W_V_U;
    fc2_FC2_B_V* FC2_B_V_U;
    lenet_mac_muladd_g8j<1,1,16,10,26,26>* lenet_mac_muladd_g8j_U31;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<10> > FC2_W_V_address0;
    sc_signal< sc_logic > FC2_W_V_ce0;
    sc_signal< sc_lv<10> > FC2_W_V_q0;
    sc_signal< sc_lv<4> > FC2_B_V_address0;
    sc_signal< sc_logic > FC2_B_V_ce0;
    sc_signal< sc_lv<8> > FC2_B_V_q0;
    sc_signal< sc_lv<10> > add_ln219_fu_165_p2;
    sc_signal< sc_lv<10> > add_ln219_reg_317;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_fu_177_p2;
    sc_signal< sc_lv<4> > i_reg_325;
    sc_signal< sc_lv<4> > out_V_addr_reg_330;
    sc_signal< sc_lv<1> > icmp_ln219_fu_171_p2;
    sc_signal< sc_lv<7> > j_fu_194_p2;
    sc_signal< sc_lv<7> > j_reg_338;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln222_fu_188_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > i_3_fu_251_p2;
    sc_signal< sc_lv<4> > i_3_reg_361;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > out_V_addr_1_reg_366;
    sc_signal< sc_lv<1> > icmp_ln228_fu_245_p2;
    sc_signal< sc_lv<4> > i_0_reg_107;
    sc_signal< sc_lv<10> > phi_mul_reg_118;
    sc_signal< sc_lv<16> > p_Val2_6_reg_130;
    sc_signal< sc_lv<7> > j_0_reg_143;
    sc_signal< sc_lv<4> > i1_0_reg_154;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln221_fu_183_p1;
    sc_signal< sc_lv<64> > zext_ln1117_1_fu_215_p1;
    sc_signal< sc_lv<64> > zext_ln224_fu_200_p1;
    sc_signal< sc_lv<64> > zext_ln230_fu_257_p1;
    sc_signal< sc_lv<16> > zext_ln231_fu_303_p1;
    sc_signal< sc_lv<10> > zext_ln1117_fu_205_p1;
    sc_signal< sc_lv<10> > add_ln1117_fu_209_p2;
    sc_signal< sc_lv<26> > grp_fu_308_p3;
    sc_signal< sc_lv<8> > sext_ln1265_fu_263_p0;
    sc_signal< sc_lv<8> > sext_ln703_fu_267_p0;
    sc_signal< sc_lv<16> > sext_ln1265_fu_263_p1;
    sc_signal< sc_lv<15> > trunc_ln703_fu_271_p1;
    sc_signal< sc_lv<15> > sext_ln703_fu_267_p1;
    sc_signal< sc_lv<16> > add_ln703_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_fu_287_p3;
    sc_signal< sc_lv<15> > add_ln1495_fu_281_p2;
    sc_signal< sc_lv<15> > select_ln231_fu_295_p3;
    sc_signal< sc_lv<26> > grp_fu_308_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<10> ap_const_lv10_54;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_54;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<15> ap_const_lv15_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_FC1_out_V_address0();
    void thread_FC1_out_V_ce0();
    void thread_FC2_B_V_address0();
    void thread_FC2_B_V_ce0();
    void thread_FC2_W_V_address0();
    void thread_FC2_W_V_ce0();
    void thread_add_ln1117_fu_209_p2();
    void thread_add_ln1495_fu_281_p2();
    void thread_add_ln219_fu_165_p2();
    void thread_add_ln703_fu_275_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_308_p2();
    void thread_i_3_fu_251_p2();
    void thread_i_fu_177_p2();
    void thread_icmp_ln219_fu_171_p2();
    void thread_icmp_ln222_fu_188_p2();
    void thread_icmp_ln228_fu_245_p2();
    void thread_j_fu_194_p2();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_select_ln231_fu_295_p3();
    void thread_sext_ln1265_fu_263_p0();
    void thread_sext_ln1265_fu_263_p1();
    void thread_sext_ln703_fu_267_p0();
    void thread_sext_ln703_fu_267_p1();
    void thread_tmp_fu_287_p3();
    void thread_trunc_ln703_fu_271_p1();
    void thread_zext_ln1117_1_fu_215_p1();
    void thread_zext_ln1117_fu_205_p1();
    void thread_zext_ln221_fu_183_p1();
    void thread_zext_ln224_fu_200_p1();
    void thread_zext_ln230_fu_257_p1();
    void thread_zext_ln231_fu_303_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
