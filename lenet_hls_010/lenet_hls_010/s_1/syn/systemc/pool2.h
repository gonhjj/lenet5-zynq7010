// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool2_HH_
#define _pool2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pool2 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<16> > out_V_d0;
    sc_out< sc_lv<11> > C2_out_V_address0;
    sc_out< sc_logic > C2_out_V_ce0;
    sc_in< sc_lv<16> > C2_out_V_q0;


    // Module declarations
    pool2(sc_module_name name);
    SC_HAS_PROCESS(pool2);

    ~pool2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_fu_169_p2;
    sc_signal< sc_lv<3> > i_reg_388;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > shl_ln_fu_175_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_393;
    sc_signal< sc_lv<1> > icmp_ln119_fu_163_p2;
    sc_signal< sc_lv<6> > add_ln203_fu_199_p2;
    sc_signal< sc_lv<6> > add_ln203_reg_398;
    sc_signal< sc_lv<3> > j_fu_211_p2;
    sc_signal< sc_lv<3> > j_reg_406;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln130_1_fu_217_p3;
    sc_signal< sc_lv<4> > shl_ln130_1_reg_411;
    sc_signal< sc_lv<1> > icmp_ln121_fu_205_p2;
    sc_signal< sc_lv<10> > tmp_3_cast_fu_234_p3;
    sc_signal< sc_lv<10> > tmp_3_cast_reg_416;
    sc_signal< sc_lv<5> > k_fu_248_p2;
    sc_signal< sc_lv<5> > k_reg_424;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<12> > zext_ln203_3_fu_254_p1;
    sc_signal< sc_lv<12> > zext_ln203_3_reg_429;
    sc_signal< sc_lv<1> > icmp_ln123_fu_242_p2;
    sc_signal< sc_lv<9> > out_V_addr_reg_434;
    sc_signal< sc_lv<2> > x_fu_282_p2;
    sc_signal< sc_lv<2> > x_reg_442;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > add_ln1494_fu_317_p2;
    sc_signal< sc_lv<8> > add_ln1494_reg_447;
    sc_signal< sc_lv<1> > icmp_ln126_fu_276_p2;
    sc_signal< sc_lv<2> > y_fu_333_p2;
    sc_signal< sc_lv<2> > y_reg_455;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln128_fu_327_p2;
    sc_signal< sc_lv<16> > select_ln130_fu_377_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > i_0_reg_83;
    sc_signal< sc_lv<3> > j_0_reg_94;
    sc_signal< sc_lv<5> > k_0_reg_105;
    sc_signal< sc_lv<16> > p_07_1_reg_116;
    sc_signal< sc_lv<2> > x_0_reg_129;
    sc_signal< sc_lv<16> > p_07_2_reg_140;
    sc_signal< sc_lv<2> > y_0_reg_152;
    sc_signal< sc_lv<64> > zext_ln203_5_fu_267_p1;
    sc_signal< sc_lv<64> > zext_ln1494_3_fu_366_p1;
    sc_signal< sc_lv<5> > tmp_1_fu_187_p3;
    sc_signal< sc_lv<6> > zext_ln203_fu_183_p1;
    sc_signal< sc_lv<6> > zext_ln203_1_fu_195_p1;
    sc_signal< sc_lv<6> > zext_ln203_2_fu_225_p1;
    sc_signal< sc_lv<6> > add_ln203_1_fu_229_p2;
    sc_signal< sc_lv<10> > zext_ln203_4_fu_258_p1;
    sc_signal< sc_lv<10> > add_ln203_2_fu_262_p2;
    sc_signal< sc_lv<4> > zext_ln126_fu_272_p1;
    sc_signal< sc_lv<4> > add_ln130_fu_288_p2;
    sc_signal< sc_lv<7> > tmp_4_fu_293_p3;
    sc_signal< sc_lv<5> > tmp_5_fu_305_p3;
    sc_signal< sc_lv<8> > zext_ln1494_1_fu_313_p1;
    sc_signal< sc_lv<8> > zext_ln1494_fu_301_p1;
    sc_signal< sc_lv<4> > zext_ln128_fu_323_p1;
    sc_signal< sc_lv<4> > add_ln130_1_fu_339_p2;
    sc_signal< sc_lv<8> > zext_ln1494_2_fu_344_p1;
    sc_signal< sc_lv<8> > add_ln1494_1_fu_348_p2;
    sc_signal< sc_lv<12> > tmp_7_cast_fu_353_p3;
    sc_signal< sc_lv<12> > add_ln1494_2_fu_361_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_371_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_C2_out_V_address0();
    void thread_C2_out_V_ce0();
    void thread_add_ln130_1_fu_339_p2();
    void thread_add_ln130_fu_288_p2();
    void thread_add_ln1494_1_fu_348_p2();
    void thread_add_ln1494_2_fu_361_p2();
    void thread_add_ln1494_fu_317_p2();
    void thread_add_ln203_1_fu_229_p2();
    void thread_add_ln203_2_fu_262_p2();
    void thread_add_ln203_fu_199_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_169_p2();
    void thread_icmp_ln119_fu_163_p2();
    void thread_icmp_ln121_fu_205_p2();
    void thread_icmp_ln123_fu_242_p2();
    void thread_icmp_ln126_fu_276_p2();
    void thread_icmp_ln128_fu_327_p2();
    void thread_icmp_ln1494_fu_371_p2();
    void thread_j_fu_211_p2();
    void thread_k_fu_248_p2();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_select_ln130_fu_377_p3();
    void thread_shl_ln130_1_fu_217_p3();
    void thread_shl_ln_fu_175_p3();
    void thread_tmp_1_fu_187_p3();
    void thread_tmp_3_cast_fu_234_p3();
    void thread_tmp_4_fu_293_p3();
    void thread_tmp_5_fu_305_p3();
    void thread_tmp_7_cast_fu_353_p3();
    void thread_x_fu_282_p2();
    void thread_y_fu_333_p2();
    void thread_zext_ln126_fu_272_p1();
    void thread_zext_ln128_fu_323_p1();
    void thread_zext_ln1494_1_fu_313_p1();
    void thread_zext_ln1494_2_fu_344_p1();
    void thread_zext_ln1494_3_fu_366_p1();
    void thread_zext_ln1494_fu_301_p1();
    void thread_zext_ln203_1_fu_195_p1();
    void thread_zext_ln203_2_fu_225_p1();
    void thread_zext_ln203_3_fu_254_p1();
    void thread_zext_ln203_4_fu_258_p1();
    void thread_zext_ln203_5_fu_267_p1();
    void thread_zext_ln203_fu_183_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
