// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _pool1_HH_
#define _pool1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct pool1 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > out_V_address0;
    sc_out< sc_logic > out_V_ce0;
    sc_out< sc_logic > out_V_we0;
    sc_out< sc_lv<16> > out_V_d0;
    sc_out< sc_lv<13> > C1_out_V_address0;
    sc_out< sc_logic > C1_out_V_ce0;
    sc_in< sc_lv<16> > C1_out_V_q0;


    // Module declarations
    pool1(sc_module_name name);
    SC_HAS_PROCESS(pool1);

    ~pool1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_fu_175_p2;
    sc_signal< sc_lv<4> > i_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > shl_ln_fu_181_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_451;
    sc_signal< sc_lv<1> > icmp_ln50_fu_169_p2;
    sc_signal< sc_lv<10> > sext_ln203_fu_211_p1;
    sc_signal< sc_lv<10> > sext_ln203_reg_456;
    sc_signal< sc_lv<4> > j_fu_221_p2;
    sc_signal< sc_lv<4> > j_reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<5> > shl_ln61_1_fu_227_p3;
    sc_signal< sc_lv<5> > shl_ln61_1_reg_469;
    sc_signal< sc_lv<1> > icmp_ln52_fu_215_p2;
    sc_signal< sc_lv<12> > sub_ln203_1_fu_268_p2;
    sc_signal< sc_lv<12> > sub_ln203_1_reg_474;
    sc_signal< sc_lv<3> > k_fu_280_p2;
    sc_signal< sc_lv<3> > k_reg_482;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > zext_ln203_8_fu_286_p1;
    sc_signal< sc_lv<14> > zext_ln203_8_reg_487;
    sc_signal< sc_lv<1> > icmp_ln54_fu_274_p2;
    sc_signal< sc_lv<11> > out_V_addr_reg_492;
    sc_signal< sc_lv<2> > x_fu_314_p2;
    sc_signal< sc_lv<2> > x_reg_500;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<12> > sext_ln1494_fu_355_p1;
    sc_signal< sc_lv<12> > sext_ln1494_reg_505;
    sc_signal< sc_lv<1> > icmp_ln57_fu_308_p2;
    sc_signal< sc_lv<2> > y_fu_369_p2;
    sc_signal< sc_lv<2> > y_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln59_fu_363_p2;
    sc_signal< sc_lv<16> > select_ln61_fu_435_p3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<4> > i_0_reg_89;
    sc_signal< sc_lv<4> > j_0_reg_100;
    sc_signal< sc_lv<3> > k_0_reg_111;
    sc_signal< sc_lv<16> > p_07_1_reg_122;
    sc_signal< sc_lv<2> > x_0_reg_135;
    sc_signal< sc_lv<16> > p_07_2_reg_146;
    sc_signal< sc_lv<2> > y_0_reg_158;
    sc_signal< sc_lv<64> > zext_ln203_10_fu_299_p1;
    sc_signal< sc_lv<64> > zext_ln1494_6_fu_424_p1;
    sc_signal< sc_lv<8> > tmp_8_fu_189_p3;
    sc_signal< sc_lv<9> > zext_ln203_fu_197_p1;
    sc_signal< sc_lv<9> > zext_ln203_6_fu_201_p1;
    sc_signal< sc_lv<9> > sub_ln203_fu_205_p2;
    sc_signal< sc_lv<10> > zext_ln203_7_fu_235_p1;
    sc_signal< sc_lv<10> > add_ln203_fu_239_p2;
    sc_signal< sc_lv<9> > trunc_ln203_fu_244_p1;
    sc_signal< sc_lv<11> > tmp_7_fu_256_p3;
    sc_signal< sc_lv<12> > p_shl2_cast_fu_248_p3;
    sc_signal< sc_lv<12> > sext_ln203_1_fu_264_p1;
    sc_signal< sc_lv<12> > zext_ln203_9_fu_290_p1;
    sc_signal< sc_lv<12> > add_ln203_3_fu_294_p2;
    sc_signal< sc_lv<5> > zext_ln57_fu_304_p1;
    sc_signal< sc_lv<5> > add_ln61_fu_320_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_325_p3;
    sc_signal< sc_lv<7> > tmp_1_fu_337_p3;
    sc_signal< sc_lv<11> > zext_ln1494_fu_333_p1;
    sc_signal< sc_lv<11> > zext_ln1494_4_fu_345_p1;
    sc_signal< sc_lv<11> > sub_ln1494_fu_349_p2;
    sc_signal< sc_lv<5> > zext_ln59_fu_359_p1;
    sc_signal< sc_lv<5> > add_ln61_1_fu_375_p2;
    sc_signal< sc_lv<12> > zext_ln1494_5_fu_380_p1;
    sc_signal< sc_lv<12> > add_ln1494_fu_384_p2;
    sc_signal< sc_lv<11> > trunc_ln1494_fu_389_p1;
    sc_signal< sc_lv<13> > tmp_9_fu_401_p3;
    sc_signal< sc_lv<14> > p_shl6_cast_fu_393_p3;
    sc_signal< sc_lv<14> > sext_ln1494_1_fu_409_p1;
    sc_signal< sc_lv<14> > sub_ln1494_1_fu_413_p2;
    sc_signal< sc_lv<14> > add_ln1494_3_fu_419_p2;
    sc_signal< sc_lv<1> > icmp_ln1494_fu_429_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_C1_out_V_address0();
    void thread_C1_out_V_ce0();
    void thread_add_ln1494_3_fu_419_p2();
    void thread_add_ln1494_fu_384_p2();
    void thread_add_ln203_3_fu_294_p2();
    void thread_add_ln203_fu_239_p2();
    void thread_add_ln61_1_fu_375_p2();
    void thread_add_ln61_fu_320_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_fu_175_p2();
    void thread_icmp_ln1494_fu_429_p2();
    void thread_icmp_ln50_fu_169_p2();
    void thread_icmp_ln52_fu_215_p2();
    void thread_icmp_ln54_fu_274_p2();
    void thread_icmp_ln57_fu_308_p2();
    void thread_icmp_ln59_fu_363_p2();
    void thread_j_fu_221_p2();
    void thread_k_fu_280_p2();
    void thread_out_V_address0();
    void thread_out_V_ce0();
    void thread_out_V_d0();
    void thread_out_V_we0();
    void thread_p_shl2_cast_fu_248_p3();
    void thread_p_shl6_cast_fu_393_p3();
    void thread_select_ln61_fu_435_p3();
    void thread_sext_ln1494_1_fu_409_p1();
    void thread_sext_ln1494_fu_355_p1();
    void thread_sext_ln203_1_fu_264_p1();
    void thread_sext_ln203_fu_211_p1();
    void thread_shl_ln61_1_fu_227_p3();
    void thread_shl_ln_fu_181_p3();
    void thread_sub_ln1494_1_fu_413_p2();
    void thread_sub_ln1494_fu_349_p2();
    void thread_sub_ln203_1_fu_268_p2();
    void thread_sub_ln203_fu_205_p2();
    void thread_tmp_1_fu_337_p3();
    void thread_tmp_7_fu_256_p3();
    void thread_tmp_8_fu_189_p3();
    void thread_tmp_9_fu_401_p3();
    void thread_tmp_s_fu_325_p3();
    void thread_trunc_ln1494_fu_389_p1();
    void thread_trunc_ln203_fu_244_p1();
    void thread_x_fu_314_p2();
    void thread_y_fu_369_p2();
    void thread_zext_ln1494_4_fu_345_p1();
    void thread_zext_ln1494_5_fu_380_p1();
    void thread_zext_ln1494_6_fu_424_p1();
    void thread_zext_ln1494_fu_333_p1();
    void thread_zext_ln203_10_fu_299_p1();
    void thread_zext_ln203_6_fu_201_p1();
    void thread_zext_ln203_7_fu_235_p1();
    void thread_zext_ln203_8_fu_286_p1();
    void thread_zext_ln203_9_fu_290_p1();
    void thread_zext_ln203_fu_197_p1();
    void thread_zext_ln57_fu_304_p1();
    void thread_zext_ln59_fu_359_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
