

================================================================
== Vivado HLS Report for 'softmax'
================================================================
* Date:           Tue Jul  9 15:58:46 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet_hls_010
* Solution:       s_1
* Product family: zynq
* Target device:  xc7z010-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.588|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  301|  301|  301|  301|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |   18|   18|         2|          -|          -|     9|    no    |
        |- Loop 2  |  144|  144|        16|          -|          -|     9|    no    |
        |- Loop 3  |  135|  135|        15|          -|          -|     9|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 35
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 5 
4 --> 3 
5 --> 6 21 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 5 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 21 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 36 [2/2] (1.75ns)   --->   "%max_val_V = load i16* getelementptr inbounds ([10 x i16]* @FC2_out_V, i64 0, i64 0), align 16" [function.cpp:240]   --->   Operation 36 'load' 'max_val_V' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 2 <SV = 1> <Delay = 1.75>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface([10 x float]* %out_r, [5 x i8]* @p_str16, i32 0, i32 0, [1 x i8]* @p_str117, i32 0, i32 0, [1 x i8]* @p_str117, [1 x i8]* @p_str117, [1 x i8]* @p_str117, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str117, [1 x i8]* @p_str117) nounwind"   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/2] (1.75ns)   --->   "%max_val_V = load i16* getelementptr inbounds ([10 x i16]* @FC2_out_V, i64 0, i64 0), align 16" [function.cpp:240]   --->   Operation 38 'load' 'max_val_V' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 39 [1/1] (0.46ns)   --->   "br label %1" [function.cpp:243]   --->   Operation 39 'br' <Predicate = true> <Delay = 0.46>

State 3 <SV = 2> <Delay = 1.75>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%p_Val2_1 = phi i16 [ %max_val_V, %0 ], [ %select_ln245, %._crit_edge ]"   --->   Operation 40 'phi' 'p_Val2_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 1, %0 ], [ %i, %._crit_edge ]"   --->   Operation 41 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.96ns)   --->   "%icmp_ln243 = icmp eq i4 %i_0, -6" [function.cpp:243]   --->   Operation 42 'icmp' 'icmp_ln243' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 43 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "br i1 %icmp_ln243, label %.preheader89.preheader, label %._crit_edge" [function.cpp:243]   --->   Operation 44 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln245 = zext i4 %i_0 to i64" [function.cpp:245]   --->   Operation 45 'zext' 'zext_ln245' <Predicate = (!icmp_ln243)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%FC2_out_V_addr = getelementptr [10 x i16]* @FC2_out_V, i64 0, i64 %zext_ln245" [function.cpp:245]   --->   Operation 46 'getelementptr' 'FC2_out_V_addr' <Predicate = (!icmp_ln243)> <Delay = 0.00>
ST_3 : Operation 47 [2/2] (1.75ns)   --->   "%max_val_V_1 = load i16* %FC2_out_V_addr, align 2" [function.cpp:245]   --->   Operation 47 'load' 'max_val_V_1' <Predicate = (!icmp_ln243)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 48 [1/1] (0.99ns)   --->   "%i = add i4 %i_0, 1" [function.cpp:243]   --->   Operation 48 'add' 'i' <Predicate = (!icmp_ln243)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%rhs_V = sext i16 %p_Val2_1 to i17" [function.cpp:251]   --->   Operation 49 'sext' 'rhs_V' <Predicate = (icmp_ln243)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.46ns)   --->   "br label %.preheader89" [function.cpp:249]   --->   Operation 50 'br' <Predicate = (icmp_ln243)> <Delay = 0.46>

State 4 <SV = 3> <Delay = 4.52>
ST_4 : Operation 51 [1/2] (1.75ns)   --->   "%max_val_V_1 = load i16* %FC2_out_V_addr, align 2" [function.cpp:245]   --->   Operation 51 'load' 'max_val_V_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_4 : Operation 52 [1/1] (2.13ns)   --->   "%icmp_ln1494 = icmp sgt i16 %max_val_V_1, %p_Val2_1" [function.cpp:245]   --->   Operation 52 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.62ns)   --->   "%select_ln245 = select i1 %icmp_ln1494, i16 %max_val_V_1, i16 %p_Val2_1" [function.cpp:245]   --->   Operation 53 'select' 'select_ln245' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br label %1" [function.cpp:243]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.75>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%sum_0 = phi float [ %sum, %_ZN13ap_fixed_baseILi17ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv ], [ 0.000000e+00, %.preheader89.preheader ]"   --->   Operation 55 'phi' 'sum_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%i1_0 = phi i4 [ %i_1, %_ZN13ap_fixed_baseILi17ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv ], [ 1, %.preheader89.preheader ]"   --->   Operation 56 'phi' 'i1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.96ns)   --->   "%icmp_ln249 = icmp eq i4 %i1_0, -6" [function.cpp:249]   --->   Operation 57 'icmp' 'icmp_ln249' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 58 'speclooptripcount' 'empty_17' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %icmp_ln249, label %.preheader.preheader, label %_ZN13ap_fixed_baseILi17ELi7ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi16ELi6ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv" [function.cpp:249]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln251 = zext i4 %i1_0 to i64" [function.cpp:251]   --->   Operation 60 'zext' 'zext_ln251' <Predicate = (!icmp_ln249)> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%FC2_out_V_addr_1 = getelementptr [10 x i16]* @FC2_out_V, i64 0, i64 %zext_ln251" [function.cpp:251]   --->   Operation 61 'getelementptr' 'FC2_out_V_addr_1' <Predicate = (!icmp_ln249)> <Delay = 0.00>
ST_5 : Operation 62 [2/2] (1.75ns)   --->   "%p_Val2_s = load i16* %FC2_out_V_addr_1, align 2" [function.cpp:251]   --->   Operation 62 'load' 'p_Val2_s' <Predicate = (!icmp_ln249)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_5 : Operation 63 [1/1] (0.99ns)   --->   "%i_1 = add i4 1, %i1_0" [function.cpp:249]   --->   Operation 63 'add' 'i_1' <Predicate = (!icmp_ln249)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 64 [1/1] (0.46ns)   --->   "br label %.preheader" [function.cpp:255]   --->   Operation 64 'br' <Predicate = (icmp_ln249)> <Delay = 0.46>

State 6 <SV = 4> <Delay = 8.27>
ST_6 : Operation 65 [1/2] (1.75ns)   --->   "%p_Val2_s = load i16* %FC2_out_V_addr_1, align 2" [function.cpp:251]   --->   Operation 65 'load' 'p_Val2_s' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%lhs_V = sext i16 %p_Val2_s to i17" [function.cpp:251]   --->   Operation 66 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (1.54ns)   --->   "%tmp_V_3 = sub i17 %lhs_V, %rhs_V" [function.cpp:251]   --->   Operation 67 'sub' 'tmp_V_3' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (2.13ns)   --->   "%icmp_ln935 = icmp eq i16 %p_Val2_s, %p_Val2_1" [function.cpp:251]   --->   Operation 68 'icmp' 'icmp_ln935' <Predicate = true> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%p_Result_6 = call i1 @_ssdm_op_BitSelect.i1.i17.i32(i17 %tmp_V_3, i32 16)" [function.cpp:251]   --->   Operation 69 'bitselect' 'p_Result_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (1.55ns)   --->   "%tmp_V = sub i17 0, %tmp_V_3" [function.cpp:251]   --->   Operation 70 'sub' 'tmp_V' <Predicate = true> <Delay = 1.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 71 [1/1] (0.62ns)   --->   "%tmp_V_4 = select i1 %p_Result_6, i17 %tmp_V, i17 %tmp_V_3" [function.cpp:251]   --->   Operation 71 'select' 'tmp_V_4' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%p_Result_s = call i17 @llvm.part.select.i17(i17 %tmp_V_4, i32 16, i32 0) nounwind" [function.cpp:251]   --->   Operation 72 'partselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%p_Result_7 = call i32 @_ssdm_op_BitConcatenate.i32.i15.i17(i15 -1, i17 %p_Result_s)" [function.cpp:251]   --->   Operation 73 'bitconcatenate' 'p_Result_7' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (2.79ns)   --->   "%l = call i32 @llvm.cttz.i32(i32 %p_Result_7, i1 true) nounwind" [function.cpp:251]   --->   Operation 74 'cttz' 'l' <Predicate = true> <Delay = 2.79> <Core = "CTTZ">   --->   Core 64 'CTTZ' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'cttz'> <InPorts = 1> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln943 = trunc i32 %l to i8" [function.cpp:251]   --->   Operation 75 'trunc' 'trunc_ln943' <Predicate = true> <Delay = 0.00>

State 7 <SV = 5> <Delay = 6.55>
ST_7 : Operation 76 [1/1] (1.89ns)   --->   "%sub_ln944 = sub nsw i32 17, %l" [function.cpp:251]   --->   Operation 76 'sub' 'sub_ln944' <Predicate = (!icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln944 = trunc i32 %sub_ln944 to i17" [function.cpp:251]   --->   Operation 77 'trunc' 'trunc_ln944' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (1.89ns)   --->   "%lsb_index = add nsw i32 -24, %sub_ln944" [function.cpp:251]   --->   Operation 78 'add' 'lsb_index' <Predicate = (!icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%tmp_4 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %lsb_index, i32 1, i32 31)" [function.cpp:251]   --->   Operation 79 'partselect' 'tmp_4' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (1.96ns)   --->   "%icmp_ln947 = icmp sgt i31 %tmp_4, 0" [function.cpp:251]   --->   Operation 80 'icmp' 'icmp_ln947' <Predicate = (!icmp_ln935)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln947 = trunc i32 %sub_ln944 to i5" [function.cpp:251]   --->   Operation 81 'trunc' 'trunc_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 82 [1/1] (1.02ns)   --->   "%sub_ln947 = sub i5 10, %trunc_ln947" [function.cpp:251]   --->   Operation 82 'sub' 'sub_ln947' <Predicate = (!icmp_ln935)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%zext_ln947 = zext i5 %sub_ln947 to i17" [function.cpp:251]   --->   Operation 83 'zext' 'zext_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%lshr_ln947 = lshr i17 -1, %zext_ln947" [function.cpp:251]   --->   Operation 84 'lshr' 'lshr_ln947' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln947_1)   --->   "%p_Result_4 = and i17 %tmp_V_4, %lshr_ln947" [function.cpp:251]   --->   Operation 85 'and' 'p_Result_4' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (2.18ns) (out node of the LUT)   --->   "%icmp_ln947_1 = icmp ne i17 %p_Result_4, 0" [function.cpp:251]   --->   Operation 86 'icmp' 'icmp_ln947_1' <Predicate = (!icmp_ln935)> <Delay = 2.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%a = and i1 %icmp_ln947, %icmp_ln947_1" [function.cpp:251]   --->   Operation 87 'and' 'a' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %lsb_index, i32 31)" [function.cpp:251]   --->   Operation 88 'bitselect' 'tmp_5' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%xor_ln949 = xor i1 %tmp_5, true" [function.cpp:251]   --->   Operation 89 'xor' 'xor_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 90 [1/1] (1.55ns)   --->   "%add_ln949 = add i17 -24, %trunc_ln944" [function.cpp:251]   --->   Operation 90 'add' 'add_ln949' <Predicate = (!icmp_ln935)> <Delay = 1.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%p_Result_3 = call i1 @_ssdm_op_BitSelect.i1.i17.i17(i17 %tmp_V_4, i17 %add_ln949)" [function.cpp:251]   --->   Operation 91 'bitselect' 'p_Result_3' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_7 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%and_ln949 = and i1 %p_Result_3, %xor_ln949" [function.cpp:251]   --->   Operation 92 'and' 'and_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node or_ln)   --->   "%or_ln949 = or i1 %and_ln949, %a" [function.cpp:251]   --->   Operation 93 'or' 'or_ln949' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.80ns) (out node of the LUT)   --->   "%or_ln = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 0, i1 %or_ln949)" [function.cpp:251]   --->   Operation 94 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln935)> <Delay = 0.80>
ST_7 : Operation 95 [1/1] (1.96ns)   --->   "%icmp_ln958 = icmp sgt i32 %lsb_index, 0" [function.cpp:251]   --->   Operation 95 'icmp' 'icmp_ln958' <Predicate = (!icmp_ln935)> <Delay = 1.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 6> <Delay = 8.24>
ST_8 : Operation 96 [1/1] (0.00ns)   --->   "%m = zext i17 %tmp_V_4 to i32" [function.cpp:251]   --->   Operation 96 'zext' 'm' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_8 : Operation 97 [1/1] (1.89ns)   --->   "%add_ln958 = add nsw i32 -25, %sub_ln944" [function.cpp:251]   --->   Operation 97 'add' 'add_ln958' <Predicate = (icmp_ln958 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%lshr_ln958 = lshr i32 %m, %add_ln958" [function.cpp:251]   --->   Operation 98 'lshr' 'lshr_ln958' <Predicate = (icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/1] (1.89ns)   --->   "%sub_ln958 = sub i32 25, %sub_ln944" [function.cpp:251]   --->   Operation 99 'sub' 'sub_ln958' <Predicate = (!icmp_ln958 & !icmp_ln935)> <Delay = 1.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%shl_ln958 = shl i32 %m, %sub_ln958" [function.cpp:251]   --->   Operation 100 'shl' 'shl_ln958' <Predicate = (!icmp_ln958 & !icmp_ln935)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 2.93> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node m_2)   --->   "%m_1 = select i1 %icmp_ln958, i32 %lshr_ln958, i32 %shl_ln958" [function.cpp:251]   --->   Operation 101 'select' 'm_1' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (2.93ns) (out node of the LUT)   --->   "%m_2 = add i32 %m_1, %or_ln" [function.cpp:251]   --->   Operation 102 'add' 'm_2' <Predicate = (!icmp_ln935)> <Delay = 2.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%m_5 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %m_2, i32 1, i32 31)" [function.cpp:251]   --->   Operation 103 'partselect' 'm_5' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%m_6 = zext i31 %m_5 to i32" [function.cpp:251]   --->   Operation 104 'zext' 'm_6' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (0.00ns)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %m_2, i32 25)" [function.cpp:251]   --->   Operation 105 'bitselect' 'tmp_6' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.44ns)   --->   "%select_ln964 = select i1 %tmp_6, i8 127, i8 126" [function.cpp:251]   --->   Operation 106 'select' 'select_ln964' <Predicate = (!icmp_ln935)> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln964 = sub i8 7, %trunc_ln943" [function.cpp:251]   --->   Operation 107 'sub' 'sub_ln964' <Predicate = (!icmp_ln935)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 108 [1/1] (2.96ns) (root node of TernaryAdder)   --->   "%add_ln964 = add i8 %select_ln964, %sub_ln964" [function.cpp:251]   --->   Operation 108 'add' 'add_ln964' <Predicate = (!icmp_ln935)> <Delay = 2.96> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 109 [1/1] (0.00ns)   --->   "%tmp_3 = call i9 @_ssdm_op_BitConcatenate.i9.i1.i8(i1 %p_Result_6, i8 %add_ln964)" [function.cpp:251]   --->   Operation 109 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%p_Result_8 = call i32 @_ssdm_op_PartSet.i32.i32.i9.i32.i32(i32 %m_6, i9 %tmp_3, i32 23, i32 31)" [function.cpp:251]   --->   Operation 110 'partset' 'p_Result_8' <Predicate = (!icmp_ln935)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 7.83>
ST_9 : Operation 111 [1/1] (0.00ns)   --->   "%bitcast_ln739 = bitcast i32 %p_Result_8 to float" [function.cpp:251]   --->   Operation 111 'bitcast' 'bitcast_ln739' <Predicate = (!icmp_ln935)> <Delay = 0.00>
ST_9 : Operation 112 [1/1] (0.70ns)   --->   "%select_ln935 = select i1 %icmp_ln935, float 0.000000e+00, float %bitcast_ln739" [function.cpp:251]   --->   Operation 112 'select' 'select_ln935' <Predicate = true> <Delay = 0.70> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 113 [8/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 113 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 10 <SV = 8> <Delay = 7.12>
ST_10 : Operation 114 [7/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 114 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 11 <SV = 9> <Delay = 7.12>
ST_11 : Operation 115 [6/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 115 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 10> <Delay = 7.12>
ST_12 : Operation 116 [5/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 116 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 13 <SV = 11> <Delay = 7.12>
ST_13 : Operation 117 [4/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 117 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 12> <Delay = 7.12>
ST_14 : Operation 118 [3/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 118 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 15 <SV = 13> <Delay = 7.12>
ST_15 : Operation 119 [2/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 119 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 14> <Delay = 7.12>
ST_16 : Operation 120 [1/8] (7.12ns)   --->   "%tmp_1 = call float @llvm.exp.f32(float %select_ln935)" [function.cpp:251]   --->   Operation 120 'fexp' 'tmp_1' <Predicate = true> <Delay = 7.12> <Core = "FExp">   --->   Core 127 'FExp' <Latency = 7> <II = 1> <Delay = 7.12> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 17 <SV = 15> <Delay = 8.58>
ST_17 : Operation 121 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr [10 x float]* %out_r, i64 0, i64 %zext_ln251" [function.cpp:251]   --->   Operation 121 'getelementptr' 'out_addr_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 122 [1/1] (1.75ns)   --->   "store float %tmp_1, float* %out_addr_1, align 4" [function.cpp:251]   --->   Operation 122 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_17 : Operation 123 [4/4] (8.58ns)   --->   "%sum = fadd float %sum_0, %tmp_1" [function.cpp:252]   --->   Operation 123 'fadd' 'sum' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 16> <Delay = 8.58>
ST_18 : Operation 124 [3/4] (8.58ns)   --->   "%sum = fadd float %sum_0, %tmp_1" [function.cpp:252]   --->   Operation 124 'fadd' 'sum' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 17> <Delay = 8.58>
ST_19 : Operation 125 [2/4] (8.58ns)   --->   "%sum = fadd float %sum_0, %tmp_1" [function.cpp:252]   --->   Operation 125 'fadd' 'sum' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 18> <Delay = 8.58>
ST_20 : Operation 126 [1/4] (8.58ns)   --->   "%sum = fadd float %sum_0, %tmp_1" [function.cpp:252]   --->   Operation 126 'fadd' 'sum' <Predicate = true> <Delay = 8.58> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 8.58> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 127 [1/1] (0.00ns)   --->   "br label %.preheader89" [function.cpp:249]   --->   Operation 127 'br' <Predicate = true> <Delay = 0.00>

State 21 <SV = 4> <Delay = 1.75>
ST_21 : Operation 128 [1/1] (0.00ns)   --->   "%i2_0 = phi i4 [ %i_2, %2 ], [ 1, %.preheader.preheader ]"   --->   Operation 128 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 129 [1/1] (0.96ns)   --->   "%icmp_ln255 = icmp eq i4 %i2_0, -6" [function.cpp:255]   --->   Operation 129 'icmp' 'icmp_ln255' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 130 [1/1] (0.00ns)   --->   "%empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 130 'speclooptripcount' 'empty_18' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 131 [1/1] (0.00ns)   --->   "br i1 %icmp_ln255, label %3, label %2" [function.cpp:255]   --->   Operation 131 'br' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln257 = zext i4 %i2_0 to i64" [function.cpp:257]   --->   Operation 132 'zext' 'zext_ln257' <Predicate = (!icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 133 [1/1] (0.00ns)   --->   "%out_addr = getelementptr [10 x float]* %out_r, i64 0, i64 %zext_ln257" [function.cpp:257]   --->   Operation 133 'getelementptr' 'out_addr' <Predicate = (!icmp_ln255)> <Delay = 0.00>
ST_21 : Operation 134 [2/2] (1.75ns)   --->   "%out_load = load float* %out_addr, align 4" [function.cpp:257]   --->   Operation 134 'load' 'out_load' <Predicate = (!icmp_ln255)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_21 : Operation 135 [1/1] (0.99ns)   --->   "%i_2 = add i4 %i2_0, 1" [function.cpp:255]   --->   Operation 135 'add' 'i_2' <Predicate = (!icmp_ln255)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 136 [1/1] (0.00ns)   --->   "ret void" [function.cpp:259]   --->   Operation 136 'ret' <Predicate = (icmp_ln255)> <Delay = 0.00>

State 22 <SV = 5> <Delay = 1.75>
ST_22 : Operation 137 [1/2] (1.75ns)   --->   "%out_load = load float* %out_addr, align 4" [function.cpp:257]   --->   Operation 137 'load' 'out_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 23 <SV = 6> <Delay = 7.19>
ST_23 : Operation 138 [12/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 138 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 7> <Delay = 7.19>
ST_24 : Operation 139 [11/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 139 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 8> <Delay = 7.19>
ST_25 : Operation 140 [10/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 140 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 9> <Delay = 7.19>
ST_26 : Operation 141 [9/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 141 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 10> <Delay = 7.19>
ST_27 : Operation 142 [8/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 142 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 11> <Delay = 7.19>
ST_28 : Operation 143 [7/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 143 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 12> <Delay = 7.19>
ST_29 : Operation 144 [6/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 144 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 13> <Delay = 7.19>
ST_30 : Operation 145 [5/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 145 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 14> <Delay = 7.19>
ST_31 : Operation 146 [4/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 146 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 15> <Delay = 7.19>
ST_32 : Operation 147 [3/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 147 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 16> <Delay = 7.19>
ST_33 : Operation 148 [2/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 148 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 17> <Delay = 7.19>
ST_34 : Operation 149 [1/12] (7.19ns)   --->   "%tmp = fdiv float %out_load, %sum_0" [function.cpp:257]   --->   Operation 149 'fdiv' 'tmp' <Predicate = true> <Delay = 7.19> <Core = "FDiv">   --->   Core 107 'FDiv' <Latency = 11> <II = 1> <Delay = 7.19> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 18> <Delay = 1.75>
ST_35 : Operation 150 [1/1] (1.75ns)   --->   "store float %tmp, float* %out_addr, align 4" [function.cpp:257]   --->   Operation 150 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_35 : Operation 151 [1/1] (0.00ns)   --->   "br label %.preheader" [function.cpp:255]   --->   Operation 151 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.75ns
The critical path consists of the following:
	'load' operation ('max_val.V', function.cpp:240) on array 'FC2_out_V' [4]  (1.75 ns)

 <State 2>: 1.75ns
The critical path consists of the following:
	'load' operation ('max_val.V', function.cpp:240) on array 'FC2_out_V' [4]  (1.75 ns)

 <State 3>: 1.75ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', function.cpp:243) [8]  (0 ns)
	'getelementptr' operation ('FC2_out_V_addr', function.cpp:245) [14]  (0 ns)
	'load' operation ('max_val.V', function.cpp:245) on array 'FC2_out_V' [15]  (1.75 ns)

 <State 4>: 4.52ns
The critical path consists of the following:
	'load' operation ('max_val.V', function.cpp:245) on array 'FC2_out_V' [15]  (1.75 ns)
	'icmp' operation ('icmp_ln1494', function.cpp:245) [16]  (2.14 ns)
	'select' operation ('select_ln245', function.cpp:245) [17]  (0.627 ns)

 <State 5>: 1.75ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', function.cpp:249) [25]  (0 ns)
	'getelementptr' operation ('FC2_out_V_addr_1', function.cpp:251) [31]  (0 ns)
	'load' operation ('__Val2__', function.cpp:251) on array 'FC2_out_V' [32]  (1.75 ns)

 <State 6>: 8.28ns
The critical path consists of the following:
	'load' operation ('__Val2__', function.cpp:251) on array 'FC2_out_V' [32]  (1.75 ns)
	'sub' operation ('tmp.V', function.cpp:251) [34]  (1.54 ns)
	'sub' operation ('tmp.V', function.cpp:251) [37]  (1.55 ns)
	'select' operation ('tmp.V', function.cpp:251) [38]  (0.622 ns)
	'cttz' operation ('l', function.cpp:251) [41]  (2.8 ns)

 <State 7>: 6.55ns
The critical path consists of the following:
	'sub' operation ('sub_ln944', function.cpp:251) [42]  (1.9 ns)
	'add' operation ('lsb_index', function.cpp:251) [44]  (1.9 ns)
	'icmp' operation ('icmp_ln947', function.cpp:251) [46]  (1.96 ns)
	'and' operation ('a', function.cpp:251) [53]  (0 ns)
	'or' operation ('or_ln949', function.cpp:251) [59]  (0 ns)
	blocking operation 0.8 ns on control path)

 <State 8>: 8.25ns
The critical path consists of the following:
	'add' operation ('add_ln958', function.cpp:251) [63]  (1.9 ns)
	'lshr' operation ('lshr_ln958', function.cpp:251) [64]  (0 ns)
	'select' operation ('m', function.cpp:251) [67]  (0 ns)
	'add' operation ('m', function.cpp:251) [68]  (2.94 ns)
	'select' operation ('select_ln964', function.cpp:251) [72]  (0.448 ns)
	'add' operation ('add_ln964', function.cpp:251) [75]  (2.97 ns)

 <State 9>: 7.83ns
The critical path consists of the following:
	'select' operation ('select_ln935', function.cpp:251) [79]  (0.705 ns)
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 10>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 11>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 12>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 13>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 14>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 15>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 16>: 7.13ns
The critical path consists of the following:
	'fexp' operation ('tmp_1', function.cpp:251) [80]  (7.13 ns)

 <State 17>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('sum', function.cpp:252) [83]  (8.59 ns)

 <State 18>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('sum', function.cpp:252) [83]  (8.59 ns)

 <State 19>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('sum', function.cpp:252) [83]  (8.59 ns)

 <State 20>: 8.59ns
The critical path consists of the following:
	'fadd' operation ('sum', function.cpp:252) [83]  (8.59 ns)

 <State 21>: 1.75ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', function.cpp:255) [89]  (0 ns)
	'getelementptr' operation ('out_addr', function.cpp:257) [95]  (0 ns)
	'load' operation ('out_load', function.cpp:257) on array 'out_r' [96]  (1.75 ns)

 <State 22>: 1.75ns
The critical path consists of the following:
	'load' operation ('out_load', function.cpp:257) on array 'out_r' [96]  (1.75 ns)

 <State 23>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 24>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 25>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 26>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 27>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 28>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 29>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 30>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 31>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 32>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 33>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 34>: 7.2ns
The critical path consists of the following:
	'fdiv' operation ('tmp', function.cpp:257) [97]  (7.2 ns)

 <State 35>: 1.75ns
The critical path consists of the following:
	'store' operation ('store_ln257', function.cpp:257) of variable 'tmp', function.cpp:257 on array 'out_r' [98]  (1.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
