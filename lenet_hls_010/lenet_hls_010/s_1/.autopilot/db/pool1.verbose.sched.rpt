

================================================================
== Vivado HLS Report for 'pool1'
================================================================
* Date:           Tue Jul  9 15:58:43 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet_hls_010
* Solution:       s_1
* Product family: zynq
* Target device:  xc7z010-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.405|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-------+-------+-------+-------+---------+
    |    Latency    |    Interval   | Pipeline|
    |  min  |  max  |  min  |  max  |   Type  |
    +-------+-------+-------+-------+---------+
    |  16885|  16885|  16885|  16885|   none  |
    +-------+-------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |                      |    Latency    | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |  min  |  max  |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+
        |- Loop 1              |  16884|  16884|      1206|          -|          -|    14|    no    |
        | + pool1_1            |   1204|   1204|        86|          -|          -|    14|    no    |
        |  ++ pool1_2          |     84|     84|        14|          -|          -|     6|    no    |
        |   +++ pool1_2.1      |     12|     12|         6|          -|          -|     2|    no    |
        |    ++++ pool1_2.1.1  |      4|      4|         2|          -|          -|     2|    no    |
        +----------------------+-------+-------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 8 [1/1] (0.46ns)   --->   "br label %.loopexit9" [function.cpp:50]   --->   Operation 8 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.30>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %.loopexit9.loopexit ]"   --->   Operation 9 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.96ns)   --->   "%icmp_ln50 = icmp eq i4 %i_0, -2" [function.cpp:50]   --->   Operation 10 'icmp' 'icmp_ln50' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.99ns)   --->   "%i = add i4 %i_0, 1" [function.cpp:50]   --->   Operation 12 'add' 'i' <Predicate = true> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %icmp_ln50, label %2, label %.preheader26.preheader" [function.cpp:50]   --->   Operation 13 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%shl_ln = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %i_0, i1 false)" [function.cpp:61]   --->   Operation 14 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_8 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %i_0, i4 0)" [function.cpp:67]   --->   Operation 15 'bitconcatenate' 'tmp_8' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %tmp_8 to i9" [function.cpp:67]   --->   Operation 16 'zext' 'zext_ln203' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln203_6 = zext i5 %shl_ln to i9" [function.cpp:67]   --->   Operation 17 'zext' 'zext_ln203_6' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.30ns)   --->   "%sub_ln203 = sub i9 %zext_ln203, %zext_ln203_6" [function.cpp:67]   --->   Operation 18 'sub' 'sub_ln203' <Predicate = (!icmp_ln50)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln203 = sext i9 %sub_ln203 to i10" [function.cpp:67]   --->   Operation 19 'sext' 'sext_ln203' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.46ns)   --->   "br label %.preheader26" [function.cpp:52]   --->   Operation 20 'br' <Predicate = (!icmp_ln50)> <Delay = 0.46>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "ret void" [function.cpp:71]   --->   Operation 21 'ret' <Predicate = (icmp_ln50)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.90>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%j_0 = phi i4 [ %j, %pool1_1_end ], [ 0, %.preheader26.preheader ]"   --->   Operation 22 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.96ns)   --->   "%icmp_ln52 = icmp eq i4 %j_0, -2" [function.cpp:52]   --->   Operation 23 'icmp' 'icmp_ln52' <Predicate = true> <Delay = 0.96> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)"   --->   Operation 24 'speclooptripcount' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.99ns)   --->   "%j = add i4 %j_0, 1" [function.cpp:52]   --->   Operation 25 'add' 'j' <Predicate = true> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln52, label %.loopexit9.loopexit, label %pool1_1_begin" [function.cpp:52]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str4) nounwind" [function.cpp:53]   --->   Operation 27 'specloopname' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str4)" [function.cpp:53]   --->   Operation 28 'specregionbegin' 'tmp' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln61_1 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %j_0, i1 false)" [function.cpp:61]   --->   Operation 29 'bitconcatenate' 'shl_ln61_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln203_7 = zext i4 %j_0 to i10" [function.cpp:67]   --->   Operation 30 'zext' 'zext_ln203_7' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (1.36ns)   --->   "%add_ln203 = add i10 %zext_ln203_7, %sext_ln203" [function.cpp:67]   --->   Operation 31 'add' 'add_ln203' <Predicate = (!icmp_ln52)> <Delay = 1.36> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln203 = trunc i10 %add_ln203 to i9" [function.cpp:67]   --->   Operation 32 'trunc' 'trunc_ln203' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%p_shl2_cast = call i12 @_ssdm_op_BitConcatenate.i12.i9.i3(i9 %trunc_ln203, i3 0)" [function.cpp:67]   --->   Operation 33 'bitconcatenate' 'p_shl2_cast' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_7 = call i11 @_ssdm_op_BitConcatenate.i11.i10.i1(i10 %add_ln203, i1 false)" [function.cpp:67]   --->   Operation 34 'bitconcatenate' 'tmp_7' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%sext_ln203_1 = sext i11 %tmp_7 to i12" [function.cpp:67]   --->   Operation 35 'sext' 'sext_ln203_1' <Predicate = (!icmp_ln52)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (1.54ns)   --->   "%sub_ln203_1 = sub i12 %p_shl2_cast, %sext_ln203_1" [function.cpp:67]   --->   Operation 36 'sub' 'sub_ln203_1' <Predicate = (!icmp_ln52)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 37 [1/1] (0.46ns)   --->   "br label %1" [function.cpp:54]   --->   Operation 37 'br' <Predicate = (!icmp_ln52)> <Delay = 0.46>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "br label %.loopexit9"   --->   Operation 38 'br' <Predicate = (icmp_ln52)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.54>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%k_0 = phi i3 [ 0, %pool1_1_begin ], [ %k, %pool1_2_end ]"   --->   Operation 39 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.98ns)   --->   "%icmp_ln54 = icmp eq i3 %k_0, -2" [function.cpp:54]   --->   Operation 40 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%empty_25 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 6, i64 6, i64 6)"   --->   Operation 41 'speclooptripcount' 'empty_25' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.76ns)   --->   "%k = add i3 %k_0, 1" [function.cpp:54]   --->   Operation 42 'add' 'k' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln54, label %pool1_1_end, label %pool1_2_begin" [function.cpp:54]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str5) nounwind" [function.cpp:55]   --->   Operation 44 'specloopname' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str5)" [function.cpp:55]   --->   Operation 45 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln203_8 = zext i3 %k_0 to i14" [function.cpp:67]   --->   Operation 46 'zext' 'zext_ln203_8' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln203_9 = zext i3 %k_0 to i12" [function.cpp:67]   --->   Operation 47 'zext' 'zext_ln203_9' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (1.54ns)   --->   "%add_ln203_3 = add i12 %sub_ln203_1, %zext_ln203_9" [function.cpp:67]   --->   Operation 48 'add' 'add_ln203_3' <Predicate = (!icmp_ln54)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln203_10 = zext i12 %add_ln203_3 to i64" [function.cpp:67]   --->   Operation 49 'zext' 'zext_ln203_10' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%out_V_addr = getelementptr [1176 x i16]* %out_V, i64 0, i64 %zext_ln203_10" [function.cpp:67]   --->   Operation 50 'getelementptr' 'out_V_addr' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.46ns)   --->   "br label %.loopexit" [function.cpp:57]   --->   Operation 51 'br' <Predicate = (!icmp_ln54)> <Delay = 0.46>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%empty_29 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str4, i32 %tmp)" [function.cpp:69]   --->   Operation 52 'specregionend' 'empty_29' <Predicate = (icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "br label %.preheader26" [function.cpp:52]   --->   Operation 53 'br' <Predicate = (icmp_ln54)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.77>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%p_07_1 = phi i16 [ 0, %pool1_2_begin ], [ %p_07_2, %.loopexit.loopexit ]" [function.cpp:61]   --->   Operation 54 'phi' 'p_07_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%x_0 = phi i2 [ 0, %pool1_2_begin ], [ %x, %.loopexit.loopexit ]"   --->   Operation 55 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i2 %x_0 to i5" [function.cpp:57]   --->   Operation 56 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.50ns)   --->   "%icmp_ln57 = icmp eq i2 %x_0, -2" [function.cpp:57]   --->   Operation 57 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 58 'speclooptripcount' 'empty_26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.63ns)   --->   "%x = add i2 %x_0, 1" [function.cpp:57]   --->   Operation 59 'add' 'x' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 60 [1/1] (0.00ns)   --->   "br i1 %icmp_ln57, label %pool1_2_end, label %.preheader.preheader" [function.cpp:57]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 61 [1/1] (1.02ns)   --->   "%add_ln61 = add i5 %zext_ln57, %shl_ln" [function.cpp:61]   --->   Operation 61 'add' 'add_ln61' <Predicate = (!icmp_ln57)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_s = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %add_ln61, i5 0)" [function.cpp:61]   --->   Operation 62 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln1494 = zext i10 %tmp_s to i11" [function.cpp:61]   --->   Operation 63 'zext' 'zext_ln1494' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %add_ln61, i2 0)" [function.cpp:61]   --->   Operation 64 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln1494_4 = zext i7 %tmp_1 to i11" [function.cpp:61]   --->   Operation 65 'zext' 'zext_ln1494_4' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (1.41ns)   --->   "%sub_ln1494 = sub i11 %zext_ln1494, %zext_ln1494_4" [function.cpp:61]   --->   Operation 66 'sub' 'sub_ln1494' <Predicate = (!icmp_ln57)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln1494 = sext i11 %sub_ln1494 to i12" [function.cpp:61]   --->   Operation 67 'sext' 'sext_ln1494' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 68 [1/1] (0.46ns)   --->   "br label %.preheader" [function.cpp:59]   --->   Operation 68 'br' <Predicate = (!icmp_ln57)> <Delay = 0.46>
ST_5 : Operation 69 [1/1] (2.77ns)   --->   "store i16 %p_07_1, i16* %out_V_addr, align 2" [function.cpp:67]   --->   Operation 69 'store' <Predicate = (icmp_ln57)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1176> <RAM>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%empty_28 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str5, i32 %tmp_4)" [function.cpp:68]   --->   Operation 70 'specregionend' 'empty_28' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "br label %1" [function.cpp:54]   --->   Operation 71 'br' <Predicate = (icmp_ln57)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 8.40>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "%p_07_2 = phi i16 [ %select_ln61, %._crit_edge ], [ %p_07_1, %.preheader.preheader ]" [function.cpp:61]   --->   Operation 72 'phi' 'p_07_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%y_0 = phi i2 [ %y, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 73 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i2 %y_0 to i5" [function.cpp:59]   --->   Operation 74 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.50ns)   --->   "%icmp_ln59 = icmp eq i2 %y_0, -2" [function.cpp:59]   --->   Operation 75 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 76 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (0.63ns)   --->   "%y = add i2 %y_0, 1" [function.cpp:59]   --->   Operation 77 'add' 'y' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %icmp_ln59, label %.loopexit.loopexit, label %._crit_edge" [function.cpp:59]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 79 [1/1] (1.02ns)   --->   "%add_ln61_1 = add i5 %zext_ln59, %shl_ln61_1" [function.cpp:61]   --->   Operation 79 'add' 'add_ln61_1' <Predicate = (!icmp_ln59)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln1494_5 = zext i5 %add_ln61_1 to i12" [function.cpp:61]   --->   Operation 80 'zext' 'zext_ln1494_5' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (1.48ns)   --->   "%add_ln1494 = add i12 %sext_ln1494, %zext_ln1494_5" [function.cpp:61]   --->   Operation 81 'add' 'add_ln1494' <Predicate = (!icmp_ln59)> <Delay = 1.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln1494 = trunc i12 %add_ln1494 to i11" [function.cpp:61]   --->   Operation 82 'trunc' 'trunc_ln1494' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns)   --->   "%p_shl6_cast = call i14 @_ssdm_op_BitConcatenate.i14.i11.i3(i11 %trunc_ln1494, i3 0)" [function.cpp:61]   --->   Operation 83 'bitconcatenate' 'p_shl6_cast' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_9 = call i13 @_ssdm_op_BitConcatenate.i13.i12.i1(i12 %add_ln1494, i1 false)" [function.cpp:61]   --->   Operation 84 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln1494_1 = sext i13 %tmp_9 to i14" [function.cpp:61]   --->   Operation 85 'sext' 'sext_ln1494_1' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln1494_1 = sub i14 %p_shl6_cast, %sext_ln1494_1" [function.cpp:61]   --->   Operation 86 'sub' 'sub_ln1494_1' <Predicate = (!icmp_ln59)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 87 [1/1] (3.13ns) (root node of TernaryAdder)   --->   "%add_ln1494_3 = add i14 %sub_ln1494_1, %zext_ln203_8" [function.cpp:61]   --->   Operation 87 'add' 'add_ln1494_3' <Predicate = (!icmp_ln59)> <Delay = 3.13> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.56> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln1494_6 = zext i14 %add_ln1494_3 to i64" [function.cpp:61]   --->   Operation 88 'zext' 'zext_ln1494_6' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%C1_out_V_addr = getelementptr [4704 x i16]* @C1_out_V, i64 0, i64 %zext_ln1494_6" [function.cpp:61]   --->   Operation 89 'getelementptr' 'C1_out_V_addr' <Predicate = (!icmp_ln59)> <Delay = 0.00>
ST_6 : Operation 90 [2/2] (2.77ns)   --->   "%max_V = load i16* %C1_out_V_addr, align 2" [function.cpp:61]   --->   Operation 90 'load' 'max_V' <Predicate = (!icmp_ln59)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1176> <RAM>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 91 'br' <Predicate = (icmp_ln59)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 5.53>
ST_7 : Operation 92 [1/2] (2.77ns)   --->   "%max_V = load i16* %C1_out_V_addr, align 2" [function.cpp:61]   --->   Operation 92 'load' 'max_V' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1176> <RAM>
ST_7 : Operation 93 [1/1] (2.13ns)   --->   "%icmp_ln1494 = icmp sgt i16 %max_V, %p_07_2" [function.cpp:61]   --->   Operation 93 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.62ns)   --->   "%select_ln61 = select i1 %icmp_ln1494, i16 %max_V, i16 %p_07_2" [function.cpp:61]   --->   Operation 94 'select' 'select_ln61' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "br label %.preheader" [function.cpp:59]   --->   Operation 95 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', function.cpp:50) [5]  (0.466 ns)

 <State 2>: 1.31ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', function.cpp:50) [5]  (0 ns)
	'sub' operation ('sub_ln203', function.cpp:67) [15]  (1.31 ns)

 <State 3>: 2.91ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', function.cpp:52) [19]  (0 ns)
	'add' operation ('add_ln203', function.cpp:67) [29]  (1.36 ns)
	'sub' operation ('sub_ln203_1', function.cpp:67) [34]  (1.55 ns)

 <State 4>: 1.55ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', function.cpp:54) [37]  (0 ns)
	'add' operation ('add_ln203_3', function.cpp:67) [47]  (1.55 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'phi' operation ('p_07_1', function.cpp:61) with incoming values : ('select_ln61', function.cpp:61) [52]  (0 ns)
	'store' operation ('store_ln67', function.cpp:67) of variable 'p_07_1', function.cpp:61 on array 'out_V' [95]  (2.77 ns)

 <State 6>: 8.41ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', function.cpp:59) [70]  (0 ns)
	'add' operation ('add_ln61_1', function.cpp:61) [77]  (1.02 ns)
	'add' operation ('add_ln1494', function.cpp:61) [79]  (1.48 ns)
	'sub' operation ('sub_ln1494_1', function.cpp:61) [84]  (0 ns)
	'add' operation ('add_ln1494_3', function.cpp:61) [85]  (3.13 ns)
	'getelementptr' operation ('C1_out_V_addr', function.cpp:61) [87]  (0 ns)
	'load' operation ('max.V', function.cpp:61) on array 'C1_out_V' [88]  (2.77 ns)

 <State 7>: 5.54ns
The critical path consists of the following:
	'load' operation ('max.V', function.cpp:61) on array 'C1_out_V' [88]  (2.77 ns)
	'icmp' operation ('icmp_ln1494', function.cpp:61) [89]  (2.14 ns)
	'select' operation ('select_ln61', function.cpp:61) [90]  (0.627 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
