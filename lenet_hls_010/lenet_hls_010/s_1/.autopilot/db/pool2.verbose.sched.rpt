

================================================================
== Vivado HLS Report for 'pool2'
================================================================
* Date:           Tue Jul  9 15:58:44 2024

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lenet_hls_010
* Solution:       s_1
* Product family: zynq
* Target device:  xc7z010-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     6.620|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  5661|  5661|  5661|  5661|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+------+------+----------+-----------+-----------+------+----------+
        |                      |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |       Loop Name      |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1              |  5660|  5660|      1132|          -|          -|     5|    no    |
        | + Loop 1.1           |  1130|  1130|       226|          -|          -|     5|    no    |
        |  ++ pool2_1          |   224|   224|        14|          -|          -|    16|    no    |
        |   +++ pool2_1.1      |    12|    12|         6|          -|          -|     2|    no    |
        |    ++++ pool2_1.1.1  |     4|     4|         2|          -|          -|     2|    no    |
        +----------------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 4 
6 --> 7 5 
7 --> 6 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 8 [1/1] (0.46ns)   --->   "br label %.loopexit4" [function.cpp:119]   --->   Operation 8 'br' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 1.02>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %i, %.loopexit4.loopexit ]"   --->   Operation 9 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.98ns)   --->   "%icmp_ln119 = icmp eq i3 %i_0, -3" [function.cpp:119]   --->   Operation 10 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 11 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.76ns)   --->   "%i = add i3 %i_0, 1" [function.cpp:119]   --->   Operation 12 'add' 'i' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "br i1 %icmp_ln119, label %1, label %.preheader27.preheader" [function.cpp:119]   --->   Operation 13 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %i_0, i1 false)" [function.cpp:130]   --->   Operation 14 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i3 %i_0 to i6" [function.cpp:136]   --->   Operation 15 'zext' 'zext_ln203' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_1 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %i_0, i2 0)" [function.cpp:136]   --->   Operation 16 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i5 %tmp_1 to i6" [function.cpp:136]   --->   Operation 17 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln119)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.02ns)   --->   "%add_ln203 = add i6 %zext_ln203, %zext_ln203_1" [function.cpp:136]   --->   Operation 18 'add' 'add_ln203' <Predicate = (!icmp_ln119)> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.46ns)   --->   "br label %.preheader27" [function.cpp:121]   --->   Operation 19 'br' <Predicate = (!icmp_ln119)> <Delay = 0.46>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "ret void" [function.cpp:140]   --->   Operation 20 'ret' <Predicate = (icmp_ln119)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.28>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %.preheader27.preheader ], [ %j, %.preheader27.loopexit ]"   --->   Operation 21 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (0.98ns)   --->   "%icmp_ln121 = icmp eq i3 %j_0, -3" [function.cpp:121]   --->   Operation 22 'icmp' 'icmp_ln121' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 23 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.76ns)   --->   "%j = add i3 %j_0, 1" [function.cpp:121]   --->   Operation 24 'add' 'j' <Predicate = true> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "br i1 %icmp_ln121, label %.loopexit4.loopexit, label %.preheader26.preheader" [function.cpp:121]   --->   Operation 25 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%shl_ln130_1 = call i4 @_ssdm_op_BitConcatenate.i4.i3.i1(i3 %j_0, i1 false)" [function.cpp:130]   --->   Operation 26 'bitconcatenate' 'shl_ln130_1' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln203_2 = zext i3 %j_0 to i6" [function.cpp:136]   --->   Operation 27 'zext' 'zext_ln203_2' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.28ns)   --->   "%add_ln203_1 = add i6 %zext_ln203_2, %add_ln203" [function.cpp:136]   --->   Operation 28 'add' 'add_ln203_1' <Predicate = (!icmp_ln121)> <Delay = 1.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_3_cast = call i10 @_ssdm_op_BitConcatenate.i10.i6.i4(i6 %add_ln203_1, i4 0)" [function.cpp:123]   --->   Operation 29 'bitconcatenate' 'tmp_3_cast' <Predicate = (!icmp_ln121)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.46ns)   --->   "br label %.preheader26" [function.cpp:123]   --->   Operation 30 'br' <Predicate = (!icmp_ln121)> <Delay = 0.46>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "br label %.loopexit4"   --->   Operation 31 'br' <Predicate = (icmp_ln121)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.41>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%k_0 = phi i5 [ %k, %pool2_1_end ], [ 0, %.preheader26.preheader ]"   --->   Operation 32 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.97ns)   --->   "%icmp_ln123 = icmp eq i5 %k_0, -16" [function.cpp:123]   --->   Operation 33 'icmp' 'icmp_ln123' <Predicate = true> <Delay = 0.97> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 34 [1/1] (0.00ns)   --->   "%empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 34 'speclooptripcount' 'empty_20' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 35 [1/1] (1.02ns)   --->   "%k = add i5 %k_0, 1" [function.cpp:123]   --->   Operation 35 'add' 'k' <Predicate = true> <Delay = 1.02> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "br i1 %icmp_ln123, label %.preheader27.loopexit, label %pool2_1_begin" [function.cpp:123]   --->   Operation 36 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @p_str11) nounwind" [function.cpp:124]   --->   Operation 37 'specloopname' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([8 x i8]* @p_str11)" [function.cpp:124]   --->   Operation 38 'specregionbegin' 'tmp' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln203_3 = zext i5 %k_0 to i12" [function.cpp:136]   --->   Operation 39 'zext' 'zext_ln203_3' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln203_4 = zext i5 %k_0 to i10" [function.cpp:136]   --->   Operation 40 'zext' 'zext_ln203_4' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (1.41ns)   --->   "%add_ln203_2 = add i10 %tmp_3_cast, %zext_ln203_4" [function.cpp:136]   --->   Operation 41 'add' 'add_ln203_2' <Predicate = (!icmp_ln123)> <Delay = 1.41> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln203_5 = zext i10 %add_ln203_2 to i64" [function.cpp:136]   --->   Operation 42 'zext' 'zext_ln203_5' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%out_V_addr = getelementptr [400 x i16]* %out_V, i64 0, i64 %zext_ln203_5" [function.cpp:136]   --->   Operation 43 'getelementptr' 'out_V_addr' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.46ns)   --->   "br label %.loopexit" [function.cpp:126]   --->   Operation 44 'br' <Predicate = (!icmp_ln123)> <Delay = 0.46>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "br label %.preheader27"   --->   Operation 45 'br' <Predicate = (icmp_ln123)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.77>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%p_07_1 = phi i16 [ 0, %pool2_1_begin ], [ %p_07_2, %.loopexit.loopexit ]" [function.cpp:130]   --->   Operation 46 'phi' 'p_07_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%x_0 = phi i2 [ 0, %pool2_1_begin ], [ %x, %.loopexit.loopexit ]"   --->   Operation 47 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i2 %x_0 to i4" [function.cpp:126]   --->   Operation 48 'zext' 'zext_ln126' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 49 [1/1] (0.50ns)   --->   "%icmp_ln126 = icmp eq i2 %x_0, -2" [function.cpp:126]   --->   Operation 49 'icmp' 'icmp_ln126' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 50 'speclooptripcount' 'empty_21' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (0.63ns)   --->   "%x = add i2 %x_0, 1" [function.cpp:126]   --->   Operation 51 'add' 'x' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %icmp_ln126, label %pool2_1_end, label %.preheader.preheader" [function.cpp:126]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 53 [1/1] (0.99ns)   --->   "%add_ln130 = add i4 %zext_ln126, %shl_ln" [function.cpp:130]   --->   Operation 53 'add' 'add_ln130' <Predicate = (!icmp_ln126)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_4 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %add_ln130, i3 0)" [function.cpp:130]   --->   Operation 54 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln1494 = zext i7 %tmp_4 to i8" [function.cpp:130]   --->   Operation 55 'zext' 'zext_ln1494' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_5 = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %add_ln130, i1 false)" [function.cpp:130]   --->   Operation 56 'bitconcatenate' 'tmp_5' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln1494_1 = zext i5 %tmp_5 to i8" [function.cpp:130]   --->   Operation 57 'zext' 'zext_ln1494_1' <Predicate = (!icmp_ln126)> <Delay = 0.00>
ST_5 : Operation 58 [1/1] (1.31ns)   --->   "%add_ln1494 = add i8 %zext_ln1494_1, %zext_ln1494" [function.cpp:130]   --->   Operation 58 'add' 'add_ln1494' <Predicate = (!icmp_ln126)> <Delay = 1.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 59 [1/1] (0.46ns)   --->   "br label %.preheader" [function.cpp:128]   --->   Operation 59 'br' <Predicate = (!icmp_ln126)> <Delay = 0.46>
ST_5 : Operation 60 [1/1] (2.77ns)   --->   "store i16 %p_07_1, i16* %out_V_addr, align 2" [function.cpp:136]   --->   Operation 60 'store' <Predicate = (icmp_ln126)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 400> <RAM>
ST_5 : Operation 61 [1/1] (0.00ns)   --->   "%empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([8 x i8]* @p_str11, i32 %tmp)" [function.cpp:137]   --->   Operation 61 'specregionend' 'empty_23' <Predicate = (icmp_ln126)> <Delay = 0.00>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "br label %.preheader26" [function.cpp:123]   --->   Operation 62 'br' <Predicate = (icmp_ln126)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 6.62>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%p_07_2 = phi i16 [ %select_ln130, %._crit_edge ], [ %p_07_1, %.preheader.preheader ]" [function.cpp:130]   --->   Operation 63 'phi' 'p_07_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%y_0 = phi i2 [ %y, %._crit_edge ], [ 0, %.preheader.preheader ]"   --->   Operation 64 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i2 %y_0 to i4" [function.cpp:128]   --->   Operation 65 'zext' 'zext_ln128' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.50ns)   --->   "%icmp_ln128 = icmp eq i2 %y_0, -2" [function.cpp:128]   --->   Operation 66 'icmp' 'icmp_ln128' <Predicate = true> <Delay = 0.50> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 67 'speclooptripcount' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.63ns)   --->   "%y = add i2 %y_0, 1" [function.cpp:128]   --->   Operation 68 'add' 'y' <Predicate = true> <Delay = 0.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %icmp_ln128, label %.loopexit.loopexit, label %._crit_edge" [function.cpp:128]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.99ns)   --->   "%add_ln130_1 = add i4 %shl_ln130_1, %zext_ln128" [function.cpp:130]   --->   Operation 70 'add' 'add_ln130_1' <Predicate = (!icmp_ln128)> <Delay = 0.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln1494_2 = zext i4 %add_ln130_1 to i8" [function.cpp:130]   --->   Operation 71 'zext' 'zext_ln1494_2' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_6 : Operation 72 [1/1] (1.30ns)   --->   "%add_ln1494_1 = add i8 %zext_ln1494_2, %add_ln1494" [function.cpp:130]   --->   Operation 72 'add' 'add_ln1494_1' <Predicate = (!icmp_ln128)> <Delay = 1.30> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%tmp_7_cast = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %add_ln1494_1, i4 0)" [function.cpp:130]   --->   Operation 73 'bitconcatenate' 'tmp_7_cast' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (1.54ns)   --->   "%add_ln1494_2 = add i12 %zext_ln203_3, %tmp_7_cast" [function.cpp:130]   --->   Operation 74 'add' 'add_ln1494_2' <Predicate = (!icmp_ln128)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln1494_3 = zext i12 %add_ln1494_2 to i64" [function.cpp:130]   --->   Operation 75 'zext' 'zext_ln1494_3' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%C2_out_V_addr = getelementptr [1600 x i16]* @C2_out_V, i64 0, i64 %zext_ln1494_3" [function.cpp:130]   --->   Operation 76 'getelementptr' 'C2_out_V_addr' <Predicate = (!icmp_ln128)> <Delay = 0.00>
ST_6 : Operation 77 [2/2] (2.77ns)   --->   "%max_V = load i16* %C2_out_V_addr, align 2" [function.cpp:130]   --->   Operation 77 'load' 'max_V' <Predicate = (!icmp_ln128)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 400> <RAM>
ST_6 : Operation 78 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 78 'br' <Predicate = (icmp_ln128)> <Delay = 0.00>

State 7 <SV = 6> <Delay = 5.53>
ST_7 : Operation 79 [1/2] (2.77ns)   --->   "%max_V = load i16* %C2_out_V_addr, align 2" [function.cpp:130]   --->   Operation 79 'load' 'max_V' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 400> <RAM>
ST_7 : Operation 80 [1/1] (2.13ns)   --->   "%icmp_ln1494 = icmp sgt i16 %max_V, %p_07_2" [function.cpp:130]   --->   Operation 80 'icmp' 'icmp_ln1494' <Predicate = true> <Delay = 2.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 81 [1/1] (0.62ns)   --->   "%select_ln130 = select i1 %icmp_ln1494, i16 %max_V, i16 %p_07_2" [function.cpp:130]   --->   Operation 81 'select' 'select_ln130' <Predicate = true> <Delay = 0.62> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (0.00ns)   --->   "br label %.preheader" [function.cpp:128]   --->   Operation 82 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.466ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', function.cpp:119) [5]  (0.466 ns)

 <State 2>: 1.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', function.cpp:119) [5]  (0 ns)
	'add' operation ('add_ln203', function.cpp:136) [15]  (1.02 ns)

 <State 3>: 1.28ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', function.cpp:121) [18]  (0 ns)
	'add' operation ('add_ln203_1', function.cpp:136) [26]  (1.28 ns)

 <State 4>: 1.42ns
The critical path consists of the following:
	'phi' operation ('k') with incoming values : ('k', function.cpp:123) [30]  (0 ns)
	'add' operation ('add_ln203_2', function.cpp:136) [40]  (1.42 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'phi' operation ('p_07_1', function.cpp:130) with incoming values : ('select_ln130', function.cpp:130) [45]  (0 ns)
	'store' operation ('store_ln136', function.cpp:136) of variable 'p_07_1', function.cpp:130 on array 'out_V' [83]  (2.77 ns)

 <State 6>: 6.62ns
The critical path consists of the following:
	'phi' operation ('y') with incoming values : ('y', function.cpp:128) [62]  (0 ns)
	'add' operation ('add_ln130_1', function.cpp:130) [69]  (0.997 ns)
	'add' operation ('add_ln1494_1', function.cpp:130) [71]  (1.31 ns)
	'add' operation ('add_ln1494_2', function.cpp:130) [73]  (1.55 ns)
	'getelementptr' operation ('C2_out_V_addr', function.cpp:130) [75]  (0 ns)
	'load' operation ('max.V', function.cpp:130) on array 'C2_out_V' [76]  (2.77 ns)

 <State 7>: 5.54ns
The critical path consists of the following:
	'load' operation ('max.V', function.cpp:130) on array 'C2_out_V' [76]  (2.77 ns)
	'icmp' operation ('icmp_ln1494', function.cpp:130) [77]  (2.14 ns)
	'select' operation ('select_ln130', function.cpp:130) [78]  (0.627 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
