#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("input_r_Addr_A", 32, hls_out, 0, "bram", "MemPortADDR2", 1),
	Port_Property("input_r_EN_A", 1, hls_out, 0, "bram", "MemPortCE2", 1),
	Port_Property("input_r_WEN_A", 4, hls_out, 0, "bram", "MemPortWE2", 1),
	Port_Property("input_r_Din_A", 32, hls_out, 0, "bram", "MemPortDIN2", 1),
	Port_Property("input_r_Dout_A", 32, hls_in, 0, "bram", "MemPortDOUT2", 1),
	Port_Property("input_r_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("input_r_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("Cout_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("Cout_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("Cout_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("Cout_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("Cout_Dout_A", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("Cout_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("Cout_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("s_axi_Crtl_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_Crtl_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_Crtl_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "lenet";
